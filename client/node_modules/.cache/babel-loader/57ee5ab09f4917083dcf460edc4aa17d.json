{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/src/components/Customer/DatePicker.js\";\nimport React, { Component } from 'react';\nimport mobiscroll from '@mobiscroll/react';\nimport '@mobiscroll/react/dist/css/mobiscroll.min.css';\n\nclass DatePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateLabels = () => {\n      const labels = ReactDOM.findDOMNode(this.slider).parentNode.querySelectorAll('.mbsc-progress-step-label');\n      const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n      for (let i = 0; i < labels.length; ++i) {\n        labels[i].innerHTML = dayNames[i];\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.updateLabels();\n    };\n\n    this.componentDidUpdate = () => {\n      this.updateLabels();\n    };\n\n    this.onSliderChange = value => {\n      const meeting = new Date(this.nextSunday);\n      meeting.setDate(meeting.getDate() + value);\n      this.setState({\n        selectedItem: value,\n        nextMeeting: this.monthNames[meeting.getMonth()] + \" \" + meeting.getDate()\n      });\n    };\n\n    this.setRef = comp => {\n      this.slider = comp;\n    };\n\n    const d = new Date();\n    const diff = d.getDate() - d.getDay();\n    this.nextSunday = new Date(d.setDate(diff + 7));\n    this.monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    this.state = {\n      val: new Date(),\n      nextSunday: null,\n      nextMeeting: this.monthNames[this.nextSunday.getMonth()] + \" \" + this.nextSunday.getDate(),\n      selectedItem: 0\n    };\n  }\n\n  render() {\n    return React.createElement(mobiscroll.Form, {\n      theme: \"ios\",\n      themeVariant: \"light\",\n      className: \"md-dateslider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mbsc-padding md-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Pick the day for your next visit\"), React.createElement(mobiscroll.FormGroup, {\n      inset: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(mobiscroll.Slider, {\n      ref: this.setRef,\n      value: this.state.selectedItem,\n      onChange: this.onSliderChange,\n      \"data-step-labels\": \"[0, 1, 2, 3, 4, 5, 6]\",\n      step: \"1\",\n      min: \"0\",\n      max: \"6\",\n      theme: \"ios\",\n      themeVariant: \"light\",\n      \"data-highlight\": \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mbsc-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-check-cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"md-check mbsc-ic mbsc-ic-material-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), \"We\\u2019ll see each other next week on\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"md-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.nextMeeting), \" @ 5PM\")));\n  }\n\n}\n\nexport default DatePicker;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/src/components/Customer/DatePicker.js"],"names":["React","Component","mobiscroll","DatePicker","constructor","props","updateLabels","labels","ReactDOM","findDOMNode","slider","parentNode","querySelectorAll","dayNames","i","length","innerHTML","componentDidMount","componentDidUpdate","onSliderChange","value","meeting","Date","nextSunday","setDate","getDate","setState","selectedItem","nextMeeting","monthNames","getMonth","setRef","comp","d","diff","getDay","state","val","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport mobiscroll from '@mobiscroll/react';\nimport '@mobiscroll/react/dist/css/mobiscroll.min.css';\n\nclass DatePicker extends React.Component {\n    constructor(props) {\n        super(props);\n        \n         const d = new Date();\n         const diff = d.getDate() - d.getDay();\n            \n        this.nextSunday = new Date(d.setDate(diff + 7));\n        this.monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        \n        this.state = {\n            val: new Date(),\n            nextSunday: null,\n            \n            nextMeeting:  this.monthNames[this.nextSunday.getMonth()] + \" \" + this.nextSunday.getDate(),\n            selectedItem: 0\n        };\n        \n    }\n    \n    updateLabels = () => {\n        const labels = ReactDOM.findDOMNode(this.slider).parentNode.querySelectorAll('.mbsc-progress-step-label');\n        const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n            \n        for (let i = 0; i < labels.length; ++i) {\n            labels[i].innerHTML = dayNames[i];\n        }\n    }\n    \n    componentDidMount = () => {\n        this.updateLabels();\n    }\n    \n    componentDidUpdate = () => {\n        this.updateLabels();\n    }\n    \n    onSliderChange = (value) => {\n        const meeting = new Date(this.nextSunday);\n        meeting.setDate(meeting.getDate() + value);\n        \n        this.setState({ \n            selectedItem: value,\n            nextMeeting: this.monthNames[meeting.getMonth()] + \" \" + meeting.getDate()\n        });\n    }\n    \n    setRef = (comp) => {\n        this.slider = comp;\n    }\n    \n    render() {\n        return (\n\t\t\t<mobiscroll.Form theme=\"ios\"  themeVariant=\"light\"  className=\"md-dateslider\">\n\t\t\t\t<div className=\"mbsc-padding md-header\">\n\t\t\t\t\tPick the day for your next visit\n\t\t\t\t</div>\n                <mobiscroll.FormGroup inset>\n\t\t\t\t\t<mobiscroll.Slider \n                        ref={this.setRef}\n\t\t\t\t\t\tvalue={this.state.selectedItem} \n                        onChange={this.onSliderChange}\n\t\t\t\t\t\tdata-step-labels=\"[0, 1, 2, 3, 4, 5, 6]\"\n\t\t\t\t\t\tstep=\"1\"\n                        min=\"0\"\n                        max=\"6\"\n\t\t\t\t\t\ttheme=\"ios\" \n\t\t\t\t\t\tthemeVariant=\"light\"\n\t\t\t\t\t\tdata-highlight=\"false\"\n\t\t\t\t\t/>\n\t\t\t\t</mobiscroll.FormGroup>\n\t\t\t\t<div className=\"mbsc-padding\">\n\t\t\t\t\t<div className=\"md-check-cont\"><span className=\"md-check mbsc-ic mbsc-ic-material-check\"></span></div>\n\t\t\t\t\tWeâ€™ll see each other next week on\n\t\t\t\t\t<div><a className=\"md-date\">{this.state.nextMeeting}</a> @ 5PM</div>\n\t\t\t\t</div>\n\t\t\t</mobiscroll.Form>\n        );\n    }    \n}\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}