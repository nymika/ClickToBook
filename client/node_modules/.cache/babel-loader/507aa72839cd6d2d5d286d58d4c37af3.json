{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/ShowTheatres.js\";\nimport React, { Component } from 'react';\nimport styles from './stylesheets/ShowTheatres.module.css';\nimport axios from 'axios';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport TheatreSeats from './TheatreSeats';\nimport tick from './images/tick.png';\n\nclass ShowTheatres extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: '',\n      getSlots: false,\n      theatres: [],\n      getSeats: false,\n      selectedSlotId: ''\n    };\n\n    this.updateDateState = event => {\n      this.setState({\n        date: event.target.value\n      });\n    };\n  }\n\n  GetSlotsAPIHandler() {\n    this.setState({\n      getSlots: true\n    });\n    console.log(this.state);\n    console.log('slots are done');\n    axios.put(`http://localhost:3000/shows/${this.props.movieId}`, this.state).then(response => {\n      //console.log(response.data)\n      this.setState({\n        theatres: response.data\n      });\n      console.log(this.state.theatres);\n    }).catch(e => alert(e));\n  }\n\n  GetSeats(slotId) {\n    console.log('theatres seats showed!');\n    this.setState({\n      getSeats: true,\n      selectedSlotId: slotId\n    });\n  } // componentDidMount() {\n  //     console.log(this.props);\n  // }\n\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.ShowTheatresBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      value: this.state.selectedDate,\n      onChange: this.updateDateState,\n      className: styles.DateBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.GetSlotsAPIHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.tick,\n      src: tick,\n      alt: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), this.state.getSlots ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.SingleTheatreBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.theatres.map(theatre => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: styles.MovieName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, theatre.theatre[0].name), theatre.theatre[0].slotInfo.map(slot => {\n        return React.createElement(\"button\", {\n          className: styles.TimeButton,\n          onClick: () => this.GetSeats(slot._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, slot.startTime, \" - \", slot.endTime);\n      }));\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })) : null), this.state.getSeats ? React.createElement(TheatreSeats, {\n      slotId: this.state.selectedSlotId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default ShowTheatres;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/ShowTheatres.js"],"names":["React","Component","styles","axios","BrowserRouter","Route","Link","TheatreSeats","tick","ShowTheatres","state","date","getSlots","theatres","getSeats","selectedSlotId","updateDateState","event","setState","target","value","GetSlotsAPIHandler","console","log","put","props","movieId","then","response","data","catch","e","alert","GetSeats","slotId","render","ShowTheatresBox","selectedDate","DateBox","SingleTheatreBox","map","theatre","MovieName","name","slotInfo","slot","TimeButton","_id","startTime","endTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './stylesheets/ShowTheatres.module.css';\n\nimport axios from 'axios';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport TheatreSeats from './TheatreSeats';\nimport tick from './images/tick.png';\n\nclass ShowTheatres extends Component {\n    state = {\n        date: '',\n        getSlots: false,\n        theatres: [],\n        getSeats : false,\n        selectedSlotId : ''\n    }\n\n    updateDateState = (event) => {\n        this.setState({\n            date: event.target.value,\n        })\n    }\n\n    GetSlotsAPIHandler() {\n        this.setState({\n            getSlots: true\n        })\n        console.log(this.state)\n        console.log('slots are done')\n        axios.put(`http://localhost:3000/shows/${this.props.movieId}`, this.state)\n            .then(response => {\n                //console.log(response.data)\n                this.setState({\n                    theatres: response.data\n                })\n                console.log(this.state.theatres)\n            }).catch((e) => alert(e))\n    }\n\n    GetSeats(slotId) {\n        console.log('theatres seats showed!')\n        this.setState({\n            getSeats : true,\n            selectedSlotId : slotId\n        })\n    }\n\n    // componentDidMount() {\n    //     console.log(this.props);\n    // }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <div className={styles.ShowTheatresBox}>\n                        <input type=\"date\" value={this.state.selectedDate} onChange={this.updateDateState} className={styles.DateBox}></input>\n                        <button type=\"submit\" onClick={() => this.GetSlotsAPIHandler()}><img className={styles.tick} src={tick} alt=\"submit\" /></button>\n                        {(this.state.getSlots) ?\n                            <div>\n                                <hr />\n                                <div className={styles.SingleTheatreBox}>\n\n                                    {\n                                        this.state.theatres.map(theatre => {\n                                            return (\n                                                <div>\n                                                    <h4 className={styles.MovieName}>{theatre.theatre[0].name}</h4>\n                                                    {\n                                                        theatre.theatre[0].slotInfo.map(slot => {\n                                                            return (\n                                                                <button className={styles.TimeButton}\n                                                                onClick={  () => this.GetSeats(slot._id)}>{slot.startTime} - {slot.endTime}</button>\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n                                            )\n                                        })}\n                                </div>\n                                <br></br><br></br>\n                            </div> : null}\n                    </div>\n                    {\n                        (this.state.getSeats) ? \n                        <TheatreSeats slotId={this.state.selectedSlotId}/> : null\n                    }\n                    \n                </div>\n            </BrowserRouter>\n        )\n\n    }\n}\n\nexport default ShowTheatres;"]},"metadata":{},"sourceType":"module"}