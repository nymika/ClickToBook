{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/TheatreDetailedPage.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/TheatreDetailedPage.module.css';\nimport SlotDetails from './SlotDetails';\nimport ShowTheatres from \"../Customer/ShowTheatres\";\nimport TheatreSeats from '../Customer/TheatreSeats';\n\nclass TheatreDetailedPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      getSlotInfoBody: {\n        day: \"2020-06-07\"\n      },\n      theatres: []\n    };\n\n    this.ShowTheatresAPIHandler = () => {\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      axios.get('http://localhost:3000/theatres').then(response => {\n        console.log('show theatres done');\n        this.setState({\n          theatres: response.data.active\n        }); //console.log(this.state)\n      }).catch(e => alert(e));\n    };\n\n    this.GetSlotInfoAPIHandler = (slotid, theatreid) => {\n      this.props.history.push(`/TheatreDetailPage/${theatreid}/SlotDetails/${slotid}`);\n      window.location.reload(false);\n    };\n  }\n\n  componentDidMount() {\n    this.ShowTheatresAPIHandler();\n  }\n\n  render() {\n    var selectedTheatreId = this.props.match.params.id;\n    var selectedTheatre = null;\n    this.state.theatres.filter(theatre => {\n      if (theatre._id === selectedTheatreId) {\n        selectedTheatre = theatre;\n      }\n    }); //console.log(selectedTheatre)\n\n    if (selectedTheatre) {\n      return React.createElement(\"div\", {\n        className: styles.movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, selectedTheatre.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" Location : \", selectedTheatre.location.street, \", \", selectedTheatre.location.city, \", \", selectedTheatre.location.state, \", \", selectedTheatre.location.country), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" Lease Info : \", selectedTheatre.leaseInfo.startDate, \" - \", selectedTheatre.leaseInfo.lastDate), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Gold seats : \", selectedTheatre.seatInfo.A, \", Balcony seats : \", selectedTheatre.seatInfo.B)), React.createElement(\"input\", {\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.slotList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, selectedTheatre.slotInfo.map((slot, idx) => {\n        return React.createElement(\"div\", {\n          key: idx,\n          className: styles.slotListElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => this.GetSlotInfoAPIHandler(slot._id, selectedTheatreId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/TheatreDetailPage/:TheatreId/SlotDetails/:SlotId\",\n        exact: true,\n        component: SlotDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    } else return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n}\n\nexport default TheatreDetailedPage;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/TheatreDetailedPage.js"],"names":["React","Component","Route","Link","Switch","axios","styles","SlotDetails","ShowTheatres","TheatreSeats","TheatreDetailedPage","state","getSlotInfoBody","day","theatres","ShowTheatresAPIHandler","defaults","headers","common","localStorage","getItem","get","then","response","console","log","setState","data","active","catch","e","alert","GetSlotInfoAPIHandler","slotid","theatreid","props","history","push","window","location","reload","componentDidMount","render","selectedTheatreId","match","params","id","selectedTheatre","filter","theatre","_id","movie","name","street","city","country","leaseInfo","startDate","lastDate","seatInfo","A","B","slotList","slotInfo","map","slot","idx","slotListElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link,Switch } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport styles from './stylesheets/TheatreDetailedPage.module.css';\nimport SlotDetails from './SlotDetails'\nimport ShowTheatres from \"../Customer/ShowTheatres\";\nimport TheatreSeats from '../Customer/TheatreSeats';\n\nclass TheatreDetailedPage extends Component {\n    state = {\n        getSlotInfoBody: {\n            day: \"2020-06-07\"\n        },\n        theatres: [],\n    }\n\n    ShowTheatresAPIHandler = () => {\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.get('http://localhost:3000/theatres')\n            .then(response => {\n                console.log('show theatres done')\n                this.setState({\n                    theatres: response.data.active,\n                });\n                //console.log(this.state)\n            }).catch((e) => alert(e));\n    }\n\n    componentDidMount() {\n        this.ShowTheatresAPIHandler();\n    }\n\n    GetSlotInfoAPIHandler = (slotid, theatreid) => {\n            this.props.history.push(`/TheatreDetailPage/${theatreid}/SlotDetails/${slotid}`);\n            window.location.reload(false);\n    }\n\n    render() {\n        var selectedTheatreId = this.props.match.params.id;\n        var selectedTheatre = null;\n        this.state.theatres.filter(theatre => {\n            if (theatre._id === selectedTheatreId) {\n                selectedTheatre = theatre\n            }\n        });\n        //console.log(selectedTheatre)\n        if (selectedTheatre) {\n            return (\n                <div className={styles.movie}>\n                    \n                    <div >\n                        <h1 >{selectedTheatre.name}</h1>\n                        <h3 > Location : {selectedTheatre.location.street}, {selectedTheatre.location.city}, {selectedTheatre.location.state}, {selectedTheatre.location.country}</h3>\n                        <h3 > Lease Info : {selectedTheatre.leaseInfo.startDate} - {selectedTheatre.leaseInfo.lastDate}</h3>\n                        <h3 >Gold seats : {selectedTheatre.seatInfo.A}, Balcony seats : {selectedTheatre.seatInfo.B}</h3>\n                    </div>\n\n                    <input type=\"date\"></input>\n                    <div className={styles.slotList}>\n                        {\n                            selectedTheatre.slotInfo.map((slot, idx) => {\n                                return (\n                                    <div key={idx} className={styles.slotListElement}>\n                                        {/* <Link to={`/TheatreDetailPage/${selectedTheatre._id}/SlotDetails/${slot._id}`}>\n                                            <h3>{`Show - ${idx + 1}`}</h3>\n                                            <p>{slot.startTime} - {slot.endTime}</p>\n                                        </Link> */}\n                                        <button onClick={() => this.GetSlotInfoAPIHandler(slot._id, selectedTheatreId)}></button>\n\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                    <Switch>\n                    {/* <Route path={this.props.match.url + \"/SlotDetails/:SlotId\"} component={SlotDetails} /> */}\n                    <Route path=\"/TheatreDetailPage/:TheatreId/SlotDetails/:SlotId\" exact component={SlotDetails} />\n                    \n                    </Switch>\n                </div>\n            )\n        }\n        else\n            return (\n                <h1>Loading</h1>\n            )\n    }\n}\n\nexport default TheatreDetailedPage"]},"metadata":{},"sourceType":"module"}