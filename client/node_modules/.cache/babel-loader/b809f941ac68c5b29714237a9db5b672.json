{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/TheatreDetailedPage.js\";\nimport React, { Component } from 'react'; // import { Route, Link, Switch } from 'react-router-dom';\n\nimport axios from 'axios';\nimport styles from './stylesheets/TheatreDetailedPage.module.css';\nimport SlotDetails from './SlotDetails';\nimport AddMovieToSlot from './AddMovieToSlot';\n\nclass TheatreDetailedPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      getSlotInfoBody: {\n        day: \"2020-06-07\"\n      },\n      theatres: [],\n      selectedSlotInfo: {\n        _id: '',\n        _movie: '',\n        _slot: '',\n        _theatre: '',\n        day: '',\n        seatInfo: {\n          A: {\n            availability: [],\n            price: ''\n          },\n          B: {\n            availability: [],\n            price: ''\n          }\n        }\n      },\n      selectedSlotId: '',\n      selectedTheatreId: ''\n    };\n\n    this.ShowTheatresAPIHandler = () => {\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      axios.get('http://localhost:3000/theatres').then(response => {\n        console.log('show theatres done');\n        this.setState({\n          theatres: response.data.active\n        }); //console.log(this.state)\n      }).catch(e => alert(e));\n    };\n\n    this.updateSlotState = event => {\n      this.setState({\n        getSlotInfoBody: {\n          day: event.target.value\n        }\n      });\n    };\n\n    this.GetSlotInfoAPIHandler = (slotid, theatreid) => {\n      this.setState({\n        selectedSlotInfo: {\n          _id: '',\n          _movie: '',\n          _slot: '',\n          _theatre: '',\n          day: '',\n          seatInfo: {\n            A: {\n              availability: [],\n              price: ''\n            },\n            B: {\n              availability: [],\n              price: ''\n            }\n          }\n        },\n        selectedSlotId: '',\n        selectedTheatreId: ''\n      });\n      console.log('get slotInfo done!');\n      console.log(theatreid, slotid, this.state.getSlotInfoBody);\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      axios.put(`http://localhost:3000/theatres/${theatreid}/${slotid}`, this.state.getSlotInfoBody).then(response => {\n        console.log(response.data);\n\n        if (response.data.movieName) {\n          this.setState({\n            selectedSlotInfo: {\n              _id: response.data.showTime._id,\n              _movie: response.data.showTime._movie,\n              movieName: response.data.movieName.title,\n              _slot: response.data.showTime._slot,\n              _theatre: response.data.showTime._theatre,\n              day: response.data.showTime.day,\n              seatInfo: {\n                A: {\n                  availability: response.data.showTime.seatInfo.A.availability,\n                  price: response.data.showTime.seatInfo.A.price\n                },\n                B: {\n                  availability: response.data.showTime.seatInfo.B.availability,\n                  price: response.data.showTime.seatInfo.B.price\n                }\n              }\n            },\n            selectedSlotId: response.data.showTime._id\n          });\n        } else if (!response.data.movieName) {\n          this.setState({\n            selectedSlotId: response.data._slot,\n            selectedTheatreId: this.props.match.params.id\n          });\n        } //console.log(this.state)\n\n      }).catch(e => alert(e));\n    };\n  }\n\n  componentDidMount() {\n    this.ShowTheatresAPIHandler();\n  }\n\n  render() {\n    var selectedTheatreId = this.props.match.params.id;\n    var selectedTheatre = null;\n    this.state.theatres.filter(theatre => {\n      if (theatre._id === selectedTheatreId) {\n        selectedTheatre = theatre;\n      }\n    }); //console.log(selectedTheatre)\n\n    if (selectedTheatre) {\n      return React.createElement(\"div\", {\n        className: styles.movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, selectedTheatre.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" Location : \", selectedTheatre.location.street, \", \", selectedTheatre.location.city, \", \", selectedTheatre.location.state, \", \", selectedTheatre.location.country), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" Lease Info : \", selectedTheatre.leaseInfo.startDate, \" - \", selectedTheatre.leaseInfo.lastDate), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Gold seats : \", selectedTheatre.seatInfo.A, \", Balcony seats : \", selectedTheatre.seatInfo.B)), React.createElement(\"input\", {\n        type: \"date\",\n        value: this.state.getSlotInfoBody.date,\n        onChange: this.updateSlotState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.slotList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, selectedTheatre.slotInfo.map((slot, idx) => {\n        return React.createElement(\"div\", {\n          key: idx,\n          className: styles.slotListElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => this.GetSlotInfoAPIHandler(slot._id, selectedTheatreId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, `Show - ${idx + 1}`, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }), slot.startTime, \" - \", slot.endTime));\n      })), this.state.selectedSlotId ? this.state.selectedSlotInfo._id ? React.createElement(AddMovieToSlot, {\n        id: this.state.selectedSlotId,\n        date: this.state.getSlotInfoBody.date,\n        theatreId: this.state.selectedTheatreId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }) : React.createElement(SlotDetails, {\n        slot: this.state.selectedSlotInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }) : null\n      /* //  <div>\n      //     <h1>No movie is added in this slot</h1>\n      //     <button>Add Movie In this Slot</button>\n      // </div>  */\n      );\n    } else return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n}\n\nexport default TheatreDetailedPage; // import React, { Component } from 'react';\n// import { Route, Link,Switch } from 'react-router-dom';\n// import axios from 'axios';\n// import styles from './stylesheets/TheatreDetailedPage.module.css';\n// import SlotDetails from './SlotDetails'\n// import ShowTheatres from \"../Customer/ShowTheatres\";\n// import TheatreSeats from '../Customer/TheatreSeats';\n// class TheatreDetailedPage extends Component {\n//     state = {\n//         getSlotInfoBody: {\n//             day: \"2020-06-07\"\n//         },\n//         theatres: [],\n//     }\n//     ShowTheatresAPIHandler = () => {\n//         axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n//         axios.get('http://localhost:3000/theatres')\n//             .then(response => {\n//                 console.log('show theatres done')\n//                 this.setState({\n//                     theatres: response.data.active,\n//                 });\n//                 //console.log(this.state)\n//             }).catch((e) => alert(e));\n//     }\n//     componentDidMount() {\n//         this.ShowTheatresAPIHandler();\n//     }\n//     GetSlotInfoAPIHandler = (slotid, theatreid) => {\n//             this.props.history.push(`/TheatreDetailPage/${theatreid}/SlotDetails/${slotid}`);\n//             window.location.reload(false);\n//     }\n//     render() {\n//         var selectedTheatreId = this.props.match.params.id;\n//         var selectedTheatre = null;\n//         this.state.theatres.filter(theatre => {\n//             if (theatre._id === selectedTheatreId) {\n//                 selectedTheatre = theatre\n//             }\n//         });\n//         //console.log(selectedTheatre)\n//         if (selectedTheatre) {\n//             return (\n//                 <div className={styles.movie}>\n//                     <div >\n//                         <h1 >{selectedTheatre.name}</h1>\n//                         <h3 > Location : {selectedTheatre.location.street}, {selectedTheatre.location.city}, {selectedTheatre.location.state}, {selectedTheatre.location.country}</h3>\n//                         <h3 > Lease Info : {selectedTheatre.leaseInfo.startDate} - {selectedTheatre.leaseInfo.lastDate}</h3>\n//                         <h3 >Gold seats : {selectedTheatre.seatInfo.A}, Balcony seats : {selectedTheatre.seatInfo.B}</h3>\n//                     </div>\n//                     <input type=\"date\"></input>\n//                     <div className={styles.slotList}>\n//                         {\n//                             selectedTheatre.slotInfo.map((slot, idx) => {\n//                                 return (\n//                                     <div key={idx} className={styles.slotListElement}>\n//                                         {/* <Link to={`/TheatreDetailPage/${selectedTheatre._id}/SlotDetails/${slot._id}`}>\n//                                             <h3>{`Show - ${idx + 1}`}</h3>\n//                                             <p>{slot.startTime} - {slot.endTime}</p>\n//                                         </Link> */}\n//                                         <button onClick={() => this.GetSlotInfoAPIHandler(slot._id, selectedTheatreId)}>{`Show - ${idx + 1}`}</button>\n//                                     </div>\n//                                 )\n//                             })\n//                         }\n//                     </div>\n//                     <Route path=\"/TheatreDetailPage/:TheatreId/SlotDetails/:SlotId\" exact component={SlotDetails} />\n//                 </div>\n//             )\n//         }\n//         else\n//             return (\n//                 <h1>Loading</h1>\n//             )\n//     }\n// }\n// export default TheatreDetailedPage","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/TheatreDetailedPage.js"],"names":["React","Component","axios","styles","SlotDetails","AddMovieToSlot","TheatreDetailedPage","state","getSlotInfoBody","day","theatres","selectedSlotInfo","_id","_movie","_slot","_theatre","seatInfo","A","availability","price","B","selectedSlotId","selectedTheatreId","ShowTheatresAPIHandler","defaults","headers","common","localStorage","getItem","get","then","response","console","log","setState","data","active","catch","e","alert","updateSlotState","event","target","value","GetSlotInfoAPIHandler","slotid","theatreid","put","movieName","showTime","title","props","match","params","id","componentDidMount","render","selectedTheatre","filter","theatre","movie","name","location","street","city","country","leaseInfo","startDate","lastDate","date","slotList","slotInfo","map","slot","idx","slotListElement","startTime","endTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import { Route, Link, Switch } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport styles from './stylesheets/TheatreDetailedPage.module.css';\nimport SlotDetails from './SlotDetails'\nimport AddMovieToSlot from './AddMovieToSlot'\n\nclass TheatreDetailedPage extends Component {\n    state = {\n        getSlotInfoBody: {\n            day: \"2020-06-07\"\n        },\n        theatres: [],\n        selectedSlotInfo: {\n            _id: '',\n            _movie: '',\n            _slot: '',\n            _theatre: '',\n            day: '',\n            seatInfo: {\n                A: {\n                    availability: [],\n                    price: ''\n                },\n                B: {\n                    availability: [],\n                    price: ''\n                }\n            }\n        },\n        selectedSlotId: '',\n        selectedTheatreId : ''\n    }\n\n    ShowTheatresAPIHandler = () => {\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.get('http://localhost:3000/theatres')\n            .then(response => {\n                console.log('show theatres done')\n                this.setState({\n                    theatres: response.data.active,\n                });\n                //console.log(this.state)\n            }).catch((e) => alert(e));\n    }\n\n    updateSlotState = (event) => {\n        this.setState({\n            getSlotInfoBody : {\n                day: event.target.value\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.ShowTheatresAPIHandler();\n    }\n\n    GetSlotInfoAPIHandler = (slotid, theatreid) => {\n        this.setState({\n            selectedSlotInfo: {\n                _id: '',\n                _movie: '',\n                _slot: '',\n                _theatre: '',\n                day: '',\n                seatInfo: {\n                    A: {\n                        availability: [],\n                        price: ''\n                    },\n                    B: {\n                        availability: [],\n                        price: ''\n                    }\n                }\n            },\n            selectedSlotId: '',\n            selectedTheatreId : ''\n        })\n        console.log('get slotInfo done!')\n        console.log(theatreid, slotid, this.state.getSlotInfoBody)\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.put(`http://localhost:3000/theatres/${theatreid}/${slotid}`, this.state.getSlotInfoBody)\n            .then(response => {\n                console.log(response.data)\n                if (response.data.movieName) {\n                    this.setState({\n                        selectedSlotInfo: {\n                            _id: response.data.showTime._id,\n                            _movie: response.data.showTime._movie,\n                            movieName : response.data.movieName.title,\n                            _slot: response.data.showTime._slot,\n                            _theatre: response.data.showTime._theatre,\n                            day: response.data.showTime.day,\n                            seatInfo: {\n                                A: {\n                                    availability: response.data.showTime.seatInfo.A.availability,\n                                    price: response.data.showTime.seatInfo.A.price\n                                },\n                                B: {\n                                    availability: response.data.showTime.seatInfo.B.availability,\n                                    price: response.data.showTime.seatInfo.B.price\n                                }\n                            }\n                        },\n                        selectedSlotId: response.data.showTime._id\n\n                    })\n                }\n                else if (!response.data.movieName) {\n                    this.setState({\n\n                        selectedSlotId: response.data._slot,\n                        selectedTheatreId : this.props.match.params.id\n                    })\n                }\n                //console.log(this.state)\n\n            }).catch((e) => alert(e));\n    }\n\n    render() {\n        var selectedTheatreId = this.props.match.params.id;\n        var selectedTheatre = null;\n        this.state.theatres.filter(theatre => {\n            if (theatre._id === selectedTheatreId) {\n                selectedTheatre = theatre\n            }\n        });\n        //console.log(selectedTheatre)\n        if (selectedTheatre) {\n            return (\n                <div className={styles.movie}>\n\n                    <div >\n                        <h1 >{selectedTheatre.name}</h1>\n                        <h3 > Location : {selectedTheatre.location.street}, {selectedTheatre.location.city}, {selectedTheatre.location.state}, {selectedTheatre.location.country}</h3>\n                        <h3 > Lease Info : {selectedTheatre.leaseInfo.startDate} - {selectedTheatre.leaseInfo.lastDate}</h3>\n                        <h3 >Gold seats : {selectedTheatre.seatInfo.A}, Balcony seats : {selectedTheatre.seatInfo.B}</h3>\n                    </div>\n\n                    <input type=\"date\" value={this.state.getSlotInfoBody.date} onChange={this.updateSlotState}></input>\n                    <div className={styles.slotList}>\n                        {\n                            selectedTheatre.slotInfo.map((slot, idx) => {\n                                return (\n                                    <div key={idx} className={styles.slotListElement}>\n                                        <button onClick={() => this.GetSlotInfoAPIHandler(slot._id, selectedTheatreId)}>{`Show - ${idx + 1}`}<br></br>{slot.startTime} - {slot.endTime}</button>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n\n                    {\n                        (this.state.selectedSlotId) ?\n                        \n                            (this.state.selectedSlotInfo._id) ?\n                            <AddMovieToSlot id={this.state.selectedSlotId}\n                            date = {this.state.getSlotInfoBody.date} theatreId = {this.state.selectedTheatreId}/> :\n                                <SlotDetails slot={this.state.selectedSlotInfo} />\n                        : null\n                        /* //  <div>\n                        //     <h1>No movie is added in this slot</h1>\n                        //     <button>Add Movie In this Slot</button>\n                        // </div>  */\n                    }\n                </div>\n            )\n        }\n        else\n            return (\n                <h1>Loading</h1>\n            )\n    }\n}\n\nexport default TheatreDetailedPage\n\n// import React, { Component } from 'react';\n// import { Route, Link,Switch } from 'react-router-dom';\n\n// import axios from 'axios';\n\n// import styles from './stylesheets/TheatreDetailedPage.module.css';\n// import SlotDetails from './SlotDetails'\n// import ShowTheatres from \"../Customer/ShowTheatres\";\n// import TheatreSeats from '../Customer/TheatreSeats';\n\n// class TheatreDetailedPage extends Component {\n//     state = {\n//         getSlotInfoBody: {\n//             day: \"2020-06-07\"\n//         },\n//         theatres: [],\n//     }\n\n//     ShowTheatresAPIHandler = () => {\n//         axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n//         axios.get('http://localhost:3000/theatres')\n//             .then(response => {\n//                 console.log('show theatres done')\n//                 this.setState({\n//                     theatres: response.data.active,\n//                 });\n//                 //console.log(this.state)\n//             }).catch((e) => alert(e));\n//     }\n\n//     componentDidMount() {\n//         this.ShowTheatresAPIHandler();\n//     }\n\n//     GetSlotInfoAPIHandler = (slotid, theatreid) => {\n//             this.props.history.push(`/TheatreDetailPage/${theatreid}/SlotDetails/${slotid}`);\n//             window.location.reload(false);\n//     }\n\n//     render() {\n//         var selectedTheatreId = this.props.match.params.id;\n//         var selectedTheatre = null;\n//         this.state.theatres.filter(theatre => {\n//             if (theatre._id === selectedTheatreId) {\n//                 selectedTheatre = theatre\n//             }\n//         });\n//         //console.log(selectedTheatre)\n//         if (selectedTheatre) {\n//             return (\n//                 <div className={styles.movie}>\n\n//                     <div >\n//                         <h1 >{selectedTheatre.name}</h1>\n//                         <h3 > Location : {selectedTheatre.location.street}, {selectedTheatre.location.city}, {selectedTheatre.location.state}, {selectedTheatre.location.country}</h3>\n//                         <h3 > Lease Info : {selectedTheatre.leaseInfo.startDate} - {selectedTheatre.leaseInfo.lastDate}</h3>\n//                         <h3 >Gold seats : {selectedTheatre.seatInfo.A}, Balcony seats : {selectedTheatre.seatInfo.B}</h3>\n//                     </div>\n\n//                     <input type=\"date\"></input>\n//                     <div className={styles.slotList}>\n//                         {\n//                             selectedTheatre.slotInfo.map((slot, idx) => {\n//                                 return (\n//                                     <div key={idx} className={styles.slotListElement}>\n//                                         {/* <Link to={`/TheatreDetailPage/${selectedTheatre._id}/SlotDetails/${slot._id}`}>\n//                                             <h3>{`Show - ${idx + 1}`}</h3>\n//                                             <p>{slot.startTime} - {slot.endTime}</p>\n//                                         </Link> */}\n//                                         <button onClick={() => this.GetSlotInfoAPIHandler(slot._id, selectedTheatreId)}>{`Show - ${idx + 1}`}</button>\n\n//                                     </div>\n//                                 )\n//                             })\n//                         }\n//                     </div>\n\n//                     <Route path=\"/TheatreDetailPage/:TheatreId/SlotDetails/:SlotId\" exact component={SlotDetails} />\n\n//                 </div>\n//             )\n//         }\n//         else\n//             return (\n//                 <h1>Loading</h1>\n//             )\n//     }\n// }\n\n// export default TheatreDetailedPage"]},"metadata":{},"sourceType":"module"}