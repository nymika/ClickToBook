{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/TheatreSeats.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './stylesheets/TheatreSeats.css';\nimport ETicket from './ETicket';\n\nclass TheatreSeats extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetSlotInfoAPIHandler = () => {\n      //console.log('entered')\n      axios.get(`http://localhost:3000/ticketbooking/${this.props.showTimeId}`).then(response => {\n        //console.log(response.data)\n        this.setState({\n          seatInfo: {\n            'A1': response.data.A.availability[0],\n            'A2': response.data.A.availability[1],\n            'A3': response.data.A.availability[2],\n            'A4': response.data.A.availability[3],\n            'A5': response.data.A.availability[4],\n            'A6': response.data.A.availability[5],\n            'B1': response.data.B.availability[0],\n            'B2': response.data.B.availability[1],\n            'B3': response.data.B.availability[2],\n            'B4': response.data.B.availability[3],\n            'B5': response.data.B.availability[4],\n            'B6': response.data.B.availability[5],\n            'B7': response.data.B.availability[6],\n            'B8': response.data.B.availability[7],\n            'B9': response.data.B.availability[8],\n            'B10': response.data.B.availability[9],\n            'B11': response.data.B.availability[10],\n            'B12': response.data.B.availability[11]\n          }\n        });\n        this.state.seatInfo.map(seat => {\n          if (seat === false) {//send to seatReserved\n          } else {//send to available\n            }\n        });\n        console.log(this.state);\n      }).catch(e => alert(e));\n    };\n\n    this.state = {\n      seat: ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10', 'B11', 'B12'],\n      seatAvailable: ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10', 'B11', 'B12'],\n      seatReserved: [],\n      seatSelected: [],\n      seatInfo: {\n        'A1': '',\n        'A2': '',\n        'A3': '',\n        'A4': '',\n        'A5': '',\n        'A6': '',\n        'B1': '',\n        'B2': '',\n        'B3': '',\n        'B4': '',\n        'B5': '',\n        'B6': '',\n        'B7': '',\n        'B8': '',\n        'B9': '',\n        'B10': '',\n        'B11': '',\n        'B12': ''\n      },\n      showTimeId: this.props.showTimeId\n    };\n  }\n\n  onClickData(seat) {\n    if (this.state.seatReserved.indexOf(seat) > -1) {\n      this.setState({\n        seatAvailable: this.state.seatAvailable.concat(seat),\n        seatReserved: this.state.seatReserved.filter(res => res !== seat) // seatSelected: this.state.seatSelected.filter(res => res != seat)\n\n      });\n    } else {\n      this.setState({\n        seatReserved: this.state.seatReserved.concat(seat),\n        // seatSelected: this.state.seatSelected.concat(seat),\n        seatAvailable: this.state.seatAvailable.filter(res => res !== seat)\n      });\n    }\n  }\n\n  checktrue(row) {\n    if (this.state.seatSelected.indexOf(row) > -1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  handleSubmited() {\n    this.setState({\n      seatSelected: this.state.seatSelected.concat(this.state.seatReserved)\n    }); //console.log(this.state.seatReserved)\n\n    const input = {\n      _showTime: this.state.showTimeId,\n      seatsInfo: this.state.seatReserved\n    };\n    console.log(input);\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n    axios.post('http://localhost:3000/ticket', input).then(response => {\n      console.log(response.data);\n    }).catch(e => alert(e));\n  }\n\n  componentDidMount() {\n    //console.log('selected slot is', this.props.slotId)\n    this.GetSlotInfoAPIHandler();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(DrawGrid, {\n      seat: this.state.seat,\n      available: this.state.seatAvailable,\n      reserved: this.state.seatReserved,\n      selected: this.state.seatSelected,\n      onClickData: this.onClickData.bind(this),\n      checktrue: this.checktrue.bind(this),\n      handleSubmited: this.handleSubmited.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: '/GetTickets',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        console.log(this.state.seatReserved);\n        window.scrollTo(0, 92500);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Get Ticket\")), React.createElement(Route, {\n      path: \"/GetTickets\",\n      render: () => React.createElement(ETicket, {\n        Title: \"Title\",\n        Poster: \"Poster\",\n        Theatre: \"Theatre\",\n        dimen: \"dimen\",\n        language: \"language\",\n        time: \"time\",\n        date: \"date\",\n        numofseats: this.state.seatReserved.length,\n        seats: this.state.seatReserved,\n        ticketprice: \"ticketprice\",\n        conveniencefees: \"conveniencefees\",\n        amountpaid: \"amountpaid\",\n        bookingid: \"bookingid\",\n        bookingdatetime: \"bookingdatetime\",\n        confirmationid: \"confirmationid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass DrawGrid extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.props.seat.map(row => React.createElement(\"td\", {\n      className: this.props.selected.indexOf(row) > -1 ? 'reserved' : this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available',\n      key: row,\n      onClick: this.props.checktrue(row) ? e => this.onClickSeat(row) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, row, \" \"))))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"*A - GOLD seats - Rs.400\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"*B - Balcony seats - Rs.300\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-success btnmargin\",\n      onClick: () => this.props.handleSubmited(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Confirm Booking\"));\n  }\n\n  onClickSeat(seat) {\n    this.props.onClickData(seat);\n  }\n\n}\n\nexport default TheatreSeats; // seat : {\n//     A : ['1','2','3','4','5','6'],\n//     B : ['1','2','3','4','5','6','7','8','9','10','11','12']\n// },\n// seatAvailable: {\n//     A : ['1','2','3','4','5','6'],\n//     B : ['1','2','3','4','5','6','7','8','9','10','11','12']\n// },\n// seatReserved: {\n//     A : [],\n//     B : [],\n// },\n// seatSelected: {\n//     A : [],\n//     B : [],\n// },","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/TheatreSeats.js"],"names":["React","Component","Route","Link","axios","ETicket","TheatreSeats","constructor","props","GetSlotInfoAPIHandler","get","showTimeId","then","response","setState","seatInfo","data","A","availability","B","state","map","seat","console","log","catch","e","alert","seatAvailable","seatReserved","seatSelected","onClickData","indexOf","concat","filter","res","checktrue","row","handleSubmited","input","_showTime","seatsInfo","defaults","headers","common","localStorage","getItem","post","componentDidMount","render","bind","window","scrollTo","length","DrawGrid","selected","reserved","onClickSeat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './stylesheets/TheatreSeats.css';\nimport ETicket from './ETicket';\n\nclass TheatreSeats extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            seat: [\n                'A1', 'A2', 'A3', 'A4', 'A5', 'A6',\n                'B1', 'B2', 'B3', 'B4', 'B5', 'B6',\n                'B7', 'B8', 'B9', 'B10', 'B11', 'B12'\n            ],\n            seatAvailable: [\n                'A1', 'A2', 'A3', 'A4', 'A5', 'A6',\n                'B1', 'B2', 'B3', 'B4', 'B5', 'B6',\n                'B7', 'B8', 'B9', 'B10', 'B11', 'B12'\n            ],\n            seatReserved: [],\n            seatSelected: [],\n            seatInfo: {\n                'A1': '',\n                'A2' : '',\n                'A3' : '',\n                'A4' : '',\n                'A5' : '',\n                'A6' : '',\n                'B1' : '',\n                'B2' : '',\n                'B3' : '',\n                'B4' : '',\n                'B5' : '',\n                'B6' : '',\n                'B7' : '',\n                'B8' : '',\n                'B9' : '',\n                'B10' : '',\n                'B11' : '',\n                'B12' : ''\n            },\n            showTimeId : this.props.showTimeId\n        }\n    }\n\n    GetSlotInfoAPIHandler = () => {\n        //console.log('entered')\n        axios.get(`http://localhost:3000/ticketbooking/${this.props.showTimeId}`)\n            .then(response => {\n                //console.log(response.data)\n                this.setState({\n                    seatInfo : {\n                        'A1' : response.data.A.availability[0],\n                        'A2' : response.data.A.availability[1],\n                        'A3' : response.data.A.availability[2],\n                        'A4' : response.data.A.availability[3],\n                        'A5' : response.data.A.availability[4],\n                        'A6' : response.data.A.availability[5],\n                        'B1' : response.data.B.availability[0],\n                        'B2' : response.data.B.availability[1],\n                        'B3' : response.data.B.availability[2],\n                        'B4' : response.data.B.availability[3],\n                        'B5' : response.data.B.availability[4],\n                        'B6' : response.data.B.availability[5],\n                        'B7' : response.data.B.availability[6],\n                        'B8' : response.data.B.availability[7],\n                        'B9' : response.data.B.availability[8],\n                        'B10' : response.data.B.availability[9],\n                        'B11' : response.data.B.availability[10],\n                        'B12' : response.data.B.availability[11]\n                    }\n                })\n                this.state.seatInfo.map( (seat) => {\n                    if(seat === false)\n                    {\n                        //send to seatReserved\n                    }\n                    else \n                    {\n                        //send to available\n                    }\n                })\n                console.log(this.state)\n            }).catch((e) => alert(e))\n    }\n\n    onClickData(seat) {\n        if (this.state.seatReserved.indexOf(seat) > -1) {\n            this.setState({\n                seatAvailable: this.state.seatAvailable.concat(seat),\n                seatReserved: this.state.seatReserved.filter(res => res !== seat),\n                // seatSelected: this.state.seatSelected.filter(res => res != seat)\n            })\n        } else {\n            this.setState({\n                seatReserved: this.state.seatReserved.concat(seat),\n                // seatSelected: this.state.seatSelected.concat(seat),\n                seatAvailable: this.state.seatAvailable.filter(res => res !== seat)\n            })\n        }\n    }\n    checktrue(row) {\n        if (this.state.seatSelected.indexOf(row) > -1) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    handleSubmited() {\n        this.setState({ seatSelected: this.state.seatSelected.concat(this.state.seatReserved) })\n        //console.log(this.state.seatReserved)\n        const input = {\n            _showTime : this.state.showTimeId,\n            seatsInfo : this.state.seatReserved,\n        }\n        console.log(input)\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\")\n        axios.post('http://localhost:3000/ticket', input)\n            .then(response => {\n                console.log(response.data)\n            }).catch((e) => alert(e))\n    }\n\n    componentDidMount() {\n        //console.log('selected slot is', this.props.slotId)\n        this.GetSlotInfoAPIHandler();\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"Background\">\n                    <div className=\"Box\">\n                        <DrawGrid\n                            seat={this.state.seat}\n                            available={this.state.seatAvailable}\n                            reserved={this.state.seatReserved}\n                            selected={this.state.seatSelected}\n                            onClickData={this.onClickData.bind(this)}\n                            checktrue={this.checktrue.bind(this)}\n                            handleSubmited={this.handleSubmited.bind(this)}\n                        />\n                    </div>\n\n                    <Link to={'/GetTickets'}>\n                        <button type=\"button\" onClick={() => {\n                            console.log(this.state.seatReserved)\n                            window.scrollTo(0, 92500)\n                        }}>Get Ticket</button>\n                    </Link>\n                    <Route path={\"/GetTickets\"} render={() =>\n                    \n                        <ETicket Title={\"Title\"}\n                            Poster={\"Poster\"}\n                            Theatre={\"Theatre\"}\n                            dimen={\"dimen\"}\n                            language={\"language\"}\n                            time={\"time\"}\n                            date={\"date\"}\n                            numofseats={this.state.seatReserved.length}\n                            seats={this.state.seatReserved}\n                            ticketprice={\"ticketprice\"}\n                            conveniencefees={\"conveniencefees\"}\n                            amountpaid={\"amountpaid\"}\n                            bookingid={\"bookingid\"}\n                            bookingdatetime={\"bookingdatetime\"}\n                            confirmationid={\"confirmationid\"} />\n                    } />\n                </div>\n            </div>\n        )\n    }\n}\n\nclass DrawGrid extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <table className=\"grid\">\n                    <tbody>\n                        <tr>\n                            {this.props.seat.map(row =>\n                                <td\n                                    className={this.props.selected.indexOf(row) > -1 ? 'reserved' : (this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available')}\n                                    key={row} onClick={this.props.checktrue(row) ? e => this.onClickSeat(row) : null} >{row} </td>)}\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>*A - GOLD seats - Rs.400</h3>\n                <h3>*B - Balcony seats - Rs.300</h3>\n                <button type=\"button\" className=\"btn-success btnmargin\" onClick={() => this.props.handleSubmited()}>Confirm Booking</button>\n            </div>\n        )\n    }\n\n    onClickSeat(seat) {\n        this.props.onClickData(seat);\n    }\n}\nexport default TheatreSeats;\n\n\n\n\n// seat : {\n//     A : ['1','2','3','4','5','6'],\n//     B : ['1','2','3','4','5','6','7','8','9','10','11','12']\n// },\n// seatAvailable: {\n//     A : ['1','2','3','4','5','6'],\n//     B : ['1','2','3','4','5','6','7','8','9','10','11','12']\n// },\n// seatReserved: {\n//     A : [],\n//     B : [],\n// },\n// seatSelected: {\n//     A : [],\n//     B : [],\n// },"]},"metadata":{},"sourceType":"module"}