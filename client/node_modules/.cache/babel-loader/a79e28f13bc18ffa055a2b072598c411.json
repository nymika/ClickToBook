{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/MovieDetailPage.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/MovieDetailPage.module.css';\nimport MovieDetailReviewBox from \"./MovieDetailReviewBox\";\nimport ShowTheatres from \"./ShowTheatres\";\nimport tick from './images/tick.png';\nimport deadpool from \"./images/deadpool.jpg\";\nimport alice from \"./images/alice.jpg\";\nimport harrypotter from \"./images/deathly-hallows-p2-2.jpg\";\nimport FF from \"./images/fast-five-2.jpg\";\nimport batman from \"./images/batman-v-superman-dawn-of-justice-3.jpg\";\nimport alpha from \"./images/alpha-alert-1.jpg\";\n\nclass MovieDetailPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // movies : [\n      //     {id : 'Deadpool', Title : 'Deadpool', Poster : deadpool, Summary : <div>\n      //         <p className=\"Movie-Description\">Ajax, a twisted scientist, experiments on Wade Wilson, a mercenary, to cure him of cancer and give him healing powers. However, the experiment leaves Wade disfigured and he decides to exact revenge.</p>\n      //         <p>Date of Release :</p>\n      //         <p>Duration : </p>\n      //         <p>Starring : Ryan Reynolds, Morena Baccarin, Ed Skrein, T. J. Miller</p>\n      //         <p>Directed : Tim Miller</p>\n      //     </div>},\n      //     {id : 'Alice', Title : 'Alice through the looking glass', Poster : alice },\n      //     {id : 'HarryPotter', Title : 'HarryPotter', Poster : harrypotter},\n      //     {id : 'FF', Title : 'Fast&Furious', Poster : FF},\n      //     {id : 'Batman', Title : 'Batman', Poster : batman},\n      //     {id : 'alpha', Title : 'Alpha Alert', Poster : alpha},\n      //     {id : 'ASVR', Title : 'ASVR', Poster : deadpool}\n      // ]\n      movies: []\n    };\n\n    this.ShowMoviesAPIHandler = () => {\n      axios.get('http://localhost:3001/getmovies').then(response => {\n        console.log('show movies done');\n        this.setState({\n          movies: response.data\n        });\n        console.log(this.state.movies);\n      }).catch(e => alert(e));\n    };\n  }\n\n  componentDidMount() {\n    this.ShowMoviesAPIHandler();\n  }\n\n  render() {\n    var selectedMovieId = this.props.match.params.id;\n    var selectedMovie = null;\n    this.state.movies.filter(movie => {\n      return movie.id === selectedMovieId ? selectedMovie = movie : null;\n    });\n    console.log(selectedMovie);\n    return React.createElement(\"div\", {\n      className: styles.separateMoviePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default MovieDetailPage;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/MovieDetailPage.js"],"names":["React","Component","Route","Link","axios","styles","MovieDetailReviewBox","ShowTheatres","tick","deadpool","alice","harrypotter","FF","batman","alpha","MovieDetailPage","state","movies","ShowMoviesAPIHandler","get","then","response","console","log","setState","data","catch","e","alert","componentDidMount","render","selectedMovieId","props","match","params","id","selectedMovie","filter","movie","separateMoviePage"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAcC,IAAd,QAAyB,kBAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,EAAP,MAAe,0BAAf;AACA,OAAOC,MAAP,MAAmB,kDAAnB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;;AAEA,MAAMC,eAAN,SAA8Bd,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCe,KAFoC,GAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,MAAM,EAAG;AAhBL,KAF4B;;AAAA,SAqBpCC,oBArBoC,GAqBb,MAAM;AACzBd,MAAAA,KAAK,CAACe,GAAN,CAAU,iCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAKC,QAAL,CAAc;AACVP,UAAAA,MAAM,EAAEI,QAAQ,CAACI;AADP,SAAd;AAGAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,MAAvB;AACH,OAPL,EAOOS,KAPP,CAOcC,CAAD,IAAOC,KAAK,CAACD,CAAD,CAPzB;AAQH,KA9BmC;AAAA;;AAgCpCE,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,oBAAL;AACH;;AAEDY,EAAAA,MAAM,GAAG;AACL,QAAIC,eAAe,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C;AACA,QAAIC,aAAa,GAAG,IAApB;AACA,SAAKpB,KAAL,CAAWC,MAAX,CAAkBoB,MAAlB,CAA0BC,KAAK,IAAI;AAC/B,aACKA,KAAK,CAACH,EAAN,KAAaJ,eAAd,GACIK,aAAa,GAAGE,KADpB,GAC4B,IAFhC;AAIC,KALL;AAOAhB,IAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ;AAEA,WACI;AAAK,MAAA,SAAS,EAAI/B,MAAM,CAACkC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAiDH;;AAjGmC;;AAoGxC,eAAexB,eAAf","sourcesContent":["import React, {Component } from 'react';\nimport {Route,Link} from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport styles from './stylesheets/MovieDetailPage.module.css';\nimport MovieDetailReviewBox from \"./MovieDetailReviewBox\";\nimport ShowTheatres from \"./ShowTheatres\";\nimport tick from './images/tick.png';\n\nimport deadpool from \"./images/deadpool.jpg\";\nimport alice from \"./images/alice.jpg\";\nimport harrypotter from \"./images/deathly-hallows-p2-2.jpg\";\nimport FF from \"./images/fast-five-2.jpg\";\nimport batman from \"./images/batman-v-superman-dawn-of-justice-3.jpg\";\nimport alpha from \"./images/alpha-alert-1.jpg\";\n\nclass MovieDetailPage extends Component {\n\n    state = {\n        // movies : [\n        //     {id : 'Deadpool', Title : 'Deadpool', Poster : deadpool, Summary : <div>\n        //         <p className=\"Movie-Description\">Ajax, a twisted scientist, experiments on Wade Wilson, a mercenary, to cure him of cancer and give him healing powers. However, the experiment leaves Wade disfigured and he decides to exact revenge.</p>\n        //         <p>Date of Release :</p>\n        //         <p>Duration : </p>\n        //         <p>Starring : Ryan Reynolds, Morena Baccarin, Ed Skrein, T. J. Miller</p>\n        //         <p>Directed : Tim Miller</p>\n        //     </div>},\n        //     {id : 'Alice', Title : 'Alice through the looking glass', Poster : alice },\n        //     {id : 'HarryPotter', Title : 'HarryPotter', Poster : harrypotter},\n        //     {id : 'FF', Title : 'Fast&Furious', Poster : FF},\n        //     {id : 'Batman', Title : 'Batman', Poster : batman},\n        //     {id : 'alpha', Title : 'Alpha Alert', Poster : alpha},\n        //     {id : 'ASVR', Title : 'ASVR', Poster : deadpool}\n        // ]\n        movies : []\n    }\n\n    ShowMoviesAPIHandler = () => {\n        axios.get('http://localhost:3001/getmovies')\n            .then(response => {\n                console.log('show movies done')\n                this.setState({\n                    movies: response.data\n                });\n                console.log(this.state.movies);\n            }).catch((e) => alert(e));\n    }\n\n    componentDidMount() {\n        this.ShowMoviesAPIHandler();\n    }\n\n    render() {\n        var selectedMovieId = this.props.match.params.id;\n        var selectedMovie = null;\n        this.state.movies.filter( movie => {\n            return (\n                (movie.id === selectedMovieId)?\n                    selectedMovie = movie : null\n            )\n            }\n        );\n        console.log(selectedMovie);\n\n        return (\n            <div className = {styles.separateMoviePage}>\n                {/* <div className={styles.MovieDetail}>\n\n                    <div className={styles.Movieposterbox}>\n                        <img src={selectedMovie.Poster} alt=\"my movie poster\" className={styles.Movieposter}/>\n                    </div>\n\n                    <div className={styles.Movieinfobox}>\n                        <h1 className={styles.Movietitle}>{selectedMovie.Title}</h1>\n                        <p className={styles.MovieGenre}>Genre</p>\n                        <p>U , Language, 2D</p>\n                        <div className={styles.Movieratingbox}>\n                            <div className={styles.MovieRating}>\n                                <p>3.9</p>\n                                <p>User's Rating</p>\n                            </div>\n                            <div className={styles.MovieRating}>\n                                <p>3.9</p>\n                                <p>Critic's Rating</p>\n                            </div>\n                            <div className={styles.MovieRating}>\n                                <input className={styles.yourrating} type=\"text\" typeholder=\"out of 5\"/>\n                                <button type=\"submit\"><img className={styles.tick} src={tick} alt=\"submit\"/></button>\n                                <p>You rate it</p>\n                            </div>\n                        </div>\n                        <Link to={this.props.match.url + '/ShowTheatres'} >\n                        <button onClick= { () => window.scrollTo(0,500)} className={styles.Moviebookticket}>BOOK TICKETS</button>\n                        </Link>\n                        <div className={styles.Summaryreviewsheading}>\n                            <ul className={styles.Summaryreviews}>\n                                <Link className = {styles.SummaryLink} to = {this.props.match.url}><li className = {styles.summaryreviewslist}>Summary</li></Link>\n                                <Link className = {styles.SummaryLink} to = {this.props.match.url + \"/User's Reviews\"}><li className = {styles.summaryreviewslist}>User's Reviews</li></Link>\n                                <Link className = {styles.SummaryLink} to = {this.props.match.url + \"/Critic's Reviews\"}><li className = {styles.summaryreviewslist}>Critic's Reviews</li></Link>\n                            </ul>\n                        </div>\n\n                        <div className={styles.Moviesummarybox}>\n                            <Route path=\"/MovieDetailPage/:id\" exact render = { () => selectedMovie.Summary}/>\n                            <Route path=\"/MovieDetailPage/:id/User's Reviews\" exact component={MovieDetailReviewBox} />\n                            <Route path=\"/MovieDetailPage/:id/Critic's Reviews\" exact component={MovieDetailReviewBox} />\n                        </div>\n                    </div>\n                </div>\n                    <Route path={this.props.match.url + \"/ShowTheatres\"} component = {ShowTheatres} /> */}\n\n                </div>\n        )\n    }\n}\n\nexport default MovieDetailPage"]},"metadata":{},"sourceType":"module"}