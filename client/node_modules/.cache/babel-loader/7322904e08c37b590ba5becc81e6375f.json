{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/MyProfile.module.css';\n\nclass UpdateProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.safelyParseJSON = json => {\n      var parsed;\n\n      try {\n        parsed = JSON.parse(json);\n      } catch (e) {// Oh well, but whatever...\n      }\n\n      return parsed; // Could be undefined!\n    };\n\n    this.updateUserState = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.UserUpdateAPIHandler = e => {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        // console.log('validation successful!');\n        // console.log(this.state);\n        const user = {\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          mobile: this.state.mobile,\n          email: this.state.email\n        };\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.put('http://localhost:3001/users/me', user).then(response => {\n          console.log('updated!');\n          console.log(response.data);\n          this.setState({\n            firstname: response.data.firstname,\n            lastname: response.data.lastname,\n            email: response.data.email // mobile: currentUser.mobile,\n            // password: currentUser.userType,\n            // repassword: '',\n            // errors: {}\n\n          });\n          console.log('state is', this.state);\n          console.log(response.data);\n          localStorage.setItem(\"currentUser\", JSON.stringify(response.data));\n        }).catch(e => alert(e));\n      } else {\n        alert(\"Form has errors.\");\n      }\n    };\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      mobile: '',\n      password: '',\n      repassword: '',\n      errors: {}\n    };\n    this.safelyParseJSON = this.safelyParseJSON.bind(this);\n    this.updateUserState = this.updateUserState.bind(this);\n    this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleValidation() {\n    let errors = {};\n    let formIsValid = true; //Password\n    // let password = this.state.password;\n    // let repass = this.state.repassword;\n    // if (password.length === 0) {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Cannot be empty\";\n    // }\n    // else if (password.length < 7) {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Password should contain 7 characters\";\n    // }\n    // if(password!==repass)\n    // {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Passwords don't match.\";\n    // }\n    //Email\n\n    let email = this.state.email;\n\n    if (email.length === 0) {\n      formIsValid = false;\n      errors[\"email\"] = \"* Cannot be empty\";\n    } else if (typeof email !== \"undefined\") {\n      let lastAtPos = email.lastIndexOf('@');\n      let lastDotPos = email.lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && email.length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"* Email is not valid\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  componentDidMount() {\n    const currentUserStorage = localStorage.getItem(\"currentUser\");\n    const currentUser = this.safelyParseJSON(currentUserStorage);\n    this.setState({\n      firstname: currentUser.firstname,\n      lastname: currentUser.lastname,\n      email: currentUser.email,\n      mobile: currentUser.mobile // password: currentUser.password,\n\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.profileBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.myName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstname\",\n      value: this.state.firstname,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"myname\",\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastname\",\n      value: this.state.lastname,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"mylastname\",\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.mymobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"mobile\",\n      value: this.state.mobile,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"mobile\",\n      placeholder: \"Mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"email\",\n      placeholder: \"xyz@gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: styles.warning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.errors[\"email\"])), React.createElement(\"div\", {\n      className: styles.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.mygender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.greywords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Gender ?\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"male\",\n      value: \"male\",\n      checked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"male\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Male\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"female\",\n      value: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"female\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Female\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"others\",\n      value: \"others\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"others\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Others\")), React.createElement(\"div\", {\n      className: styles.mybd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      id: \"mybirthday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: styles.greywords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"It's my birthday\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: styles.usertype,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Customer\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"TheatreOwner\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: styles.submitbtn,\n      onClick: this.UserUpdateAPIHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/userDelete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: styles.submitbtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Delete Account\"))));\n  }\n\n}\n\nexport default UpdateProfile;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js"],"names":["React","Component","Link","axios","styles","UpdateProfile","constructor","props","safelyParseJSON","json","parsed","JSON","parse","e","updateUserState","event","setState","target","name","value","UserUpdateAPIHandler","preventDefault","handleValidation","user","firstname","state","lastname","mobile","email","defaults","headers","common","localStorage","getItem","put","then","response","console","log","data","setItem","stringify","catch","alert","password","repassword","errors","bind","formIsValid","length","lastAtPos","lastIndexOf","lastDotPos","indexOf","componentDidMount","currentUserStorage","currentUser","render","profileBox","myName","inputbox","mymobile","warning","mygender","greywords","genderlabel","mybd","usertype","submitbtn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport styles from './stylesheets/MyProfile.module.css'\n\nclass UpdateProfile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            email: '',\n            mobile: '',\n            password: '',\n            repassword: '',\n            errors: {}\n        };\n        this.safelyParseJSON = this.safelyParseJSON.bind(this)\n        this.updateUserState = this.updateUserState.bind(this);\n        this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n        this.handleValidation = this.handleValidation.bind(this);\n    }\n\n    safelyParseJSON = (json) => {\n        var parsed\n        try {\n            parsed = JSON.parse(json)\n        } catch (e) {\n            // Oh well, but whatever...\n        }\n        return parsed // Could be undefined!\n    }\n\n    updateUserState = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleValidation() {\n        let errors = {};\n        let formIsValid = true;\n\n        //Password\n        // let password = this.state.password;\n        // let repass = this.state.repassword;\n        // if (password.length === 0) {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Cannot be empty\";\n        // }\n        // else if (password.length < 7) {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Password should contain 7 characters\";\n        // }\n        // if(password!==repass)\n        // {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Passwords don't match.\";\n        // }\n\n        //Email\n        let email = this.state.email;\n        if (email.length === 0) {\n            formIsValid = false;\n            errors[\"email\"] = \"* Cannot be empty\";\n        }\n        else if (typeof email !== \"undefined\") {\n            let lastAtPos = email.lastIndexOf('@');\n            let lastDotPos = email.lastIndexOf('.');\n\n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\n                formIsValid = false;\n                errors[\"email\"] = \"* Email is not valid\";\n            }\n        }\n\n        this.setState({ errors: errors });\n        return formIsValid;\n    }\n\n    UserUpdateAPIHandler = (e) => {\n        e.preventDefault();\n        if (this.handleValidation()) {\n            // console.log('validation successful!');\n            // console.log(this.state);\n            const user = {\n                firstname: this.state.firstname,\n                lastname: this.state.lastname,\n                mobile: this.state.mobile,\n                email: this.state.email,\n            };\n            axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n            axios.put('http://localhost:3001/users/me', user)\n                .then(response => {\n                    console.log('updated!')\n                    console.log(response.data)\n                    this.setState({\n                        firstname: response.data.firstname,\n                        lastname: response.data.lastname,\n                        email: response.data.email,\n                        // mobile: currentUser.mobile,\n                        // password: currentUser.userType,\n                        // repassword: '',\n                        // errors: {}\n                    })\n                    console.log('state is', this.state)\n                    console.log(response.data);\n                    localStorage.setItem(\"currentUser\", JSON.stringify(response.data))\n                }).catch((e) => alert(e));\n        }\n        else {\n            alert(\"Form has errors.\")\n        }\n    }\n\n    componentDidMount() {\n        const currentUserStorage = localStorage.getItem(\"currentUser\");\n        const currentUser = this.safelyParseJSON(currentUserStorage)\n        this.setState ({\n            firstname: currentUser.firstname,\n            lastname: currentUser.lastname,\n            email: currentUser.email,\n            mobile: currentUser.mobile,\n            // password: currentUser.password,\n        });\n    }\n\n    render() {\n        return (\n            <div className={styles.profileBox}>\n                <div className={styles.myName}>\n                    <input type=\"text\" name=\"firstname\" value={this.state.firstname} onChange={this.updateUserState} className={styles.inputbox} id=\"myname\" placeholder=\"First Name\"></input>\n                    <input type=\"text\" name=\"lastname\" value={this.state.lastname} onChange={this.updateUserState} className={styles.inputbox} id=\"mylastname\" placeholder=\"Last Name\"></input>\n                </div>\n                <div className={styles.mymobile}>\n                    <input type=\"text\" name=\"mobile\" value={this.state.mobile} onChange={this.updateUserState} className={styles.inputbox} id=\"mobile\" placeholder=\"Mobile\"></input>\n                </div>\n                <div className={styles.email}>\n                    <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.updateUserState} className={styles.inputbox} id=\"email\" placeholder=\"xyz@gmail.com\"></input>\n                    <br /><span className={styles.warning}>{this.state.errors[\"email\"]}</span>\n                </div>\n                <div className={styles.password}>\n                    <div className={styles.mygender}>\n                        <p className={styles.greywords}>Gender ?</p>\n                        <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" checked></input>\n                        <label for=\"male\" className={styles.genderlabel}>Male</label>\n                        <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\"></input>\n                        <label for=\"female\" className={styles.genderlabel}>Female</label>\n                        <input type=\"radio\" name=\"gender\" id=\"others\" value=\"others\"></input>\n                        <label for=\"others\" className={styles.genderlabel}>Others</label>\n                    </div>\n                    <div className={styles.mybd}>\n                        <input type=\"date\" id=\"mybirthday\"></input>\n                        <p className={styles.greywords}>It's my birthday</p>\n                    </div>\n                    {/* <p className={styles.genderlabel}>Change Password ?</p>\n                    <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.updateUserState} className={styles.inputbox} id=\"pass\" placeholder=\"enter new password\"></input>\n                    <br /><span className={styles.warning}>{this.state.errors[\"password\"]}</span><br /> */}\n                    {/* <input type=\"text\" className={styles.inputbox} id=\"repass\" placeholder=\"re-enter new password to confirm\"></input> */}\n                </div>\n                <div>\n                    <select className={styles.usertype}>\n                        <option>Customer</option>\n                        <option>TheatreOwner</option>\n                    </select>\n                </div>\n                <div>\n                    <button type=\"submit\" className={styles.submitbtn} onClick={this.UserUpdateAPIHandler}>Update</button>\n                </div>\n                <br /><br />\n                <div>\n                    <Link to='/userDelete'>\n                        <button type=\"submit\" className={styles.submitbtn}>Delete Account</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpdateProfile;"]},"metadata":{},"sourceType":"module"}