{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/src/components/TheatreSeats.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/TheatreSeats.css';\n\nclass TheatreSeats extends Component {\n  componentDidMount() {\n    console.log(\"theatre seats showed\");\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      seat: ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6'],\n      seatAvailable: ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6'],\n      seatReserved: [],\n      seatSelected: []\n    };\n  }\n\n  onClickData(seat) {\n    if (this.state.seatReserved.indexOf(seat) > -1) {\n      this.setState({\n        seatAvailable: this.state.seatAvailable.concat(seat),\n        seatReserved: this.state.seatReserved.filter(res => res != seat) //seatSelected: this.state.seatSelected.filter(res => res != seat)\n\n      });\n    } else {\n      this.setState({\n        seatReserved: this.state.seatReserved.concat(seat),\n        //seatSelected: this.state.seatSelected.concat(seat),\n        seatAvailable: this.state.seatAvailable.filter(res => res != seat)\n      });\n    }\n  }\n\n  checktrue(row) {\n    if (this.state.seatSelected.indexOf(row) > -1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  handleSubmited() {\n    this.setState({\n      seatSelected: this.state.seatSelected.concat(this.state.seatReserved)\n    });\n    this.setState({\n      seatReserved: []\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Seat Reservation System\"), React.createElement(DrawGrid, {\n      seat: this.state.seat,\n      available: this.state.seatAvailable,\n      reserved: this.state.seatReserved,\n      selected: this.state.seatSelected,\n      onClickData: this.onClickData.bind(this),\n      checktrue: this.checktrue.bind(this),\n      handleSubmited: this.handleSubmited.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass DrawGrid extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.seat.map(row => React.createElement(\"td\", {\n      className: this.props.selected.indexOf(row) > -1 ? 'reserved' : this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available',\n      key: row,\n      onClick: this.props.checktrue(row) ? e => this.onClickSeat(row) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, row, \" \"))))), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-success btnmargin\",\n      onClick: () => this.props.handleSubmited(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Confirm Booking\"));\n  }\n\n  onClickSeat(seat) {\n    this.props.onClickData(seat);\n  }\n\n}\n\nexport default TheatreSeats;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/src/components/TheatreSeats.js"],"names":["React","Component","TheatreSeats","componentDidMount","console","log","constructor","state","seat","seatAvailable","seatReserved","seatSelected","onClickData","indexOf","setState","concat","filter","res","checktrue","row","handleSubmited","render","bind","DrawGrid","props","map","selected","reserved","e","onClickSeat"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport '../stylesheets/TheatreSeats.css';\n\nclass TheatreSeats extends Component\n{\n    componentDidMount()\n    {console.log(\"theatre seats showed\");}\n\n    constructor() {\n        super();\n        this.state = {\n            seat: [\n                'A1','A2','A3','A4','A5','A6',\n                'B1','B2','B3','B4','B5','B6',\n                'C1','C2','C3','C4','C5','C6'\n            ],\n            seatAvailable: [\n                'A1','A2','A3','A4','A5','A6',\n                'B1','B2','B3','B4','B5','B6',\n                'C1','C2','C3','C4','C5','C6'\n            ],\n            seatReserved: [],\n            seatSelected: []\n        }\n    }\n\n    onClickData(seat) {\n        if(this.state.seatReserved.indexOf(seat) > -1 ) {\n            this.setState({\n                seatAvailable: this.state.seatAvailable.concat(seat),\n                seatReserved: this.state.seatReserved.filter(res => res != seat),\n                //seatSelected: this.state.seatSelected.filter(res => res != seat)\n            })\n        } else {\n            this.setState({\n                seatReserved: this.state.seatReserved.concat(seat),\n                //seatSelected: this.state.seatSelected.concat(seat),\n                seatAvailable: this.state.seatAvailable.filter(res => res != seat)\n            })\n        }\n    }\n    checktrue(row) {\n        if(this.state.seatSelected.indexOf(row) > -1){\n            return false\n        }else{\n            return true\n        }\n    }\n\n    handleSubmited() {\n        this.setState({seatSelected: this.state.seatSelected.concat(this.state.seatReserved)})\n        this.setState({\n            seatReserved: []\n        })\n    }\n\n    render() {\n        return (\n            <div className= \"Background\">\n                <h1>Seat Reservation System</h1>\n                <DrawGrid\n                    seat={ this.state.seat }\n                    available={ this.state.seatAvailable }\n                    reserved={ this.state.seatReserved }\n                    selected={ this.state.seatSelected }\n                    onClickData={ this.onClickData.bind(this)}\n                    checktrue={ this.checktrue.bind(this)}\n                    handleSubmited={ this.handleSubmited.bind(this)}\n                />\n            </div>\n        )\n    }\n}\n\nclass DrawGrid extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <table className=\"grid\">\n                    <tbody>\n                    <tr>\n                        { this.props.seat.map( row =>\n                            <td\n                                className={this.props.selected.indexOf(row) > -1? 'reserved': (this.props.reserved.indexOf(row) > -1? 'selected':'available')}\n                                key={row} onClick={this.props.checktrue(row) ? e => this.onClickSeat(row) : null} >{row} </td>) }\n                    </tr>\n                    </tbody>\n                </table>\n                <button type=\"button\" className=\"btn-success btnmargin\" onClick={() => this.props.handleSubmited()}>Confirm Booking</button>\n            </div>\n        )\n    }\n\n    onClickSeat(seat) {\n        this.props.onClickData(seat);\n    }\n}\nexport default TheatreSeats;\n"]},"metadata":{},"sourceType":"module"}