{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/SlotDetails.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass SlotDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetSlotInfoAPIHandler = (slotid, theatreid) => {\n      console.log('get slotInfo done!');\n      console.log(this.state);\n    };\n\n    this.state = {\n      getSlotInfoBody: {\n        day: \"2020-06-07\"\n      },\n      postSlotInfoBody: {\n        movieid: '',\n        priceInfo: {\n          A: '',\n          B: ''\n        },\n        bookingInfo: [{\n          day: '',\n          status: '',\n          slot: ''\n        }]\n      },\n      getSlotInfo: {\n        _id: '',\n        _movie: '',\n        _slot: '',\n        _theatre: '',\n        day: '',\n        seatInfo: {\n          A: {\n            availability: [],\n            price: ''\n          },\n          B: {\n            availability: [],\n            price: ''\n          }\n        }\n      }\n    };\n    this.GetSlotInfoAPIHandler = this.GetSlotInfoAPIHandler.bind(this);\n  }\n\n  componentDidMount() {// var selectedSlotId = this.props.match.params.SlotId;\n    // var selectedTheatreId = this.props.match.params.TheatreId;\n    // //console.log(selectedTheatreId, selectedSlotId)\n    // this.GetSlotInfoAPIHandler(selectedSlotId, selectedTheatreId);\n  }\n\n  render() {\n    if (this.state.getSlotInfo._id) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"HEYLOO DID\");\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"no movie booked for this slot\");\n    }\n  }\n\n}\n\nexport default SlotDetails;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/SlotDetails.js"],"names":["React","Component","Route","Link","axios","SlotDetails","constructor","props","GetSlotInfoAPIHandler","slotid","theatreid","console","log","state","getSlotInfoBody","day","postSlotInfoBody","movieid","priceInfo","A","B","bookingInfo","status","slot","getSlotInfo","_id","_movie","_slot","_theatre","seatInfo","availability","price","bind","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyCnBC,qBAzCmB,GAyCK,CAACC,MAAD,EAASC,SAAT,KAAuB;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEQD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACX,KA7CkB;;AAEf,SAAKA,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE;AACbC,QAAAA,GAAG,EAAE;AADQ,OADR;AAITC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,OAAO,EAAE,EADK;AAEdC,QAAAA,SAAS,EAAE;AACPC,UAAAA,CAAC,EAAE,EADI;AAEPC,UAAAA,CAAC,EAAE;AAFI,SAFG;AAMdC,QAAAA,WAAW,EAAE,CACT;AACIN,UAAAA,GAAG,EAAE,EADT;AAEIO,UAAAA,MAAM,EAAE,EAFZ;AAGIC,UAAAA,IAAI,EAAE;AAHV,SADS;AANC,OAJT;AAkBTC,MAAAA,WAAW,EAAE;AACTC,QAAAA,GAAG,EAAE,EADI;AAETC,QAAAA,MAAM,EAAE,EAFC;AAGTC,QAAAA,KAAK,EAAE,EAHE;AAITC,QAAAA,QAAQ,EAAE,EAJD;AAKTb,QAAAA,GAAG,EAAE,EALI;AAMTc,QAAAA,QAAQ,EAAE;AACNV,UAAAA,CAAC,EAAE;AACCW,YAAAA,YAAY,EAAE,EADf;AAECC,YAAAA,KAAK,EAAE;AAFR,WADG;AAKNX,UAAAA,CAAC,EAAE;AACCU,YAAAA,YAAY,EAAE,EADf;AAECC,YAAAA,KAAK,EAAE;AAFR;AALG;AAND;AAlBJ,KAAb;AAoCA,SAAKvB,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BwB,IAA3B,CAAgC,IAAhC,CAA7B;AACH;;AAQDC,EAAAA,iBAAiB,GAAG,CAChB;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKrB,KAAL,CAAWW,WAAX,CAAuBC,GAA3B,EAAgC;AAC5B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH,KAJD,MAKK;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ;AAGH;AACJ;;AAnE+B;;AAqEpC,eAAepB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\nclass SlotDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getSlotInfoBody: {\n                day: \"2020-06-07\"\n            },\n            postSlotInfoBody: {\n                movieid: '',\n                priceInfo: {\n                    A: '',\n                    B: ''\n                },\n                bookingInfo: [\n                    {\n                        day: '',\n                        status: '',\n                        slot: ''\n                    }\n                ]\n            },\n            getSlotInfo: {\n                _id: '',\n                _movie: '',\n                _slot: '',\n                _theatre: '',\n                day: '',\n                seatInfo: {\n                    A: {\n                        availability: [],\n                        price: ''\n                    },\n                    B: {\n                        availability: [],\n                        price: ''\n                    }\n                }\n            }\n        }\n        this.GetSlotInfoAPIHandler = this.GetSlotInfoAPIHandler.bind(this)\n    }\n\n    GetSlotInfoAPIHandler = (slotid, theatreid) => {\n        console.log('get slotInfo done!')\n        \n                console.log(this.state)\n    }\n\n    componentDidMount() {\n        // var selectedSlotId = this.props.match.params.SlotId;\n        // var selectedTheatreId = this.props.match.params.TheatreId;\n        // //console.log(selectedTheatreId, selectedSlotId)\n        // this.GetSlotInfoAPIHandler(selectedSlotId, selectedTheatreId);\n    }\n\n    render() {\n\n        if (this.state.getSlotInfo._id) {\n            return (\n                <h1>HEYLOO DID</h1>\n            )\n        }\n        else {\n            return (\n                <h1>no movie booked for this slot</h1>\n            )\n        }\n    }\n}\nexport default SlotDetails"]},"metadata":{},"sourceType":"module"}