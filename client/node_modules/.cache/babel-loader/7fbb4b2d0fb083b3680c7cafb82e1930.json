{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/SlotDetails.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass SlotDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetSlotInfoAPIHandler = (slotid, theatreid) => {\n      console.log('get slotInfo done!'); //console.log(theatreid, slotid, this.state.getSlotInfoBody)\n\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      axios.post(`http://localhost:3000/theatres/${theatreid}/${slotid}`, this.state.getSlotInfoBody).then(response => {\n        console.log(response.data);\n\n        if (response.data) {\n          this.setState({\n            getSlotInfo: {\n              _id: response.data._id,\n              _movie: response.data._movie,\n              _slot: response.data._slot,\n              _theatre: response.data._theatre,\n              day: response.data.day,\n              seatInfo: {\n                A: {\n                  availability: response.data.seatInfo.A.availability,\n                  price: response.data.seatInfo.A.price\n                },\n                B: {\n                  availability: response.data.seatInfo.B.availability,\n                  price: response.data.seatInfo.B.price\n                }\n              }\n            }\n          });\n        }\n\n        console.log(this.state);\n      }).catch(e => alert(e));\n    };\n\n    state = {\n      getSlotInfoBody: {\n        day: \"2020-06-07\"\n      },\n      postSlotInfoBody: {\n        movieid: '',\n        priceInfo: {\n          A: '',\n          B: ''\n        },\n        bookingInfo: [{\n          day: '',\n          status: '',\n          slot: ''\n        }]\n      },\n      getSlotInfo: {\n        _id: '',\n        _movie: '',\n        _slot: '',\n        _theatre: '',\n        day: '',\n        seatInfo: {\n          A: {\n            availability: [],\n            price: ''\n          },\n          B: {\n            availability: [],\n            price: ''\n          }\n        }\n      }\n    };\n    this.GetSlotInfoAPIHandler = this.GetSlotInfoAPIHandler.bind(this);\n  }\n\n  componentDidMount() {// var selectedSlotId = this.props.match.params.SlotId;\n    // var selectedTheatreId = this.props.match.params.TheatreId;\n    // //console.log(selectedTheatreId, selectedSlotId)\n    // this.GetSlotInfoAPIHandler(selectedSlotId, selectedTheatreId);\n  }\n\n  render() {\n    if (this.state.getSlotInfo._id) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"HEYLOO DID\");\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"no movie booked for this slot\");\n    }\n  }\n\n}\n\nexport default SlotDetails;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/SlotDetails.js"],"names":["React","Component","Route","Link","axios","SlotDetails","constructor","props","GetSlotInfoAPIHandler","slotid","theatreid","console","log","defaults","headers","common","localStorage","getItem","post","state","getSlotInfoBody","then","response","data","setState","getSlotInfo","_id","_movie","_slot","_theatre","day","seatInfo","A","availability","price","B","catch","e","alert","postSlotInfoBody","movieid","priceInfo","bookingInfo","status","slot","bind","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\nclass SlotDetails extends Component {\n    constructor(props) {\n        super(props);\n        state = {\n            getSlotInfoBody: {\n                day: \"2020-06-07\"\n            },\n            postSlotInfoBody: {\n                movieid: '',\n                priceInfo: {\n                    A: '',\n                    B: ''\n                },\n                bookingInfo: [\n                    {\n                        day: '',\n                        status: '',\n                        slot: ''\n                    }\n                ]\n            },\n            getSlotInfo: {\n                _id: '',\n                _movie: '',\n                _slot: '',\n                _theatre: '',\n                day: '',\n                seatInfo: {\n                    A: {\n                        availability: [],\n                        price: ''\n                    },\n                    B: {\n                        availability: [],\n                        price: ''\n                    }\n                }\n            }\n        }\n        this.GetSlotInfoAPIHandler = this.GetSlotInfoAPIHandler.bind(this)\n    }\n\n    GetSlotInfoAPIHandler = (slotid, theatreid) => {\n        console.log('get slotInfo done!')\n        //console.log(theatreid, slotid, this.state.getSlotInfoBody)\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.post(`http://localhost:3000/theatres/${theatreid}/${slotid}`, this.state.getSlotInfoBody)\n            .then(response => {\n                console.log(response.data)\n                if (response.data) {\n                    this.setState({\n                        getSlotInfo: {\n                            _id: response.data._id,\n                            _movie: response.data._movie,\n                            _slot: response.data._slot,\n                            _theatre: response.data._theatre,\n                            day: response.data.day,\n                            seatInfo: {\n                                A: {\n                                    availability: response.data.seatInfo.A.availability,\n                                    price: response.data.seatInfo.A.price\n                                },\n                                B: {\n                                    availability: response.data.seatInfo.B.availability,\n                                    price: response.data.seatInfo.B.price\n                                }\n                            }\n                        }\n\n                    })\n                }\n                console.log(this.state)\n\n            }).catch((e) => alert(e));\n    }\n\n    componentDidMount() {\n        // var selectedSlotId = this.props.match.params.SlotId;\n        // var selectedTheatreId = this.props.match.params.TheatreId;\n        // //console.log(selectedTheatreId, selectedSlotId)\n        // this.GetSlotInfoAPIHandler(selectedSlotId, selectedTheatreId);\n    }\n\n    render() {\n\n        if (this.state.getSlotInfo._id) {\n            return (\n                <h1>HEYLOO DID</h1>\n            )\n        }\n        else {\n            return (\n                <h1>no movie booked for this slot</h1>\n            )\n        }\n    }\n}\nexport default SlotDetails"]},"metadata":{},"sourceType":"module"}