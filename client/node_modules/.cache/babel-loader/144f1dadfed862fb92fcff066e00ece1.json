{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/ShowTheatres.js\";\nimport React, { Component } from 'react';\nimport styles from './stylesheets/ShowTheatres.module.css';\nimport axios from 'axios';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport TheatreSeats from './TheatreSeats';\nimport tick from './images/tick.png';\n\nclass ShowTheatres extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: '',\n      getSlots: false,\n      theatres: [],\n      getSeats: false\n    };\n\n    this.updateDateState = event => {\n      this.setState({\n        date: event.target.value\n      });\n    };\n  }\n\n  GetSlotsAPIHandler() {\n    this.setState({\n      getSlots: true\n    });\n    console.log(this.state);\n    console.log('slots are done');\n    axios.put(`http://localhost:3000/shows/${this.props.movieId}`, this.state).then(response => {\n      //console.log(response.data)\n      this.setState({\n        theatres: response.data\n      });\n      console.log(this.state.theatres);\n    }).catch(e => alert(e));\n  }\n\n  GetSeats() {\n    console.log('theatres seats showed!');\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.ShowTheatresBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      value: this.state.selectedDate,\n      onChange: this.updateDateState,\n      className: styles.DateBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.GetSlotsAPIHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.tick,\n      src: tick,\n      alt: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), this.state.getSlots ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.SingleTheatreBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.theatres.map(theatre => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: styles.MovieName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, theatre.theatre[0].name), theatre.theatre[0].slotInfo.map(slot => {\n        return React.createElement(\"button\", {\n          className: styles.TimeButton,\n          onClick: () => this.GetSeats(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, slot.startTime, \" - \", slot.endTime);\n      }));\n    }))) : null), React.createElement(Route, {\n      path: \"/MovieDetailPage/:id/ShowTheatres/TheatreSeats\",\n      exact: true,\n      component: TheatreSeats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ShowTheatres;\n{\n  /* <h4 className={styles.MovieName}>INOX</h4>\n                             <Link to={this.props.match.url + '/TheatreSeats'} >\n                                 <button className={styles.TimeButton} >10:30 AM</button>\n                             </Link>\n                             <Link to={this.props.match.url + '/TheatreSeats'} >\n                                 <button className={styles.TimeButton} >4:00 PM</button>\n                             </Link>\n                             <Link to={this.props.match.url + '/TheatreSeats'} >\n                                 <button className={styles.TimeButton}>7:00 PM</button>\n                             </Link> */\n}","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/ShowTheatres.js"],"names":["React","Component","styles","axios","BrowserRouter","Route","Link","TheatreSeats","tick","ShowTheatres","state","date","getSlots","theatres","getSeats","updateDateState","event","setState","target","value","GetSlotsAPIHandler","console","log","put","props","movieId","then","response","data","catch","e","alert","GetSeats","componentDidMount","render","ShowTheatresBox","selectedDate","DateBox","SingleTheatreBox","map","theatre","MovieName","name","slotInfo","slot","TimeButton","startTime","endTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './stylesheets/ShowTheatres.module.css';\n\nimport axios from 'axios';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport TheatreSeats from './TheatreSeats';\nimport tick from './images/tick.png';\n\nclass ShowTheatres extends Component {\n    state = {\n        date: '',\n        getSlots: false,\n        theatres: [],\n        getSeats : false\n    }\n\n    updateDateState = (event) => {\n        this.setState({\n            date: event.target.value,\n        })\n    }\n\n    GetSlotsAPIHandler() {\n        this.setState({\n            getSlots: true\n        })\n        console.log(this.state)\n        console.log('slots are done')\n        axios.put(`http://localhost:3000/shows/${this.props.movieId}`, this.state)\n            .then(response => {\n                //console.log(response.data)\n                this.setState({\n                    theatres: response.data\n                })\n                console.log(this.state.theatres)\n            }).catch((e) => alert(e))\n    }\n\n    GetSeats() {\n        console.log('theatres seats showed!')\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n    }\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <div className={styles.ShowTheatresBox}>\n                        <input type=\"date\" value={this.state.selectedDate} onChange={this.updateDateState} className={styles.DateBox}></input>\n                        <button type=\"submit\" onClick={() => this.GetSlotsAPIHandler()}><img className={styles.tick} src={tick} alt=\"submit\" /></button>\n                        {(this.state.getSlots) ?\n                            <div>\n                                <hr />\n                                <div className={styles.SingleTheatreBox}>\n\n                                    {\n                                        this.state.theatres.map(theatre => {\n                                            return (\n                                                <div>\n                                                    <h4 className={styles.MovieName}>{theatre.theatre[0].name}</h4>\n                                                    {\n                                                        theatre.theatre[0].slotInfo.map(slot => {\n                                                            return (\n                                                                <button className={styles.TimeButton}\n                                                                onClick={  () => this.GetSeats()}>{slot.startTime} - {slot.endTime}</button>\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n                                            )\n                                        })}\n                                </div>\n                            </div> : null}\n                    </div>\n                    <Route path=\"/MovieDetailPage/:id/ShowTheatres/TheatreSeats\" exact component={TheatreSeats} />\n                </div>\n            </BrowserRouter>\n        )\n\n    }\n}\n\nexport default ShowTheatres;\n\n{/* <h4 className={styles.MovieName}>INOX</h4>\n                            <Link to={this.props.match.url + '/TheatreSeats'} >\n                                <button className={styles.TimeButton} >10:30 AM</button>\n                            </Link>\n                            <Link to={this.props.match.url + '/TheatreSeats'} >\n                                <button className={styles.TimeButton} >4:00 PM</button>\n                            </Link>\n                            <Link to={this.props.match.url + '/TheatreSeats'} >\n                                <button className={styles.TimeButton}>7:00 PM</button>\n                            </Link> */}"]},"metadata":{},"sourceType":"module"}