{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/TheatreSeats.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './stylesheets/TheatreSeats.css';\nimport ETicket from './ETicket';\n\nclass TheatreSeats extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetSlotInfoAPIHandler = () => {\n      //console.log('entered')\n      axios.get(`http://localhost:3000/ticketbooking/${this.props.slotId}`).then(response => {\n        console.log(response.data);\n        this.setState({\n          seatInfo: {\n            'G1': response.data.A.availability[0],\n            'G2': response.data.A.availability[1],\n            'G3': response.data.A.availability[2],\n            'G4': response.data.A.availability[3],\n            'G5': response.data.A.availability[4],\n            'G6': response.data.A.availability[5]\n          }\n        });\n        console.log(this.state.seatInfo);\n      }).catch(e => alert(e));\n    };\n\n    this.state = {\n      seat: ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10', 'B11', 'B12'],\n      seatAvailable: ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10', 'B11', 'B12'],\n      seatReserved: [],\n      seatSelected: [],\n      seatInfo: {\n        'G1': '',\n        'G2': '',\n        'G3': '',\n        'G4': '',\n        'G5': '',\n        'G6': '',\n        'B1': '',\n        'B2': '',\n        'B3': '',\n        'B4': '',\n        'B5': '',\n        'B6': '',\n        'B7': '',\n        'B8': '',\n        'B9': '',\n        'B10': '',\n        'B11': '',\n        'B12': ''\n      }\n    };\n  }\n\n  onClickData(seat) {\n    if (this.state.seatReserved.indexOf(seat) > -1) {\n      this.setState({\n        seatAvailable: this.state.seatAvailable.concat(seat),\n        seatReserved: this.state.seatReserved.filter(res => res !== seat) // seatSelected: this.state.seatSelected.filter(res => res != seat)\n\n      });\n    } else {\n      this.setState({\n        seatReserved: this.state.seatReserved.concat(seat),\n        // seatSelected: this.state.seatSelected.concat(seat),\n        seatAvailable: this.state.seatAvailable.filter(res => res !== seat)\n      });\n    }\n  }\n\n  checktrue(row) {\n    if (this.state.seatSelected.indexOf(row) > -1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  handleSubmited() {\n    this.setState({\n      seatSelected: this.state.seatSelected.concat(this.state.seatReserved)\n    }); // this.setState({\n    //     seatReserved: []\n    // })\n  }\n\n  componentDidMount() {\n    //console.log('selected slot is', this.props.slotId)\n    this.GetSlotInfoAPIHandler();\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(DrawGrid, {\n      seat: this.state.seat,\n      available: this.state.seatAvailable,\n      reserved: this.state.seatReserved,\n      selected: this.state.seatSelected,\n      onClickData: this.onClickData.bind(this),\n      checktrue: this.checktrue.bind(this),\n      handleSubmited: this.handleSubmited.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: '/GetTickets',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        console.log(this.state.seatReserved);\n        window.scrollTo(0, 92500);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Get Ticket\")), React.createElement(Route, {\n      path: \"/GetTickets\",\n      render: () => React.createElement(ETicket, {\n        Title: \"Title\",\n        Poster: \"Poster\",\n        Theatre: \"Theatre\",\n        dimen: \"dimen\",\n        language: \"language\",\n        time: \"time\",\n        date: \"date\",\n        numofseats: this.state.seatReserved.length,\n        seats: this.state.seatReserved,\n        ticketprice: \"ticketprice\",\n        conveniencefees: \"conveniencefees\",\n        amountpaid: \"amountpaid\",\n        bookingid: \"bookingid\",\n        bookingdatetime: \"bookingdatetime\",\n        confirmationid: \"confirmationid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass DrawGrid extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.props.seat.map(row => React.createElement(\"td\", {\n      className: this.props.selected.indexOf(row) > -1 ? 'reserved' : this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available',\n      key: row,\n      onClick: this.props.checktrue(row) ? e => this.onClickSeat(row) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, row, \" \"))))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"*G - GOLD seats\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"*B - Balcony seats\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-success btnmargin\",\n      onClick: () => this.props.handleSubmited(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Confirm Booking\"));\n  }\n\n  onClickSeat(seat) {\n    this.props.onClickData(seat);\n  }\n\n}\n\nexport default TheatreSeats;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/TheatreSeats.js"],"names":["React","Component","BrowserRouter","Route","Link","axios","ETicket","TheatreSeats","constructor","props","GetSlotInfoAPIHandler","get","slotId","then","response","console","log","data","setState","seatInfo","A","availability","state","catch","e","alert","seat","seatAvailable","seatReserved","seatSelected","onClickData","indexOf","concat","filter","res","checktrue","row","handleSubmited","componentDidMount","render","bind","window","scrollTo","length","DrawGrid","map","selected","reserved","onClickSeat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,gCAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAEjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsCnBC,qBAtCmB,GAsCK,MAAM;AAC1B;AACAL,MAAAA,KAAK,CAACM,GAAN,CAAW,uCAAsC,KAAKF,KAAL,CAAWG,MAAO,EAAnE,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAG;AACP,kBAAOL,QAAQ,CAACG,IAAT,CAAcG,CAAd,CAAgBC,YAAhB,CAA6B,CAA7B,CADA;AAEP,kBAAOP,QAAQ,CAACG,IAAT,CAAcG,CAAd,CAAgBC,YAAhB,CAA6B,CAA7B,CAFA;AAGP,kBAAOP,QAAQ,CAACG,IAAT,CAAcG,CAAd,CAAgBC,YAAhB,CAA6B,CAA7B,CAHA;AAIP,kBAAOP,QAAQ,CAACG,IAAT,CAAcG,CAAd,CAAgBC,YAAhB,CAA6B,CAA7B,CAJA;AAKP,kBAAOP,QAAQ,CAACG,IAAT,CAAcG,CAAd,CAAgBC,YAAhB,CAA6B,CAA7B,CALA;AAMP,kBAAOP,QAAQ,CAACG,IAAT,CAAcG,CAAd,CAAgBC,YAAhB,CAA6B,CAA7B;AANA;AADD,SAAd;AAUAN,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWH,QAAvB;AACH,OAdL,EAcOI,KAdP,CAccC,CAAD,IAAOC,KAAK,CAACD,CAAD,CAdzB;AAeH,KAvDkB;;AAEf,SAAKF,KAAL,GAAa;AACTI,MAAAA,IAAI,EAAE,CACF,IADE,EACI,IADJ,EACU,IADV,EACgB,IADhB,EACsB,IADtB,EAC4B,IAD5B,EAEF,IAFE,EAEI,IAFJ,EAEU,IAFV,EAEgB,IAFhB,EAEsB,IAFtB,EAE4B,IAF5B,EAGF,IAHE,EAGI,IAHJ,EAGU,IAHV,EAGgB,KAHhB,EAGuB,KAHvB,EAG8B,KAH9B,CADG;AAMTC,MAAAA,aAAa,EAAE,CACX,IADW,EACL,IADK,EACC,IADD,EACO,IADP,EACa,IADb,EACmB,IADnB,EAEX,IAFW,EAEL,IAFK,EAEC,IAFD,EAEO,IAFP,EAEa,IAFb,EAEmB,IAFnB,EAGX,IAHW,EAGL,IAHK,EAGC,IAHD,EAGO,KAHP,EAGc,KAHd,EAGqB,KAHrB,CANN;AAWTC,MAAAA,YAAY,EAAE,EAXL;AAYTC,MAAAA,YAAY,EAAE,EAZL;AAaTV,MAAAA,QAAQ,EAAE;AACN,cAAM,EADA;AAEN,cAAO,EAFD;AAGN,cAAO,EAHD;AAIN,cAAO,EAJD;AAKN,cAAO,EALD;AAMN,cAAO,EAND;AAON,cAAO,EAPD;AAQN,cAAO,EARD;AASN,cAAO,EATD;AAUN,cAAO,EAVD;AAWN,cAAO,EAXD;AAYN,cAAO,EAZD;AAaN,cAAO,EAbD;AAcN,cAAO,EAdD;AAeN,cAAO,EAfD;AAgBN,eAAQ,EAhBF;AAiBN,eAAQ,EAjBF;AAkBN,eAAQ;AAlBF;AAbD,KAAb;AAkCH;;AAqBDW,EAAAA,WAAW,CAACJ,IAAD,EAAO;AACd,QAAI,KAAKJ,KAAL,CAAWM,YAAX,CAAwBG,OAAxB,CAAgCL,IAAhC,IAAwC,CAAC,CAA7C,EAAgD;AAC5C,WAAKR,QAAL,CAAc;AACVS,QAAAA,aAAa,EAAE,KAAKL,KAAL,CAAWK,aAAX,CAAyBK,MAAzB,CAAgCN,IAAhC,CADL;AAEVE,QAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWM,YAAX,CAAwBK,MAAxB,CAA+BC,GAAG,IAAIA,GAAG,KAAKR,IAA9C,CAFJ,CAGV;;AAHU,OAAd;AAKH,KAND,MAMO;AACH,WAAKR,QAAL,CAAc;AACVU,QAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWM,YAAX,CAAwBI,MAAxB,CAA+BN,IAA/B,CADJ;AAEV;AACAC,QAAAA,aAAa,EAAE,KAAKL,KAAL,CAAWK,aAAX,CAAyBM,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,KAAKR,IAA/C;AAHL,OAAd;AAKH;AACJ;;AACDS,EAAAA,SAAS,CAACC,GAAD,EAAM;AACX,QAAI,KAAKd,KAAL,CAAWO,YAAX,CAAwBE,OAAxB,CAAgCK,GAAhC,IAAuC,CAAC,CAA5C,EAA+C;AAC3C,aAAO,KAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AACJ;;AAEDC,EAAAA,cAAc,GAAG;AAEb,SAAKnB,QAAL,CAAc;AAAEW,MAAAA,YAAY,EAAE,KAAKP,KAAL,CAAWO,YAAX,CAAwBG,MAAxB,CAA+B,KAAKV,KAAL,CAAWM,YAA1C;AAAhB,KAAd,EAFa,CAGb;AACA;AACA;AACH;;AAEDU,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAK5B,qBAAL;AACH;;AAED6B,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWI,IADrB;AAEI,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,aAF1B;AAGI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,YAHzB;AAII,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,YAJzB;AAKI,MAAA,WAAW,EAAE,KAAKC,WAAL,CAAiBU,IAAjB,CAAsB,IAAtB,CALjB;AAMI,MAAA,SAAS,EAAE,KAAKL,SAAL,CAAeK,IAAf,CAAoB,IAApB,CANf;AAOI,MAAA,cAAc,EAAE,KAAKH,cAAL,CAAoBG,IAApB,CAAyB,IAAzB,CAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAaI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM;AACjCzB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWM,YAAvB;AACAa,QAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAbJ,EAmBI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,aAAb;AAA4B,MAAA,MAAM,EAAE,MAChC,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,OAAhB;AACI,QAAA,MAAM,EAAE,QADZ;AAEI,QAAA,OAAO,EAAE,SAFb;AAGI,QAAA,KAAK,EAAE,OAHX;AAII,QAAA,QAAQ,EAAE,UAJd;AAKI,QAAA,IAAI,EAAE,MALV;AAMI,QAAA,IAAI,EAAE,MANV;AAOI,QAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWM,YAAX,CAAwBe,MAPxC;AAQI,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWM,YARtB;AASI,QAAA,WAAW,EAAE,aATjB;AAUI,QAAA,eAAe,EAAE,iBAVrB;AAWI,QAAA,UAAU,EAAE,YAXhB;AAYI,QAAA,SAAS,EAAE,WAZf;AAaI,QAAA,eAAe,EAAE,iBAbrB;AAcI,QAAA,cAAc,EAAE,gBAdpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADJ,CADJ;AAyCH;;AAzIgC;;AA4IrC,MAAMgB,QAAN,SAAuB3C,SAAvB,CAAiC;AAC7BsC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK9B,KAAL,CAAWiB,IAAX,CAAgBmB,GAAhB,CAAoBT,GAAG,IACpB;AACI,MAAA,SAAS,EAAE,KAAK3B,KAAL,CAAWqC,QAAX,CAAoBf,OAApB,CAA4BK,GAA5B,IAAmC,CAAC,CAApC,GAAwC,UAAxC,GAAsD,KAAK3B,KAAL,CAAWsC,QAAX,CAAoBhB,OAApB,CAA4BK,GAA5B,IAAmC,CAAC,CAApC,GAAwC,UAAxC,GAAqD,WAD1H;AAEI,MAAA,GAAG,EAAEA,GAFT;AAEc,MAAA,OAAO,EAAE,KAAK3B,KAAL,CAAW0B,SAAX,CAAqBC,GAArB,IAA4BZ,CAAC,IAAI,KAAKwB,WAAL,CAAiBZ,GAAjB,CAAjC,GAAyD,IAFhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEwFA,GAFxF,MADH,CADL,CADJ,CADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZJ,EAaI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,uBAAhC;AAAwD,MAAA,OAAO,EAAE,MAAM,KAAK3B,KAAL,CAAW4B,cAAX,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAbJ,CADJ;AAiBH;;AAEDW,EAAAA,WAAW,CAACtB,IAAD,EAAO;AACd,SAAKjB,KAAL,CAAWqB,WAAX,CAAuBJ,IAAvB;AACH;;AAvB4B;;AAyBjC,eAAenB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './stylesheets/TheatreSeats.css';\nimport ETicket from './ETicket';\n\nclass TheatreSeats extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            seat: [\n                'G1', 'G2', 'G3', 'G4', 'G5', 'G6',\n                'B1', 'B2', 'B3', 'B4', 'B5', 'B6',\n                'B7', 'B8', 'B9', 'B10', 'B11', 'B12'\n            ],\n            seatAvailable: [\n                'G1', 'G2', 'G3', 'G4', 'G5', 'G6',\n                'B1', 'B2', 'B3', 'B4', 'B5', 'B6',\n                'B7', 'B8', 'B9', 'B10', 'B11', 'B12'\n            ],\n            seatReserved: [],\n            seatSelected: [],\n            seatInfo: {\n                'G1': '',\n                'G2' : '',\n                'G3' : '',\n                'G4' : '',\n                'G5' : '',\n                'G6' : '',\n                'B1' : '',\n                'B2' : '',\n                'B3' : '',\n                'B4' : '',\n                'B5' : '',\n                'B6' : '',\n                'B7' : '',\n                'B8' : '',\n                'B9' : '',\n                'B10' : '',\n                'B11' : '',\n                'B12' : ''\n            }\n        }\n    }\n\n    GetSlotInfoAPIHandler = () => {\n        //console.log('entered')\n        axios.get(`http://localhost:3000/ticketbooking/${this.props.slotId}`)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    seatInfo : {\n                        'G1' : response.data.A.availability[0],\n                        'G2' : response.data.A.availability[1],\n                        'G3' : response.data.A.availability[2],\n                        'G4' : response.data.A.availability[3],\n                        'G5' : response.data.A.availability[4],\n                        'G6' : response.data.A.availability[5]\n                    }\n                })\n                console.log(this.state.seatInfo)\n            }).catch((e) => alert(e))\n    }\n\n    onClickData(seat) {\n        if (this.state.seatReserved.indexOf(seat) > -1) {\n            this.setState({\n                seatAvailable: this.state.seatAvailable.concat(seat),\n                seatReserved: this.state.seatReserved.filter(res => res !== seat),\n                // seatSelected: this.state.seatSelected.filter(res => res != seat)\n            })\n        } else {\n            this.setState({\n                seatReserved: this.state.seatReserved.concat(seat),\n                // seatSelected: this.state.seatSelected.concat(seat),\n                seatAvailable: this.state.seatAvailable.filter(res => res !== seat)\n            })\n        }\n    }\n    checktrue(row) {\n        if (this.state.seatSelected.indexOf(row) > -1) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    handleSubmited() {\n\n        this.setState({ seatSelected: this.state.seatSelected.concat(this.state.seatReserved) })\n        // this.setState({\n        //     seatReserved: []\n        // })\n    }\n\n    componentDidMount() {\n        //console.log('selected slot is', this.props.slotId)\n        this.GetSlotInfoAPIHandler();\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"Background\">\n                    <div className=\"Box\">\n                        <DrawGrid\n                            seat={this.state.seat}\n                            available={this.state.seatAvailable}\n                            reserved={this.state.seatReserved}\n                            selected={this.state.seatSelected}\n                            onClickData={this.onClickData.bind(this)}\n                            checktrue={this.checktrue.bind(this)}\n                            handleSubmited={this.handleSubmited.bind(this)}\n                        />\n                    </div>\n\n                    <Link to={'/GetTickets'}>\n                        <button type=\"button\" onClick={() => {\n                            console.log(this.state.seatReserved)\n                            window.scrollTo(0, 92500)\n                        }}>Get Ticket</button>\n                    </Link>\n                    <Route path={\"/GetTickets\"} render={() =>\n                        <ETicket Title={\"Title\"}\n                            Poster={\"Poster\"}\n                            Theatre={\"Theatre\"}\n                            dimen={\"dimen\"}\n                            language={\"language\"}\n                            time={\"time\"}\n                            date={\"date\"}\n                            numofseats={this.state.seatReserved.length}\n                            seats={this.state.seatReserved}\n                            ticketprice={\"ticketprice\"}\n                            conveniencefees={\"conveniencefees\"}\n                            amountpaid={\"amountpaid\"}\n                            bookingid={\"bookingid\"}\n                            bookingdatetime={\"bookingdatetime\"}\n                            confirmationid={\"confirmationid\"} />\n                    } />\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nclass DrawGrid extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <table className=\"grid\">\n                    <tbody>\n                        <tr>\n                            {this.props.seat.map(row =>\n                                <td\n                                    className={this.props.selected.indexOf(row) > -1 ? 'reserved' : (this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available')}\n                                    key={row} onClick={this.props.checktrue(row) ? e => this.onClickSeat(row) : null} >{row} </td>)}\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>*G - GOLD seats</h3>\n                <h3>*B - Balcony seats</h3>\n                <button type=\"button\" className=\"btn-success btnmargin\" onClick={() => this.props.handleSubmited()}>Confirm Booking</button>\n            </div>\n        )\n    }\n\n    onClickSeat(seat) {\n        this.props.onClickData(seat);\n    }\n}\nexport default TheatreSeats;\n"]},"metadata":{},"sourceType":"module"}