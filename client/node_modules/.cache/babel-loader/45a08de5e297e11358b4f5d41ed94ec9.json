{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/MyProfile.module.css';\n\nclass UpdateProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.safelyParseJSON = json => {\n      var parsed;\n\n      try {\n        parsed = JSON.parse(json);\n      } catch (e) {// Oh well, but whatever...\n      }\n\n      return parsed; // Could be undefined!\n    };\n\n    this.updateUserState = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.UserUpdateAPIHandler = e => {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        // console.log('validation successful!');\n        console.log(this.state);\n        const user = {\n          name: {\n            firstName: this.state.name.firstName,\n            lastName: this.state.name.lastName\n          },\n          phoneNumber: this.state.phoneNumber,\n          email: this.state.email,\n          userType: this.state.userType\n        };\n        console.log(user); // axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        // axios.put('http://localhost:3000/users/me', user)\n        //     .then(response => {\n        //         console.log(response.data)\n        //         this.setState({\n        //             name: {\n        //                 firstName: response.data.name.firstName,\n        //                 lastname: response.data.name.lastName,\n        //             },\n        //             email: response.data.email,\n        //             userType: response.data.userType,\n        //             phoneNumber: response.data.phoneNumber,\n        //             // password: currentUser.userType,\n        //             // repassword: '',\n        //             // errors: {}\n        //         })\n        //         console.log('state is', this.state)\n        //         console.log(response.data);\n        //         alert('Profile updated!')\n        //         localStorage.setItem(\"currentUser\", JSON.stringify(response.data))\n        //         this.props.history.replace('/');\n        //         window.location.reload(false);\n        //     }).catch((e) => alert(e));\n      } else {\n        alert(\"Form has errors.\");\n      }\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      password: '',\n      repassword: '',\n      userType: '',\n      gender: '',\n      DOB: '',\n      errors: {}\n    };\n    this.safelyParseJSON = this.safelyParseJSON.bind(this);\n    this.updateUserState = this.updateUserState.bind(this);\n    this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  // updatefirstName = (event) => {\n  //     this.setState({\n  //         name: {\n  //             firstName: event.target.value,\n  //             lastName: this.state.lastName\n  //         }\n  //     })\n  // }\n  // updatelastName = (event) => {\n  //     this.setState({\n  //         name: {\n  //             firstName: this.state.firstName,\n  //             lastName: event.target.value\n  //         }\n  //     })\n  // }\n  handleValidation() {\n    let errors = {};\n    let formIsValid = true; //Password\n    // let password = this.state.password;\n    // let repass = this.state.repassword;\n    // if (password.length === 0) {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Cannot be empty\";\n    // }\n    // else if (password.length < 7) {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Password should contain 7 characters\";\n    // }\n    // if(password!==repass)\n    // {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Passwords don't match.\";\n    // }\n    //Email\n\n    let email = this.state.email;\n\n    if (email.length === 0) {\n      formIsValid = false;\n      errors[\"email\"] = \"* Cannot be empty\";\n    } else if (typeof email !== \"undefined\") {\n      let lastAtPos = email.lastIndexOf('@');\n      let lastDotPos = email.lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && email.length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"* Email is not valid\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  componentDidMount() {\n    const currentUserStorage = localStorage.getItem(\"currentUser\");\n    const currentUser = this.safelyParseJSON(currentUserStorage);\n    this.setState({\n      firstName: currentUser.name.firstName,\n      lastName: currentUser.name.lastName,\n      email: currentUser.email,\n      phoneNumber: currentUser.phoneNumber,\n      userType: currentUser.userType // password: currentUser.password,\n\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.profileBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.myName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"myname\",\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"mylastname\",\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.mymobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phoneNumber\",\n      value: this.state.phoneNumber,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"mobile\",\n      placeholder: \"Mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"email\",\n      placeholder: \"xyz@gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: styles.warning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.errors[\"email\"])), React.createElement(\"div\", {\n      className: styles.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.mygender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.greywords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Gender ?\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"male\",\n      value: \"male\",\n      checked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"male\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Male\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"female\",\n      value: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"female\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Female\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"others\",\n      value: \"others\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"others\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Others\")), React.createElement(\"div\", {\n      className: styles.mybd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      id: \"mybirthday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: styles.greywords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"It's my birthday\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: styles.usertype,\n      value: this.state.userType,\n      onChange: this.updateUserState,\n      name: \"userType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      value: \"customer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Customer\"), React.createElement(\"option\", {\n      value: \"vendor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"TheatreOwner\"), React.createElement(\"option\", {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Admin\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: styles.submitbtn,\n      onClick: this.UserUpdateAPIHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UpdateProfile;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js"],"names":["React","Component","Link","axios","styles","UpdateProfile","constructor","props","safelyParseJSON","json","parsed","JSON","parse","e","updateUserState","event","setState","target","name","value","UserUpdateAPIHandler","preventDefault","handleValidation","console","log","state","user","firstName","lastName","phoneNumber","email","userType","alert","password","repassword","gender","DOB","errors","bind","formIsValid","length","lastAtPos","lastIndexOf","lastDotPos","indexOf","componentDidMount","currentUserStorage","localStorage","getItem","currentUser","render","profileBox","myName","inputbox","mymobile","warning","mygender","greywords","genderlabel","mybd","usertype","submitbtn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport styles from './stylesheets/MyProfile.module.css'\n\nclass UpdateProfile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phoneNumber: '',\n            password: '',\n            repassword: '',\n            userType: '',\n            gender: '',\n            DOB: '',\n            errors: {}\n        };\n        this.safelyParseJSON = this.safelyParseJSON.bind(this)\n        this.updateUserState = this.updateUserState.bind(this);\n        this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n        this.handleValidation = this.handleValidation.bind(this);\n    }\n\n    safelyParseJSON = (json) => {\n        var parsed\n        try {\n            parsed = JSON.parse(json)\n        } catch (e) {\n            // Oh well, but whatever...\n        }\n        return parsed // Could be undefined!\n    }\n\n    updateUserState = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    // updatefirstName = (event) => {\n    //     this.setState({\n    //         name: {\n    //             firstName: event.target.value,\n    //             lastName: this.state.lastName\n    //         }\n    //     })\n    // }\n    // updatelastName = (event) => {\n    //     this.setState({\n    //         name: {\n    //             firstName: this.state.firstName,\n    //             lastName: event.target.value\n    //         }\n    //     })\n    // }\n\n    handleValidation() {\n        let errors = {};\n        let formIsValid = true;\n\n        //Password\n        // let password = this.state.password;\n        // let repass = this.state.repassword;\n        // if (password.length === 0) {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Cannot be empty\";\n        // }\n        // else if (password.length < 7) {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Password should contain 7 characters\";\n        // }\n        // if(password!==repass)\n        // {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Passwords don't match.\";\n        // }\n\n        //Email\n        let email = this.state.email;\n        if (email.length === 0) {\n            formIsValid = false;\n            errors[\"email\"] = \"* Cannot be empty\";\n        }\n        else if (typeof email !== \"undefined\") {\n            let lastAtPos = email.lastIndexOf('@');\n            let lastDotPos = email.lastIndexOf('.');\n\n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\n                formIsValid = false;\n                errors[\"email\"] = \"* Email is not valid\";\n            }\n        }\n\n        this.setState({ errors: errors });\n        return formIsValid;\n    }\n\n    UserUpdateAPIHandler = (e) => {\n        e.preventDefault();\n        if (this.handleValidation()) {\n            // console.log('validation successful!');\n            console.log(this.state);\n            const user = {\n                name: {\n                    firstName: this.state.name.firstName,\n                    lastName: this.state.name.lastName\n                },\n                phoneNumber: this.state.phoneNumber,\n                email: this.state.email,\n                userType: this.state.userType,\n            };\n            console.log(user)\n            // axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n            // axios.put('http://localhost:3000/users/me', user)\n            //     .then(response => {\n\n            //         console.log(response.data)\n            //         this.setState({\n            //             name: {\n            //                 firstName: response.data.name.firstName,\n            //                 lastname: response.data.name.lastName,\n            //             },\n            //             email: response.data.email,\n            //             userType: response.data.userType,\n            //             phoneNumber: response.data.phoneNumber,\n            //             // password: currentUser.userType,\n            //             // repassword: '',\n            //             // errors: {}\n            //         })\n            //         console.log('state is', this.state)\n            //         console.log(response.data);\n            //         alert('Profile updated!')\n            //         localStorage.setItem(\"currentUser\", JSON.stringify(response.data))\n            //         this.props.history.replace('/');\n            //         window.location.reload(false);\n            //     }).catch((e) => alert(e));\n        }\n        else {\n            alert(\"Form has errors.\")\n        }\n    }\n\n    componentDidMount() {\n        const currentUserStorage = localStorage.getItem(\"currentUser\");\n        const currentUser = this.safelyParseJSON(currentUserStorage);\n\n        this.setState({\n\n            firstName: currentUser.name.firstName,\n            lastName: currentUser.name.lastName,\n\n            email: currentUser.email,\n            phoneNumber: currentUser.phoneNumber,\n            userType: currentUser.userType\n            // password: currentUser.password,\n        });\n    }\n\n    render() {\n        return (\n            <div className={styles.profileBox}>\n                <div className={styles.myName}>\n                    <input type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.updateUserState} className={styles.inputbox} id=\"myname\" placeholder=\"First Name\"></input>\n                    <input type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.updateUserState} className={styles.inputbox} id=\"mylastname\" placeholder=\"Last Name\"></input>\n                </div>\n                <div className={styles.mymobile}>\n                    <input type=\"text\" name=\"phoneNumber\" value={this.state.phoneNumber} onChange={this.updateUserState} className={styles.inputbox} id=\"mobile\" placeholder=\"Mobile\"></input>\n                </div>\n                <div className={styles.email}>\n                    <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.updateUserState} className={styles.inputbox} id=\"email\" placeholder=\"xyz@gmail.com\"></input>\n                    <br /><span className={styles.warning}>{this.state.errors[\"email\"]}</span>\n                </div>\n                <div className={styles.password}>\n                    <div className={styles.mygender}>\n                        <p className={styles.greywords}>Gender ?</p>\n                        <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" checked></input>\n                        <label for=\"male\" className={styles.genderlabel}>Male</label>\n                        <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\"></input>\n                        <label for=\"female\" className={styles.genderlabel}>Female</label>\n                        <input type=\"radio\" name=\"gender\" id=\"others\" value=\"others\"></input>\n                        <label for=\"others\" className={styles.genderlabel}>Others</label>\n                    </div>\n                    <div className={styles.mybd}>\n                        <input type=\"date\" id=\"mybirthday\"></input>\n                        <p className={styles.greywords}>It's my birthday</p>\n                    </div>\n                    {/* <p className={styles.genderlabel}>Change Password ?</p>\n                    <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.updateUserState} className={styles.inputbox} id=\"pass\" placeholder=\"enter new password\"></input>\n                    <br /><span className={styles.warning}>{this.state.errors[\"password\"]}</span><br /> */}\n                    {/* <input type=\"text\" className={styles.inputbox} id=\"repass\" placeholder=\"re-enter new password to confirm\"></input> */}\n                </div>\n                <div>\n                    <select className={styles.usertype} value={this.state.userType} onChange={this.updateUserState} name=\"userType\">\n                        <option selected value=\"customer\">Customer</option>\n                        <option value=\"vendor\">TheatreOwner</option>\n                        <option value=\"admin\">Admin</option>\n                    </select>\n                </div>\n                <div>\n                    <button type=\"submit\" className={styles.submitbtn} onClick={this.UserUpdateAPIHandler}>Update</button>\n                </div>\n                <br /><br />\n                {/* <div>\n                    <Link to='/userDelete'>\n                        <button type=\"submit\" className={styles.submitbtn}>Delete Account</button>\n                    </Link>\n                </div> */}\n            </div>\n        )\n    }\n}\n\nexport default UpdateProfile;"]},"metadata":{},"sourceType":"module"}