{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/TheatreSeats.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './stylesheets/TheatreSeats.css';\nimport ETicket from './ETicket';\n\nclass TheatreSeats extends Component {\n  componentDidMount() {\n    console.log('selected slot is', this.props.slotId);\n    this.GetSlotInfoAPIHandler();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.GetSlotInfoAPIHandler = () => {\n      axios.get(`http://localhost:3000/shows/${this.props.slotId}`).then(response => {\n        console.log(response.data); // this.setState({\n        //     theatres: response.data\n        // })\n        //console.log(this.state.theatres)\n      }).catch(e => alert(e));\n    };\n\n    this.state = {\n      seat: ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10', 'B11', 'B12'],\n      seatAvailable: ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10', 'B11', 'B12'],\n      seatReserved: [],\n      seatSelected: []\n    };\n  }\n\n  onClickData(seat) {\n    if (this.state.seatReserved.indexOf(seat) > -1) {\n      this.setState({\n        seatAvailable: this.state.seatAvailable.concat(seat),\n        seatReserved: this.state.seatReserved.filter(res => res !== seat) // seatSelected: this.state.seatSelected.filter(res => res != seat)\n\n      });\n    } else {\n      this.setState({\n        seatReserved: this.state.seatReserved.concat(seat),\n        // seatSelected: this.state.seatSelected.concat(seat),\n        seatAvailable: this.state.seatAvailable.filter(res => res !== seat)\n      });\n    }\n  }\n\n  checktrue(row) {\n    if (this.state.seatSelected.indexOf(row) > -1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  handleSubmited() {\n    this.setState({\n      seatSelected: this.state.seatSelected.concat(this.state.seatReserved)\n    }); // this.setState({\n    //     seatReserved: []\n    // })\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(DrawGrid, {\n      seat: this.state.seat,\n      available: this.state.seatAvailable,\n      reserved: this.state.seatReserved,\n      selected: this.state.seatSelected,\n      onClickData: this.onClickData.bind(this),\n      checktrue: this.checktrue.bind(this),\n      handleSubmited: this.handleSubmited.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: '/GetTickets',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        console.log(this.state.seatReserved);\n        window.scrollTo(0, 92500);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Get Ticket\")), React.createElement(Route, {\n      path: \"/GetTickets\",\n      render: () => React.createElement(ETicket, {\n        Title: \"Title\",\n        Poster: \"Poster\",\n        Theatre: \"Theatre\",\n        dimen: \"dimen\",\n        language: \"language\",\n        time: \"time\",\n        date: \"date\",\n        numofseats: this.state.seatReserved.length,\n        seats: this.state.seatReserved,\n        ticketprice: \"ticketprice\",\n        conveniencefees: \"conveniencefees\",\n        amountpaid: \"amountpaid\",\n        bookingid: \"bookingid\",\n        bookingdatetime: \"bookingdatetime\",\n        confirmationid: \"confirmationid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass DrawGrid extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.props.seat.map(row => React.createElement(\"td\", {\n      className: this.props.selected.indexOf(row) > -1 ? 'reserved' : this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available',\n      key: row,\n      onClick: this.props.checktrue(row) ? e => this.onClickSeat(row) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, row, \" \"))))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"*G - GOLD seats\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"*B - Balcony seats\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-success btnmargin\",\n      onClick: () => this.props.handleSubmited(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Confirm Booking\"));\n  }\n\n  onClickSeat(seat) {\n    this.props.onClickData(seat);\n  }\n\n}\n\nexport default TheatreSeats;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/TheatreSeats.js"],"names":["React","Component","BrowserRouter","Route","Link","axios","ETicket","TheatreSeats","componentDidMount","console","log","props","slotId","GetSlotInfoAPIHandler","constructor","get","then","response","data","catch","e","alert","state","seat","seatAvailable","seatReserved","seatSelected","onClickData","indexOf","setState","concat","filter","res","checktrue","row","handleSubmited","render","bind","window","scrollTo","length","DrawGrid","map","selected","reserved","onClickSeat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './stylesheets/TheatreSeats.css';\nimport ETicket from './ETicket';\n\nclass TheatreSeats extends Component {\n    componentDidMount() { \n        console.log('selected slot is', this.props.slotId)\n        this.GetSlotInfoAPIHandler();\n    }\n\n    GetSlotInfoAPIHandler = () => {\n        axios.get(`http://localhost:3000/shows/${this.props.slotId}`)\n        .then(response => {\n            console.log(response.data)\n            // this.setState({\n            //     theatres: response.data\n            // })\n            //console.log(this.state.theatres)\n        }).catch((e) => alert(e))\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            seat: [\n                'G1', 'G2', 'G3', 'G4', 'G5', 'G6',\n                'B1', 'B2', 'B3', 'B4', 'B5', 'B6',\n                'B7', 'B8', 'B9', 'B10', 'B11', 'B12'\n            ],\n            seatAvailable: [\n                'G1', 'G2', 'G3', 'G4', 'G5', 'G6',\n                'B1', 'B2', 'B3', 'B4', 'B5', 'B6',\n                'B7', 'B8', 'B9', 'B10', 'B11', 'B12'\n            ],\n            seatReserved: [],\n            seatSelected: [],\n        }\n    }\n\n    onClickData(seat) {\n        if (this.state.seatReserved.indexOf(seat) > -1) {\n            this.setState({\n                seatAvailable: this.state.seatAvailable.concat(seat),\n                seatReserved: this.state.seatReserved.filter(res => res !== seat),\n                // seatSelected: this.state.seatSelected.filter(res => res != seat)\n            })\n        } else {\n            this.setState({\n                seatReserved: this.state.seatReserved.concat(seat),\n                // seatSelected: this.state.seatSelected.concat(seat),\n                seatAvailable: this.state.seatAvailable.filter(res => res !== seat)\n            })\n        }\n    }\n    checktrue(row) {\n        if (this.state.seatSelected.indexOf(row) > -1) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    handleSubmited() {\n\n        this.setState({ seatSelected: this.state.seatSelected.concat(this.state.seatReserved) })\n        // this.setState({\n        //     seatReserved: []\n        // })\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"Background\">\n                    <div className=\"Box\">\n                        <DrawGrid\n                            seat={this.state.seat}\n                            available={this.state.seatAvailable}\n                            reserved={this.state.seatReserved}\n                            selected={this.state.seatSelected}\n                            onClickData={this.onClickData.bind(this)}\n                            checktrue={this.checktrue.bind(this)}\n                            handleSubmited={this.handleSubmited.bind(this)}\n                        />\n                    </div>\n\n                    <Link to ={'/GetTickets'}>\n                    <button type=\"button\" onClick={ () => {\n                        console.log(this.state.seatReserved)\n                        window.scrollTo(0,92500)} }>Get Ticket</button>\n                    </Link>\n                    <Route path={\"/GetTickets\"} render={ () => \n                        <ETicket Title={\"Title\"}\n                               Poster={\"Poster\"}\n                               Theatre={\"Theatre\"}\n                               dimen={\"dimen\"}\n                               language={\"language\"}\n                               time={\"time\"}\n                               date={\"date\"}\n                               numofseats={this.state.seatReserved.length}\n                               seats={this.state.seatReserved}\n                               ticketprice={\"ticketprice\"}\n                               conveniencefees={\"conveniencefees\"}\n                               amountpaid={\"amountpaid\"}\n                               bookingid={\"bookingid\"}\n                               bookingdatetime={\"bookingdatetime\"}\n                               confirmationid={\"confirmationid\"}/>\n                    } />\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nclass DrawGrid extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <table className=\"grid\">\n                    <tbody>\n                        <tr>\n                            {this.props.seat.map(row =>\n                                <td\n                                    className={this.props.selected.indexOf(row) > -1 ? 'reserved' : (this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available')}\n                                    key={row} onClick={this.props.checktrue(row) ? e => this.onClickSeat(row) : null} >{row} </td>)}\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>*G - GOLD seats</h3>\n                <h3>*B - Balcony seats</h3>\n                <button type=\"button\" className=\"btn-success btnmargin\" onClick={() => this.props.handleSubmited()}>Confirm Booking</button>\n            </div>\n        )\n    }\n\n    onClickSeat(seat) {\n        this.props.onClickData(seat);\n    }\n}\nexport default TheatreSeats;\n"]},"metadata":{},"sourceType":"module"}