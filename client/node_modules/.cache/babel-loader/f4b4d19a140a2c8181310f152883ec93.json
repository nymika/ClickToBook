{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/SlotDetails.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass SlotDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      getSlotInfoBody: {\n        day: \"2020-06-07\"\n      },\n      postSlotInfoBody: {\n        movieid: '',\n        priceInfo: {\n          A: '',\n          B: ''\n        },\n        bookingInfo: [{\n          day: '',\n          status: '',\n          slot: ''\n        }]\n      },\n      getSlotInfo: {\n        _id: '',\n        _movie: '',\n        _slot: '',\n        _theatre: '',\n        day: '',\n        seatInfo: {\n          A: {\n            availability: [],\n            price: ''\n          },\n          B: {\n            availability: [],\n            price: ''\n          }\n        }\n      }\n    };\n\n    this.GetSlotInfoAPIHandler = (slotid, theatreid) => {\n      console.log('get slotInfo done!'); //console.log(theatreid, slotid, this.state.getSlotInfoBody)\n\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      axios.post(`http://localhost:3000/theatres/${theatreid}/${slotid}`, this.state.getSlotInfoBody).then(response => {\n        console.log(response.data);\n        this.setState({\n          getSlotInfo: {\n            _id: response.data._id,\n            _movie: response.data._movie,\n            _slot: response.data._slot,\n            _theatre: response.data._theatre,\n            day: response.data.day,\n            seatInfo: {\n              A: {\n                availability: response.data.seatInfo.A.availability,\n                price: response.data.seatInfo.A.price\n              },\n              B: {\n                availability: response.data.seatInfo.B.availability,\n                price: response.data.seatInfo.B.price\n              }\n            }\n          }\n        });\n        console.log(this.state);\n      }).catch(e => alert(e));\n    };\n  }\n\n  componentDidMount() {\n    var selectedSlotId = this.props.match.params.SlotId;\n    var selectedTheatreId = this.props.match.params.TheatreId; //console.log(selectedTheatreId, selectedSlotId)\n\n    this.GetSlotInfoAPIHandler(selectedSlotId, selectedTheatreId);\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"hi\");\n  }\n\n}\n\nexport default SlotDetails;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/SlotDetails.js"],"names":["React","Component","Route","Link","axios","SlotDetails","state","getSlotInfoBody","day","postSlotInfoBody","movieid","priceInfo","A","B","bookingInfo","status","slot","getSlotInfo","_id","_movie","_slot","_theatre","seatInfo","availability","price","GetSlotInfoAPIHandler","slotid","theatreid","console","log","defaults","headers","common","localStorage","getItem","post","then","response","data","setState","catch","e","alert","componentDidMount","selectedSlotId","props","match","params","SlotId","selectedTheatreId","TheatreId","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\nclass SlotDetails extends Component {\n    state = {\n        getSlotInfoBody: {\n            day: \"2020-06-07\"\n        },\n        postSlotInfoBody: {\n            movieid: '',\n            priceInfo: {\n                A: '',\n                B: ''\n            },\n            bookingInfo: [\n                {\n                    day: '',\n                    status: '',\n                    slot: ''\n                }\n            ]\n        },\n        getSlotInfo : {\n            _id : '',\n            _movie : '',\n            _slot : '',\n            _theatre : '',\n            day : '',\n            seatInfo : {\n                A : {\n                    availability : [],\n                    price : ''\n                },\n                B : {\n                    availability : [],\n                    price : ''\n                }\n            }\n        }\n    }\n\n    GetSlotInfoAPIHandler = (slotid, theatreid) => {\n        console.log('get slotInfo done!')\n        //console.log(theatreid, slotid, this.state.getSlotInfoBody)\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.post(`http://localhost:3000/theatres/${theatreid}/${slotid}`, this.state.getSlotInfoBody)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    getSlotInfo : {\n                        _id : response.data._id,\n                        _movie : response.data._movie,\n                        _slot : response.data._slot,\n                        _theatre : response.data._theatre,\n                        day : response.data.day,\n                        seatInfo : {\n                            A : {\n                                availability : response.data.seatInfo.A.availability,\n                                price : response.data.seatInfo.A.price\n                            },\n                            B : {\n                                availability : response.data.seatInfo.B.availability,\n                                price : response.data.seatInfo.B.price\n                            }\n                        }\n                    }\n                })\n                console.log(this.state)\n                \n            }).catch((e) => alert(e));\n    }\n\n    componentDidMount() {\n        var selectedSlotId = this.props.match.params.SlotId;\n        var selectedTheatreId = this.props.match.params.TheatreId;\n        //console.log(selectedTheatreId, selectedSlotId)\n        this.GetSlotInfoAPIHandler(selectedSlotId, selectedTheatreId);\n    }\n\n    render() {\n        return (\n            <h1>hi</h1>\n        )\n    }\n}\nexport default SlotDetails"]},"metadata":{},"sourceType":"module"}