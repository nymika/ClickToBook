{"ast":null,"code":"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/MyProfile.module.css';\n\nclass UpdateProfile extends Component {// constructor(props) {\n  //     super(props);\n  //     const currentUserStorage = localStorage.getItem(\"currentUser\");\n  //     const token = localStorage.getItem(\"token\")\n  //     this.safelyParseJSON = this.safelyParseJSON.bind(this)\n  //     const currentUser = this.safelyParseJSON(currentUserStorage)\n  //     console.log(localStorage.getItem(\"currentUser\"))\n  //     this.state = {\n  //         firstname: currentUser.firstname,\n  //         lastname: currentUser.lastname,\n  //         email: currentUser.email,\n  //         mobile: currentUser.mobile,\n  //         password: currentUser.userType,\n  //         repassword: '',\n  //         errors: {}\n  //     }\n  //     this.updateUserState = this.updateUserState.bind(this);\n  //     this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n  //     this.handleValidation = this.handleValidation.bind(this);\n  // }\n  // safelyParseJSON = (json) => {\n  //     var parsed\n  //     try {\n  //         parsed = JSON.parse(json)\n  //     } catch (e) {\n  //         // Oh well, but whatever...\n  //     }\n  //     return parsed // Could be undefined!\n  // }\n  // updateUserState = (event) => {\n  //     this.setState({\n  //         [event.target.name]: event.target.value\n  //     });\n  // }\n  // handleValidation() {\n  //     let errors = {};\n  //     let formIsValid = true;\n  //     //Password\n  //     let password = this.state.password;\n  //     let repass = this.state.repassword;\n  //     if (password.length === 0) {\n  //         formIsValid = false;\n  //         errors[\"password\"] = \"* Cannot be empty\";\n  //     }\n  //     else if (password.length < 7) {\n  //         formIsValid = false;\n  //         errors[\"password\"] = \"* Password should contain 7 characters\";\n  //     }\n  //     // if(password!==repass)\n  //     // {\n  //     //     formIsValid = false;\n  //     //     errors[\"password\"] = \"* Passwords don't match.\";\n  //     // }\n  //     //Email\n  //     let email = this.state.email;\n  //     if (email.length === 0) {\n  //         formIsValid = false;\n  //         errors[\"email\"] = \"* Cannot be empty\";\n  //     }\n  //     else if (typeof email !== \"undefined\") {\n  //         let lastAtPos = email.lastIndexOf('@');\n  //         let lastDotPos = email.lastIndexOf('.');\n  //         if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\n  //             formIsValid = false;\n  //             errors[\"email\"] = \"* Email is not valid\";\n  //         }\n  //     }\n  //     this.setState({ errors: errors });\n  //     return formIsValid;\n  // }\n  // UserUpdateAPIHandler = (e) => {\n  //     e.preventDefault();\n  //     if (this.handleValidation()) {\n  //         // console.log('validation successful!');\n  //         // console.log(this.state);\n  //         const user = {\n  //             firstname: this.state.firstname,\n  //             lastname: this.state.lastname,\n  //             mobile: this.state.mobile,\n  //             email: this.state.email,\n  //             password: this.state.password,\n  //         };\n  //         axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\")\n  //         axios.put('http://localhost:3001/users/me', user)\n  //             .then(response => {\n  //                 console.log('updated!')\n  //                 console.log(response.data)\n  //                 this.setState({\n  //                     firstname: response.data.firstname,\n  //                     lastname: currentUser.lastname,\n  //                     email: response.data.email,\n  //                     // mobile: currentUser.mobile,\n  //                     // password: currentUser.userType,\n  //                     // repassword: '',\n  //                     // errors: {}\n  //                 })\n  //                 console.log('state is', this.state)\n  //                 console.log(response.data.user);\n  //                 localStorage.setItem(\"currentUser\", JSON.stringify(response.data.user))\n  //             }).catch((e) => alert(e));\n  //     }\n  //     else {\n  //         alert(\"Form has errors.\")\n  //     }\n  // }\n  // // componentDidMount() {\n  // //     const token=localStorage.getItem(\"token\");\n  // //     const user=localStorage.getItem(\"currentUser\");\n  // // }\n  // render() {\n  //     return (\n  //         <div className={styles.profileBox}>\n  //             <div className={styles.myName}>\n  //                 <input type=\"text\" name=\"firstname\" value={this.state.firstname} onChange={this.updateUserState} className={styles.inputbox} id=\"myname\" placeholder=\"First Name\"></input>\n  //                 <input type=\"text\" name=\"lastname\" value={this.state.lastname} onChange={this.updateUserState} className={styles.inputbox} id=\"mylastname\" placeholder=\"Last Name\"></input>\n  //             </div>\n  //             <div className={styles.mymobile}>\n  //                 <input type=\"text\" name=\"mobile\" value={this.state.mobile} onChange={this.updateUserState} className={styles.inputbox} id=\"mobile\" placeholder=\"Mobile\"></input>\n  //             </div>\n  //             <div className={styles.email}>\n  //                 <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.updateUserState} className={styles.inputbox} id=\"email\" placeholder=\"xyz@gmail.com\"></input>\n  //                 <br /><span className={styles.warning}>{this.state.errors[\"email\"]}</span>\n  //             </div>\n  //             <div className={styles.password}>\n  //                 <div className={styles.mygender}>\n  //                     <p className={styles.greywords}>Gender ?</p>\n  //                     <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" checked></input>\n  //                     <label for=\"male\" className={styles.genderlabel}>Male</label>\n  //                     <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\"></input>\n  //                     <label for=\"female\" className={styles.genderlabel}>Female</label>\n  //                     <input type=\"radio\" name=\"gender\" id=\"others\" value=\"others\"></input>\n  //                     <label for=\"others\" className={styles.genderlabel}>Others</label>\n  //                 </div>\n  //                 <div className={styles.mybd}>\n  //                     <input type=\"date\" id=\"mybirthday\"></input>\n  //                     <p className={styles.greywords}>It's my birthday</p>\n  //                 </div>\n  //                 <p className={styles.genderlabel}>Change Password ?</p>\n  //                 <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.updateUserState} className={styles.inputbox} id=\"pass\" placeholder=\"enter new password\"></input>\n  //                 <br /><span className={styles.warning}>{this.state.errors[\"password\"]}</span><br />\n  //                 {/* <input type=\"text\" className={styles.inputbox} id=\"repass\" placeholder=\"re-enter new password to confirm\"></input> */}\n  //             </div>\n  //             <div>\n  //                 <select className={styles.usertype}>\n  //                     <option>Customer</option>\n  //                     <option>TheatreOwner</option>\n  //                 </select>\n  //             </div>\n  //             <div>\n  //                 <button type=\"submit\" className={styles.submitbtn} onClick={this.UserUpdateAPIHandler}>Update</button>\n  //             </div>\n  //             <br /><br />\n  //             <div>\n  //                 <Link to='/userDelete'>\n  //                     <button type=\"submit\" className={styles.submitbtn}>Delete Account</button>\n  //                 </Link>\n  //             </div>\n  //         </div>\n  //     )\n  // }\n}\n\nexport default UpdateProfile;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js"],"names":["React","Component","Link","axios","styles","UpdateProfile"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,oCAAnB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC,CAClkC;;AA6KtC,eAAeI,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport styles from './stylesheets/MyProfile.module.css'\n\nclass UpdateProfile extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     const currentUserStorage = localStorage.getItem(\"currentUser\");\n    //     const token = localStorage.getItem(\"token\")\n    //     this.safelyParseJSON = this.safelyParseJSON.bind(this)\n    //     const currentUser = this.safelyParseJSON(currentUserStorage)\n    //     console.log(localStorage.getItem(\"currentUser\"))\n    //     this.state = {\n    //         firstname: currentUser.firstname,\n    //         lastname: currentUser.lastname,\n    //         email: currentUser.email,\n    //         mobile: currentUser.mobile,\n    //         password: currentUser.userType,\n    //         repassword: '',\n    //         errors: {}\n    //     }\n    //     this.updateUserState = this.updateUserState.bind(this);\n    //     this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n    //     this.handleValidation = this.handleValidation.bind(this);\n    // }\n\n    // safelyParseJSON = (json) => {\n    //     var parsed\n    //     try {\n    //         parsed = JSON.parse(json)\n    //     } catch (e) {\n    //         // Oh well, but whatever...\n    //     }\n    //     return parsed // Could be undefined!\n    // }\n\n    // updateUserState = (event) => {\n    //     this.setState({\n    //         [event.target.name]: event.target.value\n    //     });\n    // }\n\n    // handleValidation() {\n    //     let errors = {};\n    //     let formIsValid = true;\n\n    //     //Password\n    //     let password = this.state.password;\n    //     let repass = this.state.repassword;\n    //     if (password.length === 0) {\n    //         formIsValid = false;\n    //         errors[\"password\"] = \"* Cannot be empty\";\n    //     }\n    //     else if (password.length < 7) {\n    //         formIsValid = false;\n    //         errors[\"password\"] = \"* Password should contain 7 characters\";\n    //     }\n    //     // if(password!==repass)\n    //     // {\n    //     //     formIsValid = false;\n    //     //     errors[\"password\"] = \"* Passwords don't match.\";\n    //     // }\n\n    //     //Email\n    //     let email = this.state.email;\n    //     if (email.length === 0) {\n    //         formIsValid = false;\n    //         errors[\"email\"] = \"* Cannot be empty\";\n    //     }\n    //     else if (typeof email !== \"undefined\") {\n    //         let lastAtPos = email.lastIndexOf('@');\n    //         let lastDotPos = email.lastIndexOf('.');\n\n    //         if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\n    //             formIsValid = false;\n    //             errors[\"email\"] = \"* Email is not valid\";\n    //         }\n    //     }\n\n    //     this.setState({ errors: errors });\n    //     return formIsValid;\n    // }\n\n    // UserUpdateAPIHandler = (e) => {\n    //     e.preventDefault();\n    //     if (this.handleValidation()) {\n    //         // console.log('validation successful!');\n    //         // console.log(this.state);\n    //         const user = {\n    //             firstname: this.state.firstname,\n    //             lastname: this.state.lastname,\n    //             mobile: this.state.mobile,\n    //             email: this.state.email,\n    //             password: this.state.password,\n    //         };\n    //         axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\")\n    //         axios.put('http://localhost:3001/users/me', user)\n    //             .then(response => {\n    //                 console.log('updated!')\n    //                 console.log(response.data)\n    //                 this.setState({\n    //                     firstname: response.data.firstname,\n    //                     lastname: currentUser.lastname,\n    //                     email: response.data.email,\n    //                     // mobile: currentUser.mobile,\n    //                     // password: currentUser.userType,\n    //                     // repassword: '',\n    //                     // errors: {}\n    //                 })\n    //                 console.log('state is', this.state)\n    //                 console.log(response.data.user);\n    //                 localStorage.setItem(\"currentUser\", JSON.stringify(response.data.user))\n    //             }).catch((e) => alert(e));\n    //     }\n    //     else {\n    //         alert(\"Form has errors.\")\n    //     }\n    // }\n\n    // // componentDidMount() {\n    // //     const token=localStorage.getItem(\"token\");\n    // //     const user=localStorage.getItem(\"currentUser\");\n    // // }\n\n    // render() {\n    //     return (\n    //         <div className={styles.profileBox}>\n    //             <div className={styles.myName}>\n    //                 <input type=\"text\" name=\"firstname\" value={this.state.firstname} onChange={this.updateUserState} className={styles.inputbox} id=\"myname\" placeholder=\"First Name\"></input>\n    //                 <input type=\"text\" name=\"lastname\" value={this.state.lastname} onChange={this.updateUserState} className={styles.inputbox} id=\"mylastname\" placeholder=\"Last Name\"></input>\n    //             </div>\n    //             <div className={styles.mymobile}>\n    //                 <input type=\"text\" name=\"mobile\" value={this.state.mobile} onChange={this.updateUserState} className={styles.inputbox} id=\"mobile\" placeholder=\"Mobile\"></input>\n    //             </div>\n    //             <div className={styles.email}>\n    //                 <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.updateUserState} className={styles.inputbox} id=\"email\" placeholder=\"xyz@gmail.com\"></input>\n    //                 <br /><span className={styles.warning}>{this.state.errors[\"email\"]}</span>\n    //             </div>\n    //             <div className={styles.password}>\n    //                 <div className={styles.mygender}>\n    //                     <p className={styles.greywords}>Gender ?</p>\n    //                     <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" checked></input>\n    //                     <label for=\"male\" className={styles.genderlabel}>Male</label>\n    //                     <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\"></input>\n    //                     <label for=\"female\" className={styles.genderlabel}>Female</label>\n    //                     <input type=\"radio\" name=\"gender\" id=\"others\" value=\"others\"></input>\n    //                     <label for=\"others\" className={styles.genderlabel}>Others</label>\n    //                 </div>\n    //                 <div className={styles.mybd}>\n    //                     <input type=\"date\" id=\"mybirthday\"></input>\n    //                     <p className={styles.greywords}>It's my birthday</p>\n    //                 </div>\n    //                 <p className={styles.genderlabel}>Change Password ?</p>\n    //                 <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.updateUserState} className={styles.inputbox} id=\"pass\" placeholder=\"enter new password\"></input>\n    //                 <br /><span className={styles.warning}>{this.state.errors[\"password\"]}</span><br />\n    //                 {/* <input type=\"text\" className={styles.inputbox} id=\"repass\" placeholder=\"re-enter new password to confirm\"></input> */}\n    //             </div>\n    //             <div>\n    //                 <select className={styles.usertype}>\n    //                     <option>Customer</option>\n    //                     <option>TheatreOwner</option>\n    //                 </select>\n    //             </div>\n    //             <div>\n    //                 <button type=\"submit\" className={styles.submitbtn} onClick={this.UserUpdateAPIHandler}>Update</button>\n    //             </div>\n    //             <br /><br />\n    //             <div>\n    //                 <Link to='/userDelete'>\n    //                     <button type=\"submit\" className={styles.submitbtn}>Delete Account</button>\n    //                 </Link>\n    //             </div>\n    //         </div>\n    //     )\n    // }\n}\n\nexport default UpdateProfile;"]},"metadata":{},"sourceType":"module"}