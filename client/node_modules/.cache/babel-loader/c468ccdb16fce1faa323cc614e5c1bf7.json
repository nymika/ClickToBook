{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/TheatreSeats.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './stylesheets/TheatreSeats.css';\nimport ETicket from './ETicket';\n\nclass TheatreSeats extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetSlotInfoAPIHandler = () => {\n      console.log('entered');\n      axios.get(`http://localhost:3000/ticketbooking/${this.props.showTimeId}`).then(response => {\n        console.log(response.data);\n        this.setState({\n          seatInfo: {\n            'A1': response.data.A.availability[0],\n            'A2': response.data.A.availability[1],\n            'A3': response.data.A.availability[2],\n            'A4': response.data.A.availability[3],\n            'A5': response.data.A.availability[4],\n            'A6': response.data.A.availability[5],\n            'B1': response.data.B.availability[0],\n            'B2': response.data.B.availability[1],\n            'B3': response.data.B.availability[2],\n            'B4': response.data.B.availability[3],\n            'B5': response.data.B.availability[4],\n            'B6': response.data.B.availability[5],\n            'B7': response.data.B.availability[6],\n            'B8': response.data.B.availability[7],\n            'B9': response.data.B.availability[8],\n            'B10': response.data.B.availability[9],\n            'B11': response.data.B.availability[10],\n            'B12': response.data.B.availability[11]\n          }\n        }); //Object.keys(objectName).forEach(item => console.log(objectName[item]))\n\n        Object.keys(this.state.seatInfo).forEach(item => {\n          if (!this.state.seatInfo[item]) {\n            this.setState({\n              seatNotAvailable: this.state.seatNotAvailable.concat(item)\n            });\n          } else {\n            this.setState({\n              seatAvailable: this.state.seatAvailable.concat(item),\n              seat: this.state.seat.concat(item)\n            });\n          }\n        }); //             if (!this.state.seatInfo.A1) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('A1')\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('A1'),\n        //                     seat: this.state.seat.concat('A1')                        \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.A2) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('A2'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('A2'),\n        //                     seat: this.state.seat.concat('A2')\n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.A3) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('A3'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('A3'),\n        //                     seat: this.state.seat.concat('A3') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.A4) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('A4'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('A4'),\n        //                     seat: this.state.seat.concat('A4') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.A5) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('A5'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('A5'),\n        //                     seat: this.state.seat.concat('A5') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.A6) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('A6'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('A6'),\n        //                     seat: this.state.seat.concat('A6')\n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B1) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B1'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B1'),\n        //                     seat: this.state.seat.concat('B1') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B2) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B2'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B2'),\n        //                     seat: this.state.seat.concat('B2')\n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B3) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B3'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B3'),\n        //                     seat: this.state.seat.concat('B3') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B4) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B4'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B4'),\n        //                     seat: this.state.seat.concat('B4') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B5) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B5'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B5'),\n        //                     seat: this.state.seat.concat('B5') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B6) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B6'),\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B6'),\n        //                     seat: this.state.seat.concat('B6') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B7) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B7')\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B7'),\n        //                     seat: this.state.seat.concat('B7') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B8) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B8')\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B8'),\n        //                     seat: this.state.seat.concat('B8') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B9) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B9')\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B9'),\n        //                     seat: this.state.seat.concat('B9') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B10) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B10')\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B10'),\n        //                     seat: this.state.seat.concat('B10') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B11) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B11')\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B11'),\n        //                     seat: this.state.seat.concat('B11') \n        //                 })\n        //             }\n        //             if (!this.state.seatInfo.B12) {\n        //                 this.setState({\n        //                     seatNotAvailable: this.state.seatNotAvailable.concat('B12')\n        //                 })\n        //             }\n        //             else {\n        //                 this.setState({\n        //                     seatAvailable: this.state.seatAvailable.concat('B12'),\n        //                     seat: this.state.seat.concat('B12') \n        //                 })\n        //             }\n\n        console.log(this.state.seatInfo);\n      }).catch(e => alert(e));\n    };\n\n    this.state = {\n      seat: [],\n      seatAvailable: [],\n      seatReserved: [],\n      seatSelected: [],\n      seatNotAvailable: [],\n      seatInfo: {\n        'A1': '',\n        'A2': '',\n        'A3': '',\n        'A4': '',\n        'A5': '',\n        'A6': '',\n        'B1': '',\n        'B2': '',\n        'B3': '',\n        'B4': '',\n        'B5': '',\n        'B6': '',\n        'B7': '',\n        'B8': '',\n        'B9': '',\n        'B10': '',\n        'B11': '',\n        'B12': ''\n      },\n      showTimeId: this.props.showTimeId,\n      ticketId: '',\n      ticket: {},\n      showTicket: false\n    };\n  }\n\n  onClickData(seat) {\n    if (this.state.seatReserved.indexOf(seat) > -1) {\n      this.setState({\n        seatAvailable: this.state.seatAvailable.concat(seat),\n        seatReserved: this.state.seatReserved.filter(res => res !== seat) // seatSelected: this.state.seatSelected.filter(res => res != seat)\n\n      });\n    } else {\n      this.setState({\n        seatReserved: this.state.seatReserved.concat(seat),\n        // seatSelected: this.state.seatSelected.concat(seat),\n        seatAvailable: this.state.seatAvailable.filter(res => res !== seat)\n      });\n    }\n  }\n\n  checktrue(row) {\n    if (this.state.seatSelected.indexOf(row) > -1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  handleSubmited() {\n    this.setState({\n      seatSelected: this.state.seatSelected.concat(this.state.seatReserved)\n    }); //console.log(this.state.seatReserved, this.state.seatSelected)\n\n    const input = {\n      _showTime: this.state.showTimeId,\n      seatsInfo: this.state.seatReserved\n    };\n    console.log(input);\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n    axios.post('http://localhost:3000/ticket', input).then(response => {\n      console.log(response.data);\n      this.setState({\n        ticketId: response.data\n      });\n    }).catch(e => alert(e));\n  }\n\n  GetTicketsAPIHandler() {\n    const input = {\n      _id: this.state.ticketId\n    };\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n    axios.put('http://localhost:3000/ticketinfo', input).then(response => {\n      //console.log(response.data)\n      this.setState({\n        ticket: response.data,\n        showTicket: true\n      });\n      console.log(this.state.ticket);\n    }).catch(e => alert(e));\n    window.scrollTo(0, 92500);\n  }\n\n  componentDidMount() {\n    //console.log('selected slot is', this.props.slotId)\n    this.GetSlotInfoAPIHandler();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(DrawGrid, {\n      seat: this.state.seat,\n      available: this.state.seatAvailable,\n      reserved: this.state.seatReserved,\n      selected: this.state.seatSelected,\n      onClickData: this.onClickData.bind(this),\n      checktrue: this.checktrue.bind(this),\n      handleSubmited: this.handleSubmited.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.GetTicketsAPIHandler();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Get Ticket\"), this.state.showTicket ? React.createElement(ETicket, {\n      Title: this.state.ticket.movie.title,\n      Poster: this.state.ticket.movie.poster,\n      Theatre: this.state.ticket.ticket._showTime._theatre.name,\n      dimen: \"2D\" // language={}\n      ,\n      time: this.state.ticket.bookedSlot.startTime,\n      date: this.state.ticket.ticket._showTime.day,\n      numofseats: this.state.seatReserved.length //seats = {this.state.ticket.ticket.seats[0].seatType - this.state.ticket.ticket.seats[0].seatno}\n      ,\n      seats: this.state.seatReserved,\n      ticketprice: this.state.ticket.ticket.price,\n      conveniencefees: \" - nill\",\n      amountpaid: this.state.ticket.ticket.price,\n      bookingid: this.state.ticketId,\n      bookingdatetime: this.state.ticket.ticket.booking,\n      confirmationid: this.state.ticket.ticket.customer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nclass DrawGrid extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"Showing Available Seats Only.\"), React.createElement(\"table\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, this.props.seat.map(row => React.createElement(\"td\", {\n      className: this.props.selected.indexOf(row) > -1 ? 'reserved' : this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available',\n      key: row,\n      onClick: this.props.checktrue(row) ? e => this.onClickSeat(row) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, row, \" \"))))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"*G - GOLD seats\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"*B - Balcony seats\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-success btnmargin\",\n      onClick: () => this.props.handleSubmited(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"Confirm Booking\"));\n  }\n\n  onClickSeat(seat) {\n    this.props.onClickData(seat);\n  }\n\n}\n\nexport default TheatreSeats;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/TheatreSeats.js"],"names":["React","Component","Route","Link","axios","ETicket","TheatreSeats","constructor","props","GetSlotInfoAPIHandler","console","log","get","showTimeId","then","response","data","setState","seatInfo","A","availability","B","Object","keys","state","forEach","item","seatNotAvailable","concat","seatAvailable","seat","catch","e","alert","seatReserved","seatSelected","ticketId","ticket","showTicket","onClickData","indexOf","filter","res","checktrue","row","handleSubmited","input","_showTime","seatsInfo","defaults","headers","common","localStorage","getItem","post","GetTicketsAPIHandler","_id","put","window","scrollTo","componentDidMount","render","bind","movie","title","poster","_theatre","name","bookedSlot","startTime","day","length","price","booking","customer","DrawGrid","map","selected","reserved","onClickSeat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './stylesheets/TheatreSeats.css';\nimport ETicket from './ETicket';\n\nclass TheatreSeats extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            seat: [],\n            seatAvailable: [],\n            seatReserved: [],\n            seatSelected: [],\n            seatNotAvailable : [],\n            seatInfo: {\n                'A1': '',\n                'A2': '',\n                'A3': '',\n                'A4': '',\n                'A5': '',\n                'A6': '',\n                'B1' : '',\n                'B2' : '',\n                'B3' : '',\n                'B4' : '',\n                'B5' : '',\n                'B6' : '',\n                'B7' : '',\n                'B8' : '',\n                'B9' : '',\n                'B10' : '',\n                'B11' : '',\n                'B12' : ''\n            },\n            showTimeId: this.props.showTimeId,\n            ticketId : '',\n            ticket : {},\n            showTicket : false\n        }\n    }\n\n    GetSlotInfoAPIHandler = () => {\n        console.log('entered')\n        axios.get(`http://localhost:3000/ticketbooking/${this.props.showTimeId}`)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    seatInfo : {\n                        'A1': response.data.A.availability[0],\n                        'A2': response.data.A.availability[1],\n                        'A3': response.data.A.availability[2],\n                        'A4': response.data.A.availability[3],\n                        'A5': response.data.A.availability[4],\n                        'A6': response.data.A.availability[5],\n                        'B1' : response.data.B.availability[0],\n                        'B2' : response.data.B.availability[1],\n                        'B3' : response.data.B.availability[2],\n                        'B4' : response.data.B.availability[3],\n                        'B5' : response.data.B.availability[4],\n                        'B6' : response.data.B.availability[5],\n                        'B7' : response.data.B.availability[6],\n                        'B8' : response.data.B.availability[7],\n                        'B9' : response.data.B.availability[8],\n                        'B10' : response.data.B.availability[9],\n                        'B11' : response.data.B.availability[10],\n                        'B12' : response.data.B.availability[11]\n                    }\n                })\n\n                //Object.keys(objectName).forEach(item => console.log(objectName[item]))\n\n                Object.keys(this.state.seatInfo).forEach( item => {\n                    if(! this.state.seatInfo[item]) {\n                        this.setState({\n                            seatNotAvailable : this.state.seatNotAvailable.concat(item)\n                        })\n                    }\n                    else {\n                        this.setState({\n                            seatAvailable : this.state.seatAvailable.concat(item),\n                            seat : this.state.seat.concat(item)\n                        })\n                    }\n                })\n    //             if (!this.state.seatInfo.A1) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('A1')\n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('A1'),\n    //                     seat: this.state.seat.concat('A1')                        \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.A2) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('A2'),\n                                           \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('A2'),\n    //                     seat: this.state.seat.concat('A2')\n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.A3) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('A3'),\n                                         \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('A3'),\n    //                     seat: this.state.seat.concat('A3') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.A4) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('A4'),\n                                          \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('A4'),\n    //                     seat: this.state.seat.concat('A4') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.A5) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('A5'),\n                                          \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('A5'),\n    //                     seat: this.state.seat.concat('A5') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.A6) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('A6'),\n                                           \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('A6'),\n    //                     seat: this.state.seat.concat('A6')\n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B1) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B1'),\n                                          \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B1'),\n    //                     seat: this.state.seat.concat('B1') \n    //                 })\n    //             }\n    \n    //             if (!this.state.seatInfo.B2) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B2'),\n                                           \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B2'),\n    //                     seat: this.state.seat.concat('B2')\n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B3) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B3'),\n                                          \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B3'),\n    //                     seat: this.state.seat.concat('B3') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B4) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B4'),\n                                          \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B4'),\n    //                     seat: this.state.seat.concat('B4') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B5) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B5'),\n                                          \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B5'),\n    //                     seat: this.state.seat.concat('B5') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B6) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B6'),\n                                          \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B6'),\n    //                     seat: this.state.seat.concat('B6') \n    //                 })\n    //             }\n    //             if (!this.state.seatInfo.B7) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B7')\n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B7'),\n    //                     seat: this.state.seat.concat('B7') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B8) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B8')\n                        \n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B8'),\n    //                     seat: this.state.seat.concat('B8') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B9) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B9')\n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B9'),\n    //                     seat: this.state.seat.concat('B9') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B10) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B10')\n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B10'),\n    //                     seat: this.state.seat.concat('B10') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B11) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B11')\n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B11'),\n    //                     seat: this.state.seat.concat('B11') \n    //                 })\n    //             }\n\n    //             if (!this.state.seatInfo.B12) {\n    //                 this.setState({\n    //                     seatNotAvailable: this.state.seatNotAvailable.concat('B12')\n    //                 })\n    //             }\n    //             else {\n    //                 this.setState({\n    //                     seatAvailable: this.state.seatAvailable.concat('B12'),\n    //                     seat: this.state.seat.concat('B12') \n    //                 })\n    //             }\n                 console.log(this.state.seatInfo)\n             }).catch((e) => alert(e))\n     }\n\n    onClickData(seat) {\n        if (this.state.seatReserved.indexOf(seat) > -1) {\n            this.setState({\n                seatAvailable: this.state.seatAvailable.concat(seat),\n                seatReserved: this.state.seatReserved.filter(res => res !== seat),\n                // seatSelected: this.state.seatSelected.filter(res => res != seat)\n            })\n        } else {\n            this.setState({\n                seatReserved: this.state.seatReserved.concat(seat),\n                // seatSelected: this.state.seatSelected.concat(seat),\n                seatAvailable: this.state.seatAvailable.filter(res => res !== seat)\n            })\n        }\n    }\n\n    checktrue(row) {\n        if (this.state.seatSelected.indexOf(row) > -1) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n     handleSubmited() {\n        this.setState({ seatSelected: this.state.seatSelected.concat(this.state.seatReserved) })\n        //console.log(this.state.seatReserved, this.state.seatSelected)\n        const input = {\n            _showTime: this.state.showTimeId,\n            seatsInfo: this.state.seatReserved,\n        }\n        console.log(input)\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\")\n        axios.post('http://localhost:3000/ticket', input)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    ticketId : response.data\n                })\n            }).catch((e) => alert(e))\n    }\n\n    GetTicketsAPIHandler() {\n        const input = {\n            _id : this.state.ticketId\n        }\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\")\n        axios.put('http://localhost:3000/ticketinfo', input)\n            .then(response => {\n                //console.log(response.data)\n                this.setState({\n                    ticket : response.data,\n                    showTicket : true\n                })\n                console.log(this.state.ticket)\n            }).catch((e) => alert(e))\n        window.scrollTo(0, 92500)\n    }\n\n    componentDidMount() {\n        //console.log('selected slot is', this.props.slotId)\n        this.GetSlotInfoAPIHandler();\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"Background\">\n                    <div className=\"Box\">\n                        <DrawGrid\n                            seat={this.state.seat}\n                            available={this.state.seatAvailable}\n                            reserved={this.state.seatReserved}\n                            selected={this.state.seatSelected}\n                            onClickData={this.onClickData.bind(this)}\n                            checktrue={this.checktrue.bind(this)}\n                            handleSubmited={this.handleSubmited.bind(this)}\n                        />\n                    </div>\n\n                    \n                        <button type=\"button\" onClick={() => {\n                            this.GetTicketsAPIHandler();\n                        }}>Get Ticket</button>\n                    \n                    { (this.state.showTicket ) ? \n                    <ETicket Title={this.state.ticket.movie.title}\n                            Poster={this.state.ticket.movie.poster}\n                            Theatre={this.state.ticket.ticket._showTime._theatre.name}\n                            dimen={\"2D\"}\n                            // language={}\n                            time={this.state.ticket.bookedSlot.startTime}\n                            date={this.state.ticket.ticket._showTime.day}\n                            numofseats={this.state.seatReserved.length}\n                            //seats = {this.state.ticket.ticket.seats[0].seatType - this.state.ticket.ticket.seats[0].seatno}\n                            seats={this.state.seatReserved}\n                            ticketprice={this.state.ticket.ticket.price}\n                            conveniencefees={\" - nill\"}\n                            amountpaid={this.state.ticket.ticket.price}\n                            bookingid={this.state.ticketId}\n                            bookingdatetime={this.state.ticket.ticket.booking}\n                            confirmationid={this.state.ticket.ticket.customer} /> : null}\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nclass DrawGrid extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h3>Showing Available Seats Only.</h3>\n                <table className=\"grid\">\n                    <tbody>\n                        <tr>\n                            {this.props.seat.map(row =>\n                                <td\n                                    className={this.props.selected.indexOf(row) > -1 ? 'reserved' : (this.props.reserved.indexOf(row) > -1 ? 'selected' : 'available')}\n                                    key={row} onClick={this.props.checktrue(row) ? e => this.onClickSeat(row) : null} >{row} </td>)}\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>*G - GOLD seats</h3>\n                <h3>*B - Balcony seats</h3>\n                <button type=\"button\" className=\"btn-success btnmargin\" onClick={() => this.props.handleSubmited()}>Confirm Booking</button>\n            </div>\n        )\n    }\n\n    onClickSeat(seat) {\n        this.props.onClickData(seat);\n    }\n}\nexport default TheatreSeats;\n"]},"metadata":{},"sourceType":"module"}