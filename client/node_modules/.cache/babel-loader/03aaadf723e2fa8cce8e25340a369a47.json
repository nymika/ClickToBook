{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/TheatreDetailedPage.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/TheatreDetailedPage.module.css';\nimport SlotDetails from './SlotDetails';\nimport ShowTheatres from \"../Customer/ShowTheatres\";\nimport TheatreSeats from '../Customer/TheatreSeats';\n\nclass TheatreDetailedPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      getSlotInfoBody: {\n        day: \"2020-06-07\"\n      },\n      theatres: []\n    };\n\n    this.ShowTheatresAPIHandler = () => {\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      axios.get('http://localhost:3000/theatres').then(response => {\n        console.log('show theatres done');\n        this.setState({\n          theatres: response.data.active\n        }); //console.log(this.state)\n      }).catch(e => alert(e));\n    };\n\n    this.GetSlotInfoAPIHandler = (slotid, theatreid) => {\n      console.log('get slotInfo done!');\n      console.log(theatreid, slotid, this.state.getSlotInfoBody);\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      axios.post(`http://localhost:3000/theatres/${theatreid}/${slotid}`, this.state.getSlotInfoBody).then(response => {\n        console.log(response.data);\n\n        if (response.data) {\n          this.setState({\n            getSlotInfo: {\n              _id: response.data._id,\n              _movie: response.data._movie,\n              _slot: response.data._slot,\n              _theatre: response.data._theatre,\n              day: response.data.day,\n              seatInfo: {\n                A: {\n                  availability: response.data.seatInfo.A.availability,\n                  price: response.data.seatInfo.A.price\n                },\n                B: {\n                  availability: response.data.seatInfo.B.availability,\n                  price: response.data.seatInfo.B.price\n                }\n              }\n            }\n          });\n          console.log(this.state);\n          this.props.history.push(`/TheatreDetailPage/${this.state.getSlotInfo._theatre}/SlotDetails/${this.state.getSlotInfo._slot}`);\n        }\n      }).catch(e => alert(e));\n    };\n  }\n\n  componentDidMount() {\n    this.ShowTheatresAPIHandler();\n  }\n\n  render() {\n    var selectedTheatreId = this.props.match.params.id;\n    var selectedTheatre = null;\n    this.state.theatres.filter(theatre => {\n      if (theatre._id === selectedTheatreId) {\n        selectedTheatre = theatre;\n      }\n    }); //console.log(selectedTheatre)\n\n    if (selectedTheatre) {\n      return React.createElement(\"div\", {\n        className: styles.movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, selectedTheatre.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" Location : \", selectedTheatre.location.street, \", \", selectedTheatre.location.city, \", \", selectedTheatre.location.state, \", \", selectedTheatre.location.country), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" Lease Info : \", selectedTheatre.leaseInfo.startDate, \" - \", selectedTheatre.leaseInfo.lastDate), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Gold seats : \", selectedTheatre.seatInfo.A, \", Balcony seats : \", selectedTheatre.seatInfo.B)), React.createElement(\"input\", {\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.slotList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, selectedTheatre.slotInfo.map((slot, idx) => {\n        return React.createElement(\"div\", {\n          key: idx,\n          className: styles.slotListElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => this.GetSlotInfoAPIHandler(slot._id, selectedTheatreId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }));\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/TheatreDetailPage/:TheatreId/SlotDetails/:SlotId\",\n        exact: true,\n        component: SlotDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    } else return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n}\n\nexport default TheatreDetailedPage;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/TheatreDetailedPage.js"],"names":["React","Component","Route","Link","Switch","axios","styles","SlotDetails","ShowTheatres","TheatreSeats","TheatreDetailedPage","state","getSlotInfoBody","day","theatres","ShowTheatresAPIHandler","defaults","headers","common","localStorage","getItem","get","then","response","console","log","setState","data","active","catch","e","alert","GetSlotInfoAPIHandler","slotid","theatreid","post","getSlotInfo","_id","_movie","_slot","_theatre","seatInfo","A","availability","price","B","props","history","push","componentDidMount","render","selectedTheatreId","match","params","id","selectedTheatre","filter","theatre","movie","name","location","street","city","country","leaseInfo","startDate","lastDate","slotList","slotInfo","map","slot","idx","slotListElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAqBC,MAArB,QAAmC,kBAAnC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,MAAMC,mBAAN,SAAkCT,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCU,KADwC,GAChC;AACJC,MAAAA,eAAe,EAAE;AACbC,QAAAA,GAAG,EAAE;AADQ,OADb;AAIJC,MAAAA,QAAQ,EAAE;AAJN,KADgC;;AAAA,SAQxCC,sBARwC,GAQf,MAAM;AAC3BV,MAAAA,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjD;AACAf,MAAAA,KAAK,CAACgB,GAAN,CAAU,gCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,aAAKC,QAAL,CAAc;AACVZ,UAAAA,QAAQ,EAAES,QAAQ,CAACI,IAAT,CAAcC;AADd,SAAd,EAFc,CAKd;AACH,OAPL,EAOOC,KAPP,CAOcC,CAAD,IAAOC,KAAK,CAACD,CAAD,CAPzB;AAQH,KAlBuC;;AAAA,SAwBxCE,qBAxBwC,GAwBhB,CAACC,MAAD,EAASC,SAAT,KAAuB;AAC3CV,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ,EAAuBD,MAAvB,EAA+B,KAAKtB,KAAL,CAAWC,eAA1C;AACAP,MAAAA,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjD;AACAf,MAAAA,KAAK,CAAC8B,IAAN,CAAY,kCAAiCD,SAAU,IAAGD,MAAO,EAAjE,EAAoE,KAAKtB,KAAL,CAAWC,eAA/E,EACKU,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACI,IAArB;;AACA,YAAGJ,QAAQ,CAACI,IAAZ,EAAiB;AACjB,eAAKD,QAAL,CAAc;AACVU,YAAAA,WAAW,EAAG;AACVC,cAAAA,GAAG,EAAGd,QAAQ,CAACI,IAAT,CAAcU,GADV;AAEVC,cAAAA,MAAM,EAAGf,QAAQ,CAACI,IAAT,CAAcW,MAFb;AAGVC,cAAAA,KAAK,EAAGhB,QAAQ,CAACI,IAAT,CAAcY,KAHZ;AAIVC,cAAAA,QAAQ,EAAGjB,QAAQ,CAACI,IAAT,CAAca,QAJf;AAKV3B,cAAAA,GAAG,EAAGU,QAAQ,CAACI,IAAT,CAAcd,GALV;AAMV4B,cAAAA,QAAQ,EAAG;AACPC,gBAAAA,CAAC,EAAG;AACAC,kBAAAA,YAAY,EAAGpB,QAAQ,CAACI,IAAT,CAAcc,QAAd,CAAuBC,CAAvB,CAAyBC,YADxC;AAEAC,kBAAAA,KAAK,EAAGrB,QAAQ,CAACI,IAAT,CAAcc,QAAd,CAAuBC,CAAvB,CAAyBE;AAFjC,iBADG;AAKPC,gBAAAA,CAAC,EAAG;AACAF,kBAAAA,YAAY,EAAGpB,QAAQ,CAACI,IAAT,CAAcc,QAAd,CAAuBI,CAAvB,CAAyBF,YADxC;AAEAC,kBAAAA,KAAK,EAAGrB,QAAQ,CAACI,IAAT,CAAcc,QAAd,CAAuBI,CAAvB,CAAyBD;AAFjC;AALG;AAND;AADJ,WAAd;AAoBApB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACA,eAAKmC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,sBAAqB,KAAKrC,KAAL,CAAWyB,WAAX,CAAuBI,QAAS,gBAAe,KAAK7B,KAAL,CAAWyB,WAAX,CAAuBG,KAAM,EAA1H;AACH;AAEA,OA5BL,EA4BOV,KA5BP,CA4BcC,CAAD,IAAOC,KAAK,CAACD,CAAD,CA5BzB;AA6BH,KAzDuC;AAAA;;AAoBxCmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKlC,sBAAL;AACH;;AAqCDmC,EAAAA,MAAM,GAAG;AACL,QAAIC,iBAAiB,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACA,QAAIC,eAAe,GAAG,IAAtB;AACA,SAAK5C,KAAL,CAAWG,QAAX,CAAoB0C,MAApB,CAA2BC,OAAO,IAAI;AAClC,UAAIA,OAAO,CAACpB,GAAR,KAAgBc,iBAApB,EAAuC;AACnCI,QAAAA,eAAe,GAAGE,OAAlB;AACH;AACJ,KAJD,EAHK,CAQL;;AACA,QAAIF,eAAJ,EAAqB;AACjB,aACI;AAAK,QAAA,SAAS,EAAEjD,MAAM,CAACoD,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMH,eAAe,CAACI,IAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBJ,eAAe,CAACK,QAAhB,CAAyBC,MAA3C,QAAqDN,eAAe,CAACK,QAAhB,CAAyBE,IAA9E,QAAsFP,eAAe,CAACK,QAAhB,CAAyBjD,KAA/G,QAAwH4C,eAAe,CAACK,QAAhB,CAAyBG,OAAjJ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoBR,eAAe,CAACS,SAAhB,CAA0BC,SAA9C,SAA4DV,eAAe,CAACS,SAAhB,CAA0BE,QAAtF,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmBX,eAAe,CAACd,QAAhB,CAAyBC,CAA5C,wBAAiEa,eAAe,CAACd,QAAhB,CAAyBI,CAA1F,CAJJ,CAFJ,EASI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAUI;AAAK,QAAA,SAAS,EAAEvC,MAAM,CAAC6D,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQZ,eAAe,CAACa,QAAhB,CAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxC,eACI;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAe,UAAA,SAAS,EAAEjE,MAAM,CAACkE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKxC,qBAAL,CAA2BsC,IAAI,CAACjC,GAAhC,EAAqCc,iBAArC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,CADJ;AAUH,OAXD,CAFR,CAVJ,EA0BI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,mDAAZ;AAAgE,QAAA,KAAK,MAArE;AAAsE,QAAA,SAAS,EAAE5C,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CA1BJ,CADJ;AAkCH,KAnCD,MAqCI,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGP;;AA5GuC;;AA+G5C,eAAeG,mBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link,Switch } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport styles from './stylesheets/TheatreDetailedPage.module.css';\nimport SlotDetails from './SlotDetails'\nimport ShowTheatres from \"../Customer/ShowTheatres\";\nimport TheatreSeats from '../Customer/TheatreSeats';\n\nclass TheatreDetailedPage extends Component {\n    state = {\n        getSlotInfoBody: {\n            day: \"2020-06-07\"\n        },\n        theatres: [],\n    }\n\n    ShowTheatresAPIHandler = () => {\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.get('http://localhost:3000/theatres')\n            .then(response => {\n                console.log('show theatres done')\n                this.setState({\n                    theatres: response.data.active,\n                });\n                //console.log(this.state)\n            }).catch((e) => alert(e));\n    }\n\n    componentDidMount() {\n        this.ShowTheatresAPIHandler();\n    }\n\n    GetSlotInfoAPIHandler = (slotid, theatreid) => {\n        console.log('get slotInfo done!')\n        console.log(theatreid, slotid, this.state.getSlotInfoBody)\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.post(`http://localhost:3000/theatres/${theatreid}/${slotid}`, this.state.getSlotInfoBody)\n            .then(response => {\n                console.log(response.data)\n                if(response.data){\n                this.setState({\n                    getSlotInfo : {\n                        _id : response.data._id,\n                        _movie : response.data._movie,\n                        _slot : response.data._slot,\n                        _theatre : response.data._theatre,\n                        day : response.data.day,\n                        seatInfo : {\n                            A : {\n                                availability : response.data.seatInfo.A.availability,\n                                price : response.data.seatInfo.A.price\n                            },\n                            B : {\n                                availability : response.data.seatInfo.B.availability,\n                                price : response.data.seatInfo.B.price\n                            }\n                        }\n                    }\n                \n                })\n                console.log(this.state)\n                this.props.history.push(`/TheatreDetailPage/${this.state.getSlotInfo._theatre}/SlotDetails/${this.state.getSlotInfo._slot}`);\n            }\n                \n            }).catch((e) => alert(e));\n    }\n\n    render() {\n        var selectedTheatreId = this.props.match.params.id;\n        var selectedTheatre = null;\n        this.state.theatres.filter(theatre => {\n            if (theatre._id === selectedTheatreId) {\n                selectedTheatre = theatre\n            }\n        });\n        //console.log(selectedTheatre)\n        if (selectedTheatre) {\n            return (\n                <div className={styles.movie}>\n                    \n                    <div >\n                        <h1 >{selectedTheatre.name}</h1>\n                        <h3 > Location : {selectedTheatre.location.street}, {selectedTheatre.location.city}, {selectedTheatre.location.state}, {selectedTheatre.location.country}</h3>\n                        <h3 > Lease Info : {selectedTheatre.leaseInfo.startDate} - {selectedTheatre.leaseInfo.lastDate}</h3>\n                        <h3 >Gold seats : {selectedTheatre.seatInfo.A}, Balcony seats : {selectedTheatre.seatInfo.B}</h3>\n                    </div>\n\n                    <input type=\"date\"></input>\n                    <div className={styles.slotList}>\n                        {\n                            selectedTheatre.slotInfo.map((slot, idx) => {\n                                return (\n                                    <div key={idx} className={styles.slotListElement}>\n                                        {/* <Link to={`/TheatreDetailPage/${selectedTheatre._id}/SlotDetails/${slot._id}`}>\n                                            <h3>{`Show - ${idx + 1}`}</h3>\n                                            <p>{slot.startTime} - {slot.endTime}</p>\n                                        </Link> */}\n                                        <button onClick={() => this.GetSlotInfoAPIHandler(slot._id, selectedTheatreId)}></button>\n\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                    <Switch>\n                    {/* <Route path={this.props.match.url + \"/SlotDetails/:SlotId\"} component={SlotDetails} /> */}\n                    <Route path=\"/TheatreDetailPage/:TheatreId/SlotDetails/:SlotId\" exact component={SlotDetails} />\n                    \n                    </Switch>\n                </div>\n            )\n        }\n        else\n            return (\n                <h1>Loading</h1>\n            )\n    }\n}\n\nexport default TheatreDetailedPage"]},"metadata":{},"sourceType":"module"}