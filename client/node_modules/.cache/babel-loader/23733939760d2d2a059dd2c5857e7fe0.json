{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/MovieDetailPage.js\";\nimport React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/MovieDetailPage.module.css';\nimport MovieDetailReviewBox from \"./MovieDetailReviewBox\";\nimport ShowTheatres from \"./ShowTheatres\";\nimport tick from './images/tick.png';\n\nclass MovieDetailPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedMovie: {},\n      yourRating: '',\n      yourReview: '',\n      currentUser: {},\n      BookTickets: false,\n      showSummary: true,\n      showReviews: false\n    };\n\n    this.safelyParseJSON = json => {\n      var parsed;\n\n      try {\n        parsed = JSON.parse(json);\n      } catch (e) {// Oh well, but whatever...\n      }\n\n      return parsed; // Could be undefined!\n    };\n\n    this.GetMovieDetailAPIHandler = (movieId, user) => {\n      var body = {\n        _user: ''\n      };\n\n      if (user) {\n        body = {\n          _user: user._id\n        };\n      } //console.log(body)\n\n\n      axios.put(`http://localhost:3000/movie/${movieId}`, body).then(response => {\n        console.log(response.data);\n        this.setState({\n          selectedMovie: response.data.movie,\n          yourRating: response.data.userRating.rate\n        });\n        console.log(this.state);\n      }).catch(e => alert(e));\n    };\n\n    this.updateUserRatingState = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.UserUpdateAPIHandler = e => {\n      const inputBody = {\n        _id: this.state.currentUser._id,\n        rate: this.state.yourRating,\n        movieId: this.props.match.params.id\n      }; //console.log(inputBody)\n\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      axios.put(`http://localhost:3000/addrating/${this.props.match.params.id}`, inputBody).then(response => {\n        console.log(response.data);\n        this.setState({\n          yourReview: ''\n        });\n      }).catch(e => alert(e));\n    };\n  }\n\n  AddCommentAPIHandler() {\n    const body = {\n      comment: this.state.yourReview\n    };\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n    axios.put(`http://localhost:3000/comment/${this.props.match.params.id}`, body).then(response => {\n      console.log(response);\n    }).catch(e => alert(e));\n  }\n\n  BookTickets() {\n    this.setState({\n      BookTickets: true\n    });\n    window.scrollTo(0, 500);\n  }\n\n  ShowReviews() {\n    this.setState({\n      showReviews: true,\n      showSummary: false\n    });\n  }\n\n  ShowSummary() {\n    this.setState({\n      showSummary: true,\n      showReviews: false\n    });\n  }\n\n  componentDidMount() {\n    var selectedMovieId = this.props.match.params.id;\n    const currentUserStorage = localStorage.getItem(\"currentUser\");\n    const currentUser = this.safelyParseJSON(currentUserStorage);\n    this.setState({\n      currentUser: currentUser\n    }); //console.log(selectedMovieId, currentUser)\n\n    this.GetMovieDetailAPIHandler(selectedMovieId, currentUser);\n  }\n\n  render() {\n    // var selectedMovieId = this.props.match.params.id;\n    // var selectedMovie = null;\n    // this.state.movies.filter(movie => {\n    //     return (\n    //         (movie._id === selectedMovieId) ?\n    //             selectedMovie = movie : null\n    //     )\n    // }\n    // );\n    //console.log(selectedMovie);\n    //console.log('Movie Detail Page Opened!')\n    if (this.state.selectedMovie) {\n      return React.createElement(\"div\", {\n        className: styles.separateMoviePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.MovieDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.Movieposterbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.selectedMovie.poster,\n        alt: \"my movie poster\",\n        className: styles.Movieposter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.Movieinfobox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: styles.Movietitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.selectedMovie.title), React.createElement(\"h3\", {\n        className: styles.MovieGenre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.state.selectedMovie.genres), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"U , \", this.state.selectedMovie.language, \" , 2D\"), React.createElement(\"div\", {\n        className: styles.Movieratingbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.MovieRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.selectedMovie.rating), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"User's Rating\")), React.createElement(\"div\", {\n        className: styles.MovieRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.selectedMovie.rating), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Critic's Rating\")), this.state.currentUser ? React.createElement(\"div\", {\n        className: styles.MovieRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: styles.yourrating,\n        type: \"text\",\n        typeholder: \"out of 5\",\n        value: this.state.yourRating,\n        onChange: this.updateUserRatingState,\n        name: \"yourRating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.UserUpdateAPIHandler(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: styles.tick,\n        src: tick,\n        alt: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"You rate it\")) : null), React.createElement(\"div\", {\n        className: styles.Summaryreviewsheading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: styles.Summaryreviews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: styles.SummaryLink,\n        to: this.props.match.url,\n        onClick: () => this.ShowSummary(),\n        exact: true,\n        activeStyle: {\n          \"borderBottom\": \"2px solid white\",\n          \"color\": \"white\",\n          \"backgroundColor\": \"#282c34\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: styles.summaryreviewslist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Summary\")), React.createElement(\"button\", {\n        onClick: () => this.BookTickets(),\n        className: styles.Moviebookticket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"BOOK TICKETS\"), React.createElement(NavLink, {\n        className: styles.SummaryLink,\n        onClick: () => this.ShowReviews(),\n        to: this.props.match.url,\n        activeStyle: {\n          \"borderBottom\": \"2px solid white\",\n          \"color\": \"white\",\n          \"backgroundColor\": \"#282c34\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: styles.summaryreviewslist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Your Reviews\")))), React.createElement(\"div\", {\n        className: styles.Moviesummarybox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, this.state.showSummary ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"Movie-Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, this.state.selectedMovie.synopsis), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Date of Release : \", this.state.selectedMovie.releaseDate, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Duration : \", this.state.selectedMovie.runtime, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Starring : \", this.state.selectedMovie.actors), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Directed : \", this.state.selectedMovie.director)) : null, this.state.showReviews ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.state.selectedMovie.comments.map(comment => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: styles.SingleReviewBox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: styles.UserReview,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, comment.body))));\n      }), this.state.currentUser ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Review\",\n        className: styles.inputReview,\n        value: this.state.yourReview,\n        onChange: this.updateUserRatingState,\n        name: \"yourReview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.AddCommentAPIHandler(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: styles.tick,\n        src: tick,\n        alt: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }))) : null) : null))), this.state.BookTickets ? React.createElement(ShowTheatres, {\n        movieId: this.state.selectedMovie._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }) : null);\n    } else return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n}\n\nexport default MovieDetailPage;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/MovieDetailPage.js"],"names":["React","Component","Route","NavLink","axios","styles","MovieDetailReviewBox","ShowTheatres","tick","MovieDetailPage","state","selectedMovie","yourRating","yourReview","currentUser","BookTickets","showSummary","showReviews","safelyParseJSON","json","parsed","JSON","parse","e","GetMovieDetailAPIHandler","movieId","user","body","_user","_id","put","then","response","console","log","data","setState","movie","userRating","rate","catch","alert","updateUserRatingState","event","target","name","value","UserUpdateAPIHandler","inputBody","props","match","params","id","defaults","headers","common","localStorage","getItem","AddCommentAPIHandler","comment","window","scrollTo","ShowReviews","ShowSummary","componentDidMount","selectedMovieId","currentUserStorage","render","separateMoviePage","MovieDetail","Movieposterbox","poster","Movieposter","Movieinfobox","Movietitle","title","MovieGenre","genres","language","Movieratingbox","MovieRating","rating","yourrating","Summaryreviewsheading","Summaryreviews","SummaryLink","url","summaryreviewslist","Moviebookticket","Moviesummarybox","synopsis","releaseDate","runtime","actors","director","comments","map","SingleReviewBox","UserReview","inputReview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport styles from './stylesheets/MovieDetailPage.module.css';\nimport MovieDetailReviewBox from \"./MovieDetailReviewBox\";\nimport ShowTheatres from \"./ShowTheatres\";\nimport tick from './images/tick.png';\n\nclass MovieDetailPage extends Component {\n\n    state = {\n        selectedMovie: {},\n        yourRating: '',\n        yourReview : '',\n        currentUser: {},\n        BookTickets: false,\n        showSummary: true,\n        showReviews: false,\n    }\n\n    safelyParseJSON = (json) => {\n        var parsed\n        try {\n            parsed = JSON.parse(json)\n        } catch (e) {\n            // Oh well, but whatever...\n        }\n        return parsed // Could be undefined!\n    }\n\n    GetMovieDetailAPIHandler = (movieId, user) => {\n        var body = {\n            _user: ''\n        }\n        if (user) {\n            body = {\n                _user: user._id\n            }\n        }\n        //console.log(body)\n\n        axios.put(`http://localhost:3000/movie/${movieId}`, body)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    selectedMovie: response.data.movie,\n                    yourRating: response.data.userRating.rate\n                });\n                console.log(this.state)\n            }).catch((e) => alert(e));\n    }\n\n    updateUserRatingState = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    UserUpdateAPIHandler = (e) => {\n        const inputBody = {\n            _id: this.state.currentUser._id,\n            rate: this.state.yourRating,\n            movieId: this.props.match.params.id\n        }\n        //console.log(inputBody)\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.put(`http://localhost:3000/addrating/${this.props.match.params.id}`, inputBody)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    yourReview : ''\n                })\n            }).catch((e) => alert(e))\n\n    }\n\n    AddCommentAPIHandler() {\n        const body = {\n            comment : this.state.yourReview\n        }\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.put(`http://localhost:3000/comment/${this.props.match.params.id}`, body)\n            .then(response => {\n                console.log(response)\n            }).catch((e) => alert(e))\n    }\n\n    BookTickets() {\n        this.setState({\n            BookTickets: true\n        })\n        window.scrollTo(0, 500)\n    }\n\n    ShowReviews() {\n        this.setState({\n            showReviews: true,\n            showSummary: false\n        })\n    }\n\n    ShowSummary() {\n        this.setState({\n            showSummary: true,\n            showReviews: false\n        })\n    }\n\n\n    componentDidMount() {\n        var selectedMovieId = this.props.match.params.id;\n        const currentUserStorage = localStorage.getItem(\"currentUser\");\n        const currentUser = this.safelyParseJSON(currentUserStorage);\n        this.setState({\n            currentUser: currentUser\n        })\n        //console.log(selectedMovieId, currentUser)\n        this.GetMovieDetailAPIHandler(selectedMovieId, currentUser)\n    }\n\n    render() {\n        // var selectedMovieId = this.props.match.params.id;\n        // var selectedMovie = null;\n        // this.state.movies.filter(movie => {\n        //     return (\n        //         (movie._id === selectedMovieId) ?\n        //             selectedMovie = movie : null\n        //     )\n        // }\n        // );\n        //console.log(selectedMovie);\n        //console.log('Movie Detail Page Opened!')\n        if (this.state.selectedMovie) {\n            return (\n                <div className={styles.separateMoviePage}>\n                    <div className={styles.MovieDetail}>\n\n                        <div className={styles.Movieposterbox}>\n                            <img src={this.state.selectedMovie.poster} alt=\"my movie poster\" className={styles.Movieposter} />\n                        </div>\n\n                        <div className={styles.Movieinfobox}>\n                            <h1 className={styles.Movietitle}>{this.state.selectedMovie.title}</h1>\n                            <h3 className={styles.MovieGenre}>{this.state.selectedMovie.genres}</h3>\n                            <h4>U , {this.state.selectedMovie.language} , 2D</h4>\n                            <div className={styles.Movieratingbox}>\n                                <div className={styles.MovieRating}>\n                                    <p>{this.state.selectedMovie.rating}</p>\n                                    <p>User's Rating</p>\n                                </div>\n                                <div className={styles.MovieRating}>\n                                    <p>{this.state.selectedMovie.rating}</p>\n                                    <p>Critic's Rating</p>\n                                </div>\n                                {(this.state.currentUser) ?\n                                    <div className={styles.MovieRating}>\n                                        <input className={styles.yourrating} type=\"text\" typeholder=\"out of 5\"\n                                            value={this.state.yourRating} onChange={this.updateUserRatingState} name='yourRating' />\n                                        <button type=\"submit\" onClick={() => this.UserUpdateAPIHandler()}><img className={styles.tick} src={tick} alt=\"submit\" /></button>\n                                        <p>You rate it</p>\n                                    </div> : null}\n                            </div>\n                            <div className={styles.Summaryreviewsheading}>\n                                <ul className={styles.Summaryreviews}>\n                                    <NavLink className={styles.SummaryLink} to={this.props.match.url} onClick={() => this.ShowSummary()} exact\n                                        activeStyle={{\n                                            \"borderBottom\": \"2px solid white\",\n                                            \"color\": \"white\",\n                                            \"backgroundColor\": \"#282c34\"\n                                        }}><li className={styles.summaryreviewslist}>Summary</li></NavLink>\n                                    <button onClick={() => this.BookTickets()} className={styles.Moviebookticket}>BOOK TICKETS</button>\n\n                                    <NavLink className={styles.SummaryLink} onClick={() => this.ShowReviews()}\n                                        to={this.props.match.url}\n                                        activeStyle={{\n                                            \"borderBottom\": \"2px solid white\",\n                                            \"color\": \"white\",\n                                            \"backgroundColor\": \"#282c34\"\n                                        }}><li className={styles.summaryreviewslist}>Your Reviews</li></NavLink>\n                                </ul>\n                            </div>\n\n                            <div className={styles.Moviesummarybox}>\n                                {(this.state.showSummary) ?\n                                    <div>\n                                        <p className=\"Movie-Description\">{this.state.selectedMovie.synopsis}</p>\n                                        <p>Date of Release : {this.state.selectedMovie.releaseDate} </p>\n                                        <p>Duration : {this.state.selectedMovie.runtime} </p>\n                                        <p>Starring : {this.state.selectedMovie.actors}</p>\n                                        <p>Directed : {this.state.selectedMovie.director}</p>\n                                    </div> : null}\n\n                                {(this.state.showReviews) ?\n                                    <div>\n                                        {this.state.selectedMovie.comments.map((comment) => {\n                                            return (\n\n                                                <div>\n                                                    <div className={styles.SingleReviewBox}>\n                                                        {/* <div className={styles.UserNameBox}>\n                                                            <h4 className={styles.UserName}>{comment.postedBy.name.firstName}</h4>\n                                                        </div> */}\n                                                        <div>\n                                                            <p className={styles.UserReview}>{comment.body}</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        })}\n                                        {(this.state.currentUser) ? <div>\n                                            <input type=\"text\" placeholder='Enter Your Review' className={styles.inputReview} \n                                            value={this.state.yourReview} onChange={this.updateUserRatingState} name='yourReview'/>\n                                            <button type=\"submit\" onClick={() => this.AddCommentAPIHandler()}><img className={styles.tick} src={tick} alt=\"submit\" /></button>\n                                        </div> : null}\n                                    </div> : null\n                                }\n\n                            </div>\n                        </div>\n                    </div>\n                    {(this.state.BookTickets) ?\n                        <ShowTheatres movieId={this.state.selectedMovie._id} /> : null}\n\n                </div>\n            )\n        }\n        else\n            return (\n                <h1>Loading</h1>\n            )\n    }\n}\n\nexport default MovieDetailPage"]},"metadata":{},"sourceType":"module"}