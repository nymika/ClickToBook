{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport styles from './stylesheets/MyProfile.module.css';\n\nclass UpdateProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.safelyParseJSON = json => {\n      var parsed;\n\n      try {\n        parsed = JSON.parse(json);\n      } catch (e) {// Oh well, but whatever...\n      }\n\n      return parsed; // Could be undefined!\n    };\n\n    this.updateUserState = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.UserUpdateAPIHandler = e => {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        // console.log('validation successful!');\n        // console.log(this.state);\n        const user = {\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          mobile: this.state.mobile,\n          email: this.state.email,\n          password: this.state.password\n        };\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.put('http://localhost:3001/users/me', user).then(response => {\n          console.log('updated!');\n          console.log(response.data);\n          this.setState({\n            // firstname: response.data.firstname,\n            // lastname: currentUser.lastname,\n            email: response.data.email // mobile: currentUser.mobile,\n            // password: currentUser.userType,\n            // repassword: '',\n            // errors: {}\n\n          });\n          localStorage.setItem(\"currentUser\", JSON.stringify(response.data.user));\n        }).catch(e => alert(e));\n      } else {\n        alert(\"Form has errors.\");\n      }\n    };\n\n    const currentUserStorage = localStorage.getItem(\"currentUser\");\n    const token = localStorage.getItem(\"token\");\n    this.safelyParseJSON = this.safelyParseJSON.bind(this);\n    const currentUser = this.safelyParseJSON(currentUserStorage);\n    this.state = {\n      firstname: currentUser.firstname,\n      lastname: currentUser.lastname,\n      email: currentUser.email,\n      mobile: currentUser.mobile,\n      password: currentUser.userType,\n      repassword: '',\n      errors: {}\n    };\n    this.updateUserState = this.updateUserState.bind(this);\n    this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleValidation() {\n    let errors = {};\n    let formIsValid = true; //Password\n\n    let password = this.state.password;\n    let repass = this.state.repassword;\n\n    if (password.length === 0) {\n      formIsValid = false;\n      errors[\"password\"] = \"* Cannot be empty\";\n    } else if (password.length < 7) {\n      formIsValid = false;\n      errors[\"password\"] = \"* Password should contain 7 characters\";\n    } // if(password!==repass)\n    // {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Passwords don't match.\";\n    // }\n    //Email\n\n\n    let email = this.state.email;\n\n    if (email.length === 0) {\n      formIsValid = false;\n      errors[\"email\"] = \"* Cannot be empty\";\n    } else if (typeof email !== \"undefined\") {\n      let lastAtPos = email.lastIndexOf('@');\n      let lastDotPos = email.lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && email.length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"* Email is not valid\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  // componentDidMount() {\n  //     localStorage.getItem(\"token\");\n  //     localStorage.getItem(\"currentUser\");\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.profileBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.myName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstname\",\n      value: this.state.firstname,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"myname\",\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastname\",\n      value: this.state.lastname,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"mylastname\",\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.mymobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"mobile\",\n      value: this.state.mobile,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"mobile\",\n      placeholder: \"Mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"email\",\n      placeholder: \"xyz@gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: styles.warning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.errors[\"email\"])), React.createElement(\"div\", {\n      className: styles.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.mygender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.greywords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Gender ?\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"male\",\n      value: \"male\",\n      checked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"male\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Male\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"female\",\n      value: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"female\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Female\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"others\",\n      value: \"others\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"others\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Others\")), React.createElement(\"div\", {\n      className: styles.mybd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      id: \"mybirthday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: styles.greywords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"It's my birthday\")), React.createElement(\"p\", {\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Change Password ?\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"pass\",\n      placeholder: \"enter new password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: styles.warning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.errors[\"password\"]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: styles.inputbox,\n      id: \"repass\",\n      placeholder: \"re-enter new password to confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: styles.submitbtn,\n      onClick: this.UserUpdateAPIHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Update\"));\n  }\n\n}\n\nexport default UpdateProfile;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js"],"names":["React","Component","axios","styles","UpdateProfile","constructor","props","safelyParseJSON","json","parsed","JSON","parse","e","updateUserState","event","setState","target","name","value","UserUpdateAPIHandler","preventDefault","handleValidation","user","firstname","state","lastname","mobile","email","password","defaults","headers","common","localStorage","getItem","put","then","response","console","log","data","setItem","stringify","catch","alert","currentUserStorage","token","bind","currentUser","userType","repassword","errors","formIsValid","repass","length","lastAtPos","lastIndexOf","lastDotPos","indexOf","render","profileBox","myName","inputbox","mymobile","warning","mygender","greywords","genderlabel","mybd","submitbtn"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport axios from 'axios';\n\nimport styles from './stylesheets/MyProfile.module.css'\n\nclass UpdateProfile extends Component {\n    constructor(props) {\n        super(props);\n        const currentUserStorage = localStorage.getItem(\"currentUser\");\n        const token = localStorage.getItem(\"token\")\n        this.safelyParseJSON = this.safelyParseJSON.bind(this)\n        const currentUser = this.safelyParseJSON(currentUserStorage)\n        this.state = {\n            firstname: currentUser.firstname,\n            lastname: currentUser.lastname,\n            email: currentUser.email,\n            mobile: currentUser.mobile,\n            password: currentUser.userType,\n            repassword: '',\n            errors: {}\n        }\n        this.updateUserState = this.updateUserState.bind(this);\n        this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n        this.handleValidation = this.handleValidation.bind(this);\n    }\n\n    safelyParseJSON = (json) => {\n        var parsed\n        try {\n            parsed = JSON.parse(json)\n        } catch (e) {\n            // Oh well, but whatever...\n        }\n        return parsed // Could be undefined!\n    }\n\n    updateUserState = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleValidation() {\n        let errors = {};\n        let formIsValid = true;\n        \n        //Password\n        let password = this.state.password;\n        let repass = this.state.repassword;\n        if (password.length === 0) {\n            formIsValid = false;\n            errors[\"password\"] = \"* Cannot be empty\";\n        }\n        else if (password.length < 7) {\n            formIsValid = false;\n            errors[\"password\"] = \"* Password should contain 7 characters\";\n        }\n        // if(password!==repass)\n        // {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Passwords don't match.\";\n        // }\n\n        //Email\n        let email = this.state.email;\n        if (email.length === 0) {\n            formIsValid = false;\n            errors[\"email\"] = \"* Cannot be empty\";\n        }\n        else if(typeof email !== \"undefined\"){\n            let lastAtPos = email.lastIndexOf('@');\n            let lastDotPos = email.lastIndexOf('.');\n      \n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\n              formIsValid = false;\n              errors[\"email\"] = \"* Email is not valid\";\n            }\n          }\n\n        this.setState({ errors: errors });\n        return formIsValid;\n    }\n\n    UserUpdateAPIHandler = (e) =>{\n        e.preventDefault();\n        if (this.handleValidation()) {\n            // console.log('validation successful!');\n            // console.log(this.state);\n            const user = {\n                firstname: this.state.firstname,\n                lastname: this.state.lastname,\n                mobile: this.state.mobile,\n                email: this.state.email,\n                password: this.state.password,\n            };\n            axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\")\n            axios.put('http://localhost:3001/users/me', user)\n                .then(response => {\n                    console.log('updated!')\n                    console.log(response.data)\n                    this.setState ({\n                        // firstname: response.data.firstname,\n                        // lastname: currentUser.lastname,\n                        email: response.data.email,\n                        // mobile: currentUser.mobile,\n                        // password: currentUser.userType,\n                        // repassword: '',\n                        // errors: {}\n                    })\n                    localStorage.setItem(\"currentUser\",JSON.stringify(response.data.user))\n                }).catch((e) => alert(e));\n        }\n        else {\n            alert(\"Form has errors.\")\n        }\n    }\n\n    // componentDidMount() {\n    //     localStorage.getItem(\"token\");\n    //     localStorage.getItem(\"currentUser\");\n    // }\n\n    render() {\n        return (\n                <div className = {styles.profileBox}>\n                   <div className = {styles.myName}>\n                       <input type=\"text\" name=\"firstname\" value={this.state.firstname} onChange={this.updateUserState} className={styles.inputbox} id=\"myname\" placeholder=\"First Name\"></input>\n                       <input type=\"text\" name=\"lastname\" value={this.state.lastname} onChange={this.updateUserState} className={styles.inputbox} id=\"mylastname\" placeholder=\"Last Name\"></input>\n                   </div>\n                   <div className = {styles.mymobile}>\n                       <input type=\"text\" name=\"mobile\" value={this.state.mobile} onChange={this.updateUserState} className={styles.inputbox} id=\"mobile\" placeholder=\"Mobile\"></input>\n                   </div>\n                   <div className = {styles.email}>\n                       <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.updateUserState} className={styles.inputbox} id=\"email\" placeholder=\"xyz@gmail.com\"></input>\n                       <br/><span className={styles.warning}>{this.state.errors[\"email\"]}</span>\n                   </div>\n                   <div className = {styles.password}>\n                   <div className = {styles.mygender}>\n                       <p className={styles.greywords}>Gender ?</p>\n                       <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" checked></input>\n                       <label for=\"male\" className={styles.genderlabel}>Male</label>\n                       <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\"></input>\n                       <label for=\"female\" className={styles.genderlabel}>Female</label>\n                       <input type=\"radio\" name=\"gender\" id=\"others\" value=\"others\"></input>\n                       <label for=\"others\" className={styles.genderlabel}>Others</label>\n                   </div>\n                   <div className = {styles.mybd}>\n                       <input type=\"date\" id=\"mybirthday\"></input>\n                       <p className={styles.greywords}>It's my birthday</p>\n                   </div>\n                   <p className={styles.genderlabel}>Change Password ?</p>\n                       <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.updateUserState} className={styles.inputbox} id=\"pass\" placeholder=\"enter new password\"></input>\n                       <br/><span className={styles.warning}>{this.state.errors[\"password\"]}</span><br/>\n                       <input type=\"text\" className={styles.inputbox} id=\"repass\" placeholder=\"re-enter new password to confirm\"></input>\n                   </div>\n                   <button type=\"submit\" className={styles.submitbtn} onClick={this.UserUpdateAPIHandler}>Update</button>\n               </div>\n        )\n    }\n}\n\nexport default UpdateProfile;"]},"metadata":{},"sourceType":"module"}