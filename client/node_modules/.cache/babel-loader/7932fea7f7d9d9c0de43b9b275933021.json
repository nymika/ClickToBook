{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/MyProfile.module.css';\n\nclass UpdateProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.safelyParseJSON = json => {\n      var parsed;\n\n      try {\n        parsed = JSON.parse(json);\n      } catch (e) {// Oh well, but whatever...\n      }\n\n      return parsed; // Could be undefined!\n    };\n\n    this.updateUserState = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.UserUpdateAPIHandler = e => {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        // console.log('validation successful!');\n        console.log(this.state);\n        const user = {\n          name: {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName\n          },\n          phoneNumber: this.state.phoneNumber,\n          email: this.state.email,\n          userType: this.state.userType,\n          gender: 'female',\n          DOB: this.state.DOB\n        };\n        console.log(user);\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n        axios.put('http://localhost:3000/users/me', user).then(response => {\n          console.log(response.data);\n          this.setState({\n            name: {\n              firstName: response.data.name.firstName,\n              lastname: response.data.name.lastName\n            },\n            email: response.data.email,\n            userType: response.data.userType,\n            phoneNumber: response.data.phoneNumber,\n            gender: response.data.gender,\n            DOB: response.data.DOB // password: currentUser.userType,\n            // repassword: '',\n            // errors: {}\n\n          });\n          console.log('state is', this.state);\n          console.log(response.data);\n          alert('Profile updated!');\n          localStorage.setItem(\"currentUser\", JSON.stringify(response.data));\n          this.props.history.replace('/');\n          window.location.reload(false);\n        }).catch(e => alert(e));\n      } else {\n        alert(\"Form has errors.\");\n      }\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      password: '',\n      repassword: '',\n      userType: '',\n      gender: '',\n      DOB: '',\n      errors: {}\n    };\n    this.safelyParseJSON = this.safelyParseJSON.bind(this);\n    this.updateUserState = this.updateUserState.bind(this);\n    this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleValidation() {\n    let errors = {};\n    let formIsValid = true; //Password\n    // let password = this.state.password;\n    // let repass = this.state.repassword;\n    // if (password.length === 0) {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Cannot be empty\";\n    // }\n    // else if (password.length < 7) {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Password should contain 7 characters\";\n    // }\n    // if(password!==repass)\n    // {\n    //     formIsValid = false;\n    //     errors[\"password\"] = \"* Passwords don't match.\";\n    // }\n    //Email\n\n    let email = this.state.email;\n\n    if (email.length === 0) {\n      formIsValid = false;\n      errors[\"email\"] = \"* Cannot be empty\";\n    } else if (typeof email !== \"undefined\") {\n      let lastAtPos = email.lastIndexOf('@');\n      let lastDotPos = email.lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && email.length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"* Email is not valid\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  componentDidMount() {\n    const currentUserStorage = localStorage.getItem(\"currentUser\");\n    const currentUser = this.safelyParseJSON(currentUserStorage);\n    this.setState({\n      firstName: currentUser.name.firstName,\n      lastName: currentUser.name.lastName,\n      email: currentUser.email,\n      phoneNumber: currentUser.phoneNumber,\n      userType: currentUser.userType,\n      gender: currentUser.gender,\n      DOB: currentUser.DOB // password: currentUser.password,\n\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.profileBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.myName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"myname\",\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"mylastname\",\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.mymobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phoneNumber\",\n      value: this.state.phoneNumber,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"mobile\",\n      placeholder: \"Mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.updateUserState,\n      className: styles.inputbox,\n      id: \"email\",\n      placeholder: \"xyz@gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: styles.warning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.errors[\"email\"])), React.createElement(\"div\", {\n      className: styles.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.mygender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.greywords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Gender ?\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"male\",\n      value: \"male\",\n      checked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"male\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Male\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"female\",\n      value: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"female\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Female\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      id: \"others\",\n      value: \"others\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"others\",\n      className: styles.genderlabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Others\")), React.createElement(\"div\", {\n      className: styles.mybd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      name: \"DOB\",\n      value: this.state.DOB,\n      id: \"mybirthday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: styles.greywords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"It's my birthday\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: styles.usertype,\n      value: this.state.userType,\n      onChange: this.updateUserState,\n      name: \"userType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      value: \"customer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Customer\"), React.createElement(\"option\", {\n      value: \"vendor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"TheatreOwner\"), React.createElement(\"option\", {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Admin\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: styles.submitbtn,\n      onClick: this.UserUpdateAPIHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UpdateProfile;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/UpdateProfile.js"],"names":["React","Component","Link","axios","styles","UpdateProfile","constructor","props","safelyParseJSON","json","parsed","JSON","parse","e","updateUserState","event","setState","target","name","value","UserUpdateAPIHandler","preventDefault","handleValidation","console","log","state","user","firstName","lastName","phoneNumber","email","userType","gender","DOB","defaults","headers","common","localStorage","getItem","put","then","response","data","lastname","alert","setItem","stringify","history","replace","window","location","reload","catch","password","repassword","errors","bind","formIsValid","length","lastAtPos","lastIndexOf","lastDotPos","indexOf","componentDidMount","currentUserStorage","currentUser","render","profileBox","myName","inputbox","mymobile","warning","mygender","greywords","genderlabel","mybd","usertype","submitbtn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport styles from './stylesheets/MyProfile.module.css'\n\nclass UpdateProfile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phoneNumber: '',\n            password: '',\n            repassword: '',\n            userType: '',\n            gender: '',\n            DOB: '',\n            errors: {}\n        };\n        this.safelyParseJSON = this.safelyParseJSON.bind(this)\n        this.updateUserState = this.updateUserState.bind(this);\n        this.UserUpdateAPIHandler = this.UserUpdateAPIHandler.bind(this);\n        this.handleValidation = this.handleValidation.bind(this);\n    }\n\n    safelyParseJSON = (json) => {\n        var parsed\n        try {\n            parsed = JSON.parse(json)\n        } catch (e) {\n            // Oh well, but whatever...\n        }\n        return parsed // Could be undefined!\n    }\n\n    updateUserState = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleValidation() {\n        let errors = {};\n        let formIsValid = true;\n\n        //Password\n        // let password = this.state.password;\n        // let repass = this.state.repassword;\n        // if (password.length === 0) {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Cannot be empty\";\n        // }\n        // else if (password.length < 7) {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Password should contain 7 characters\";\n        // }\n        // if(password!==repass)\n        // {\n        //     formIsValid = false;\n        //     errors[\"password\"] = \"* Passwords don't match.\";\n        // }\n\n        //Email\n        let email = this.state.email;\n        if (email.length === 0) {\n            formIsValid = false;\n            errors[\"email\"] = \"* Cannot be empty\";\n        }\n        else if (typeof email !== \"undefined\") {\n            let lastAtPos = email.lastIndexOf('@');\n            let lastDotPos = email.lastIndexOf('.');\n\n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\n                formIsValid = false;\n                errors[\"email\"] = \"* Email is not valid\";\n            }\n        }\n\n        this.setState({ errors: errors });\n        return formIsValid;\n    }\n\n    UserUpdateAPIHandler = (e) => {\n        e.preventDefault();\n        if (this.handleValidation()) {\n            // console.log('validation successful!');\n            console.log(this.state);\n            const user = {\n                name: {\n                    firstName: this.state.firstName,\n                    lastName: this.state.lastName\n                },\n                phoneNumber: this.state.phoneNumber,\n                email: this.state.email,\n                userType: this.state.userType,\n                gender : 'female',\n                DOB : this.state.DOB\n            };\n            console.log(user)\n            axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n            axios.put('http://localhost:3000/users/me', user)\n                .then(response => {\n\n                    console.log(response.data)\n                    this.setState({\n                        name: {\n                            firstName: response.data.name.firstName,\n                            lastname: response.data.name.lastName,\n                        },\n                        email: response.data.email,\n                        userType: response.data.userType,\n                        phoneNumber: response.data.phoneNumber,\n                        gender : response.data.gender,\n                        DOB : response.data.DOB\n                        // password: currentUser.userType,\n                        // repassword: '',\n                        // errors: {}\n                    })\n                    console.log('state is', this.state)\n                    console.log(response.data);\n                    alert('Profile updated!')\n                    localStorage.setItem(\"currentUser\", JSON.stringify(response.data))\n                    this.props.history.replace('/');\n                    window.location.reload(false);\n                }).catch((e) => alert(e));\n        }\n        else {\n            alert(\"Form has errors.\")\n        }\n    }\n\n    componentDidMount() {\n        const currentUserStorage = localStorage.getItem(\"currentUser\");\n        const currentUser = this.safelyParseJSON(currentUserStorage);\n\n        this.setState({\n\n            firstName: currentUser.name.firstName,\n            lastName: currentUser.name.lastName,\n\n            email: currentUser.email,\n            phoneNumber: currentUser.phoneNumber,\n            userType: currentUser.userType,\n            gender : currentUser.gender,\n            DOB : currentUser.DOB\n            // password: currentUser.password,\n        });\n    }\n\n    render() {\n        return (\n            <div className={styles.profileBox}>\n                <div className={styles.myName}>\n                    <input type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.updateUserState} className={styles.inputbox} id=\"myname\" placeholder=\"First Name\"></input>\n                    <input type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.updateUserState} className={styles.inputbox} id=\"mylastname\" placeholder=\"Last Name\"></input>\n                </div>\n                <div className={styles.mymobile}>\n                    <input type=\"text\" name=\"phoneNumber\" value={this.state.phoneNumber} onChange={this.updateUserState} className={styles.inputbox} id=\"mobile\" placeholder=\"Mobile\"></input>\n                </div>\n                <div className={styles.email}>\n                    <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.updateUserState} className={styles.inputbox} id=\"email\" placeholder=\"xyz@gmail.com\"></input>\n                    <br /><span className={styles.warning}>{this.state.errors[\"email\"]}</span>\n                </div>\n                <div className={styles.password}>\n                    <div className={styles.mygender}>\n                        <p className={styles.greywords}>Gender ?</p>\n                        <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" checked></input>\n                        <label for=\"male\" className={styles.genderlabel}>Male</label>\n                        <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\"></input>\n                        <label for=\"female\" className={styles.genderlabel}>Female</label>\n                        <input type=\"radio\" name=\"gender\" id=\"others\" value=\"others\"></input>\n                        <label for=\"others\" className={styles.genderlabel}>Others</label>\n                    </div>\n                    <div className={styles.mybd}>\n                        <input type=\"date\" name='DOB' value={this.state.DOB} id=\"mybirthday\"></input>\n                        <p className={styles.greywords}>It's my birthday</p>\n                    </div>\n                    {/* <p className={styles.genderlabel}>Change Password ?</p>\n                    <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.updateUserState} className={styles.inputbox} id=\"pass\" placeholder=\"enter new password\"></input>\n                    <br /><span className={styles.warning}>{this.state.errors[\"password\"]}</span><br /> */}\n                    {/* <input type=\"text\" className={styles.inputbox} id=\"repass\" placeholder=\"re-enter new password to confirm\"></input> */}\n                </div>\n                <div>\n                    <select className={styles.usertype} value={this.state.userType} onChange={this.updateUserState} name=\"userType\">\n                        <option selected value=\"customer\">Customer</option>\n                        <option value=\"vendor\">TheatreOwner</option>\n                        <option value=\"admin\">Admin</option>\n                    </select>\n                </div>\n                <div>\n                    <button type=\"submit\" className={styles.submitbtn} onClick={this.UserUpdateAPIHandler}>Update</button>\n                </div>\n                <br /><br />\n                {/* <div>\n                    <Link to='/userDelete'>\n                        <button type=\"submit\" className={styles.submitbtn}>Delete Account</button>\n                    </Link>\n                </div> */}\n            </div>\n        )\n    }\n}\n\nexport default UpdateProfile;"]},"metadata":{},"sourceType":"module"}