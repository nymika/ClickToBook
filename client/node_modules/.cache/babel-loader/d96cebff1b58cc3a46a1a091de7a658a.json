{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/AddTheatre.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport styles from './stylesheets/AddTheatre.module.css';\n\nclass AddTheatre extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTheatreState = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.updateLocation = e => {\n      this.setState({\n        location: { ...this.state.location,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      let slots = [...this.state.slotInfo];\n      slots[e.target.dataset.id][e.target.name] = e.target.value;\n      this.setState({\n        slotInfo: slots\n      });\n    };\n\n    this.addShowbtn = event => {\n      this.setState(prevState => ({\n        slotInfo: [...prevState.slotInfo, {\n          startTime: '',\n          endTime: ''\n        }]\n      }));\n    };\n\n    this.AddTheatreAPIHandler = e => {\n      //e.preventDefault()\n      console.log('theatre added!');\n      const theatre = this.state;\n      axios.post('http://localhost:3001/addtheatre', theatre).then(response => {\n        console.log('theatre added!');\n        console.log(response.data);\n      }).catch(e => alert(e));\n      this.setState({\n        name: '',\n        location: {\n          country: '',\n          state: '',\n          city: '',\n          street: ''\n        },\n        seatInfo: {\n          A: '6',\n          B: '12'\n        },\n        slotInfo: [{\n          startTime: '',\n          endTime: ''\n        }],\n        leaseInfo: {\n          lastDate: '',\n          startDate: ''\n        }\n      });\n    };\n\n    this.state = {\n      name: '',\n      location: {\n        country: '',\n        state: '',\n        city: '',\n        street: ''\n      },\n      seatInfo: {\n        A: '6',\n        B: '12'\n      },\n      slotInfo: [{\n        startTime: '',\n        endTime: ''\n      }],\n      leaseInfo: {\n        lastDate: '',\n        startDate: ''\n      }\n    };\n    this.updateTheatreState = this.updateTheatreState.bind(this);\n    this.addShowbtn = this.addShowbtn.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.AddTheatre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: styles.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Add Theatre : \"), React.createElement(\"p\", {\n      className: styles.task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" Enter the Theatre Name : \"), React.createElement(\"input\", {\n      className: styles.inputbox,\n      type: \"text\",\n      placeholder: \"Theatre Name\",\n      name: \"theatreName\",\n      value: this.state.name,\n      onChange: this.updateTheatreState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: styles.task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" Enter the Location : \"), React.createElement(\"input\", {\n      className: styles.inputbox,\n      type: \"text\",\n      placeholder: \" Enter Street\",\n      name: \"street\",\n      value: this.state.location.street,\n      onChange: this.updateLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: styles.inputbox,\n      type: \"text\",\n      placeholder: \" Enter City Name\",\n      name: \"city\",\n      value: this.state.location.city,\n      onChange: this.updateLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: styles.inputbox,\n      type: \"text\",\n      placeholder: \" Enter State Name\",\n      name: \"state\",\n      value: this.state.location.state,\n      onChange: this.updateLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: styles.inputbox,\n      type: \"text\",\n      placeholder: \" Enter Country Name\",\n      name: \"country\",\n      value: this.state.location.country,\n      onChange: this.updateLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: styles.task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Add ShowTimes :\"), React.createElement(\"button\", {\n      className: styles.addShowbtn,\n      onClick: this.addShowbtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), this.state.slotInfo.map((val, idx) => {\n      let startTimeId = `start-${idx}`,\n          endTimeId = `end-${idx}`;\n      return React.createElement(\"div\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: startTimeId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, `Show #${idx + 1}`), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: styles.inputbox,\n        type: \"text\",\n        placeholder: \"START TIME- put 7:30 as 0730\",\n        name: \"startTime\",\n        \"data-id\": idx,\n        id: startTimeId,\n        value: this.state.slotInfo[idx].startTime,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: styles.inputbox,\n        type: \"text\",\n        placeholder: \"END TIME- put 7:30 as 0730\",\n        name: \"endTime\",\n        \"data-id\": idx,\n        id: endTimeId,\n        value: this.state.slotInfo[idx].endTime,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: styles.submitbutton,\n      type: \"submit\",\n      onClick: this.AddTheatreAPIHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AddTheatre;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Theatre Owner/AddTheatre.js"],"names":["React","Component","axios","styles","AddTheatre","constructor","props","updateTheatreState","event","setState","target","name","value","updateLocation","e","location","state","handleChange","slots","slotInfo","dataset","id","addShowbtn","prevState","startTime","endTime","AddTheatreAPIHandler","console","log","theatre","post","then","response","data","catch","alert","country","city","street","seatInfo","A","B","leaseInfo","lastDate","startDate","bind","render","heading","task","inputbox","map","val","idx","startTimeId","endTimeId","submitbutton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport styles from './stylesheets/AddTheatre.module.css'\r\n\r\nclass AddTheatre extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            location: {\r\n                country: '',\r\n                state: '',\r\n                city: '',\r\n                street: ''\r\n            },\r\n            seatInfo: {\r\n                A: '6',\r\n                B: '12'\r\n            },\r\n            slotInfo: [\r\n                {\r\n                    startTime: '', endTime: ''\r\n                },\r\n            ],\r\n            leaseInfo: {\r\n                lastDate: '', startDate: ''\r\n            }\r\n        }\r\n        this.updateTheatreState = this.updateTheatreState.bind(this);\r\n        this.addShowbtn = this.addShowbtn.bind(this);\r\n    }\r\n\r\n    updateTheatreState = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    updateLocation = (e) => {\r\n        this.setState({\r\n            location: {\r\n                ...this.state.location,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let slots = [...this.state.slotInfo]\r\n        slots[e.target.dataset.id][e.target.name] = e.target.value\r\n        this.setState({\r\n            slotInfo: slots\r\n        })\r\n    }\r\n    addShowbtn = (event) => {\r\n        this.setState((prevState) => ({\r\n            slotInfo: [...prevState.slotInfo, { startTime: '', endTime: '' }],\r\n        }))\r\n    }\r\n\r\n    AddTheatreAPIHandler = (e) => {\r\n        //e.preventDefault()\r\n        console.log('theatre added!')\r\n        const theatre = this.state\r\n        axios.post('http://localhost:3001/addtheatre', theatre)\r\n            .then(response => {\r\n                console.log('theatre added!')\r\n                console.log(response.data)\r\n            }).catch((e) => alert(e));\r\n        this.setState({\r\n            name: '',\r\n            location: {\r\n                country: '',\r\n                state: '',\r\n                city: '',\r\n                street: ''\r\n            },\r\n            seatInfo: {\r\n                A: '6',\r\n                B: '12'\r\n            },\r\n            slotInfo: [\r\n                {\r\n                    startTime: '', endTime: ''\r\n                },\r\n            ],\r\n            leaseInfo: {\r\n                lastDate: '', startDate: ''\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.AddTheatre}>\r\n                <h1 className={styles.heading} >Add Theatre : </h1>\r\n\r\n\r\n                <p className={styles.task}> Enter the Theatre Name : </p>\r\n                <input className={styles.inputbox} type=\"text\" placeholder=\"Theatre Name\"\r\n                    name=\"theatreName\" value={this.state.name} onChange={this.updateTheatreState} />\r\n\r\n\r\n                <p className={styles.task}> Enter the Location : </p>\r\n                <input className={styles.inputbox} type=\"text\" placeholder=\" Enter Street\"\r\n                    name=\"street\" value={this.state.location.street} onChange={this.updateLocation} />\r\n                <br></br>\r\n                <input className={styles.inputbox} type=\"text\" placeholder=\" Enter City Name\"\r\n                    name=\"city\" value={this.state.location.city} onChange={this.updateLocation} />\r\n                <br></br>\r\n                <input className={styles.inputbox} type=\"text\" placeholder=\" Enter State Name\"\r\n                    name=\"state\" value={this.state.location.state} onChange={this.updateLocation} />\r\n                <br></br>\r\n                <input className={styles.inputbox} type=\"text\" placeholder=\" Enter Country Name\"\r\n                    name=\"country\" value={this.state.location.country} onChange={this.updateLocation} />\r\n\r\n\r\n                <p className={styles.task}>Add ShowTimes :</p>\r\n\r\n                <button className={styles.addShowbtn} onClick={this.addShowbtn}></button>\r\n                {\r\n                    this.state.slotInfo.map((val, idx) => {\r\n                        let startTimeId = `start-${idx}`, endTimeId = `end-${idx}`\r\n                        return (\r\n                            <div key={idx}>\r\n                                <label htmlFor={startTimeId}>{`Show #${idx + 1}`}</label><br></br>\r\n                                <input className={styles.inputbox} type=\"text\" placeholder=\"START TIME- put 7:30 as 0730\"\r\n                                    name='startTime' data-id={idx} id={startTimeId} value={this.state.slotInfo[idx].startTime} onChange={this.handleChange} />\r\n                                <input className={styles.inputbox} type=\"text\" placeholder=\"END TIME- put 7:30 as 0730\"\r\n                                    name='endTime' data-id={idx} id={endTimeId} value={this.state.slotInfo[idx].endTime} onChange={this.handleChange} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <br></br>\r\n                <input className={styles.submitbutton} type=\"submit\" onClick={this.AddTheatreAPIHandler} />\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTheatre;"]},"metadata":{},"sourceType":"module"}