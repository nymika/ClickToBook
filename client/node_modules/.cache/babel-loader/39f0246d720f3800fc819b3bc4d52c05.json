{"ast":null,"code":"var _jsxFileName = \"/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/MovieDetailPage.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './stylesheets/MovieDetailPage.module.css';\nimport MovieDetailReviewBox from \"./MovieDetailReviewBox\";\nimport ShowTheatres from \"./ShowTheatres\";\nimport tick from './images/tick.png'; // import deadpool from \"./images/deadpool.jpg\";\n// import alice from \"./images/alice.jpg\";\n// import harrypotter from \"./images/deathly-hallows-p2-2.jpg\";\n// import FF from \"./images/fast-five-2.jpg\";\n// import batman from \"./images/batman-v-superman-dawn-of-justice-3.jpg\";\n// import alpha from \"./images/alpha-alert-1.jpg\";\n\nclass MovieDetailPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      yourRating: '',\n      currentUser: {}\n    };\n\n    this.safelyParseJSON = json => {\n      var parsed;\n\n      try {\n        parsed = JSON.parse(json);\n      } catch (e) {// Oh well, but whatever...\n      }\n\n      return parsed; // Could be undefined!\n    };\n\n    this.ShowMoviesAPIHandler = () => {\n      axios.get('http://localhost:3000/getmovies').then(response => {\n        this.setState({\n          movies: response.data\n        });\n      }).catch(e => alert(e));\n    };\n\n    this.updateUserRatingState = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.UserUpdateAPIHandler = e => {\n      console.log(this.state.currentUser);\n    };\n  }\n\n  componentDidMount() {\n    this.ShowMoviesAPIHandler();\n    const currentUserStorage = localStorage.getItem(\"currentUser\");\n    const currentUser = this.safelyParseJSON(currentUserStorage);\n    this.setState({\n      currentUser: currentUser\n    });\n  }\n\n  render() {\n    var selectedMovieId = this.props.match.params.id;\n    var selectedMovie = null;\n    this.state.movies.filter(movie => {\n      return movie._id === selectedMovieId ? selectedMovie = movie : null;\n    });\n    console.log(selectedMovie);\n\n    if (selectedMovie) {\n      return React.createElement(\"div\", {\n        className: styles.separateMoviePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.MovieDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.Movieposterbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: selectedMovie.poster,\n        alt: \"my movie poster\",\n        className: styles.Movieposter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.Movieinfobox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: styles.Movietitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, selectedMovie.title), React.createElement(\"h3\", {\n        className: styles.MovieGenre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, selectedMovie.genres), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"U , \", selectedMovie.language, \" , 2D\"), React.createElement(\"div\", {\n        className: styles.Movieratingbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.MovieRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, selectedMovie.rating), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"User's Rating\")), React.createElement(\"div\", {\n        className: styles.MovieRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, selectedMovie.rating), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Critic's Rating\")), React.createElement(\"div\", {\n        className: styles.MovieRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: styles.yourrating,\n        type: \"text\",\n        typeholder: \"out of 5\",\n        value: this.state.yourRating,\n        onChange: this.updateUserRatingState,\n        name: \"yourRating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.UserUpdateAPIHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: styles.tick,\n        src: tick,\n        alt: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"You rate it\"))), React.createElement(Link, {\n        to: this.props.match.url + '/ShowTheatres',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => window.scrollTo(0, 500),\n        className: styles.Moviebookticket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"BOOK TICKETS\")), React.createElement(\"div\", {\n        className: styles.Summaryreviewsheading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: styles.Summaryreviews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: styles.SummaryLink,\n        to: this.props.match.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: styles.summaryreviewslist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Summary\")), React.createElement(Link, {\n        className: styles.SummaryLink,\n        to: this.props.match.url + \"/User's Reviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: styles.summaryreviewslist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"User's Reviews\")), React.createElement(Link, {\n        className: styles.SummaryLink,\n        to: this.props.match.url + \"/Critic's Reviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: styles.summaryreviewslist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Critic's Reviews\")))), React.createElement(\"div\", {\n        className: styles.Moviesummarybox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/MovieDetailPage/:id\",\n        exact: true,\n        render: () => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"Movie-Description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, selectedMovie.synopsis), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"Date of Release : \", selectedMovie.releaseDate, \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Duration : \", selectedMovie.runtime, \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Starring : \", selectedMovie.actors), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Directed : \", selectedMovie.director)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/MovieDetailPage/:id/User's Reviews\",\n        exact: true,\n        component: MovieDetailReviewBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/MovieDetailPage/:id/Critic's Reviews\",\n        exact: true,\n        component: MovieDetailReviewBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })))), React.createElement(Route, {\n        path: this.props.match.url + \"/ShowTheatres\",\n        component: ShowTheatres,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n    } else return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n}\n\nexport default MovieDetailPage;","map":{"version":3,"sources":["/home/nymika/Documents/ClickToBook/clicktobook/client/src/components/Customer/MovieDetailPage.js"],"names":["React","Component","Route","Link","axios","styles","MovieDetailReviewBox","ShowTheatres","tick","MovieDetailPage","state","movies","yourRating","currentUser","safelyParseJSON","json","parsed","JSON","parse","e","ShowMoviesAPIHandler","get","then","response","setState","data","catch","alert","updateUserRatingState","event","target","name","value","UserUpdateAPIHandler","console","log","componentDidMount","currentUserStorage","localStorage","getItem","render","selectedMovieId","props","match","params","id","selectedMovie","filter","movie","_id","separateMoviePage","MovieDetail","Movieposterbox","poster","Movieposter","Movieinfobox","Movietitle","title","MovieGenre","genres","language","Movieratingbox","MovieRating","rating","yourrating","url","window","scrollTo","Moviebookticket","Summaryreviewsheading","Summaryreviews","SummaryLink","summaryreviewslist","Moviesummarybox","synopsis","releaseDate","runtime","actors","director"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport styles from './stylesheets/MovieDetailPage.module.css';\nimport MovieDetailReviewBox from \"./MovieDetailReviewBox\";\nimport ShowTheatres from \"./ShowTheatres\";\nimport tick from './images/tick.png';\n\n// import deadpool from \"./images/deadpool.jpg\";\n// import alice from \"./images/alice.jpg\";\n// import harrypotter from \"./images/deathly-hallows-p2-2.jpg\";\n// import FF from \"./images/fast-five-2.jpg\";\n// import batman from \"./images/batman-v-superman-dawn-of-justice-3.jpg\";\n// import alpha from \"./images/alpha-alert-1.jpg\";\n\nclass MovieDetailPage extends Component {\n\n    state = {\n        movies: [],\n        yourRating: '',\n        currentUser : {}\n    }\n\n    safelyParseJSON = (json) => {\n        var parsed\n        try {\n            parsed = JSON.parse(json)\n        } catch (e) {\n            // Oh well, but whatever...\n        }\n        return parsed // Could be undefined!\n    }\n\n    ShowMoviesAPIHandler = () => {\n        axios.get('http://localhost:3000/getmovies')\n            .then(response => {\n                this.setState({\n                    movies: response.data\n                });\n            }).catch((e) => alert(e));\n    }\n\n    updateUserRatingState = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    UserUpdateAPIHandler = (e) => {\n        console.log(this.state.currentUser)\n    }\n\n    componentDidMount() {\n        this.ShowMoviesAPIHandler();\n        const currentUserStorage = localStorage.getItem(\"currentUser\");\n        const currentUser = this.safelyParseJSON(currentUserStorage);\n        this.setState({\n            currentUser : currentUser\n        })\n    }\n\n    render() {\n        var selectedMovieId = this.props.match.params.id;\n        var selectedMovie = null;\n        this.state.movies.filter(movie => {\n            return (\n                (movie._id === selectedMovieId) ?\n                    selectedMovie = movie : null\n            )\n        }\n        );\n        console.log(selectedMovie);\n        if (selectedMovie) {\n            return (\n                <div className={styles.separateMoviePage}>\n                    <div className={styles.MovieDetail}>\n\n                        <div className={styles.Movieposterbox}>\n                            <img src={selectedMovie.poster} alt=\"my movie poster\" className={styles.Movieposter} />\n                        </div>\n\n                        <div className={styles.Movieinfobox}>\n                            <h1 className={styles.Movietitle}>{selectedMovie.title}</h1>\n                            <h3 className={styles.MovieGenre}>{selectedMovie.genres}</h3>\n                            <h4>U , {selectedMovie.language} , 2D</h4>\n                            <div className={styles.Movieratingbox}>\n                                <div className={styles.MovieRating}>\n                                    <p>{selectedMovie.rating}</p>\n                                    <p>User's Rating</p>\n                                </div>\n                                <div className={styles.MovieRating}>\n                                    <p>{selectedMovie.rating}</p>\n                                    <p>Critic's Rating</p>\n                                </div>\n                                <div className={styles.MovieRating}>\n                                    <input className={styles.yourrating} type=\"text\" typeholder=\"out of 5\"\n                                        value={this.state.yourRating} onChange={this.updateUserRatingState} name='yourRating' />\n                                    <button type=\"submit\" onClick={this.UserUpdateAPIHandler}><img className={styles.tick} src={tick} alt=\"submit\" /></button>\n                                    <p>You rate it</p>\n                                </div>\n                            </div>\n                            <Link to={this.props.match.url + '/ShowTheatres'} >\n                                <button onClick={() => window.scrollTo(0, 500)} className={styles.Moviebookticket}>BOOK TICKETS</button>\n                            </Link>\n                            <div className={styles.Summaryreviewsheading}>\n                                <ul className={styles.Summaryreviews}>\n                                    <Link className={styles.SummaryLink} to={this.props.match.url}><li className={styles.summaryreviewslist}>Summary</li></Link>\n                                    <Link className={styles.SummaryLink} to={this.props.match.url + \"/User's Reviews\"}><li className={styles.summaryreviewslist}>User's Reviews</li></Link>\n                                    <Link className={styles.SummaryLink} to={this.props.match.url + \"/Critic's Reviews\"}><li className={styles.summaryreviewslist}>Critic's Reviews</li></Link>\n                                </ul>\n                            </div>\n\n                            <div className={styles.Moviesummarybox}>\n                                <Route path=\"/MovieDetailPage/:id\" exact render={() =>\n                                    <div>\n                                        <p className=\"Movie-Description\">{selectedMovie.synopsis}</p>\n                                        <p>Date of Release : {selectedMovie.releaseDate} </p>\n                                        <p>Duration : {selectedMovie.runtime} </p>\n                                        <p>Starring : {selectedMovie.actors}</p>\n                                        <p>Directed : {selectedMovie.director}</p>\n                                    </div>} />\n                                <Route path=\"/MovieDetailPage/:id/User's Reviews\" exact component={MovieDetailReviewBox} />\n                                <Route path=\"/MovieDetailPage/:id/Critic's Reviews\" exact component={MovieDetailReviewBox} />\n                            </div>\n                        </div>\n                    </div>\n                    <Route path={this.props.match.url + \"/ShowTheatres\"} component={ShowTheatres} />\n\n                </div>\n            )\n        }\n        else\n            return (\n                <h1>Loading</h1>\n            )\n    }\n}\n\nexport default MovieDetailPage"]},"metadata":{},"sourceType":"module"}